{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0","program":"/Users/masatoshi/.rustup/toolchains/nightly-x86_64-apple-darwin/bin/rls","arguments":["--edition=2018","--crate-name","itertools","/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"use_std\"","-C","metadata=69bca00125eef326","-C","extra-filename=-69bca00125eef326","--out-dir","/Users/masatoshi/Documents/atcoder/dp/target/rls/debug/deps","-L","dependency=/Users/masatoshi/Documents/atcoder/dp/target/rls/debug/deps","--extern","either=/Users/masatoshi/Documents/atcoder/dp/target/rls/debug/deps/libeither-ebc0d18a27fe2423.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/masatoshi/.rustup/toolchains/nightly-x86_64-apple-darwin"],"output":"/Users/masatoshi/Documents/atcoder/dp/target/rls/debug/deps/libitertools-69bca00125eef326.rmeta"},"prelude":{"crate_id":{"name":"itertools","disambiguator":[98398607622270886,2937137116917692514]},"crate_root":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src","external_crates":[{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[10613055454315904869,2811732849881954636]}},{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[391827052702496084,5129134181362070381]}},{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[4281604570573728273,9331809846264551407]}},{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[16197749903097291620,17943825029647261869]}},{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[10845582213263607778,379097389567409069]}},{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[844407882680543608,18229321760257986125]}},{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[3570085749873741306,6541745440181859048]}},{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[2578273522758280898,17913597462815022013]}},{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[735647405049555546,6998326938186734761]}},{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[10449409484459928313,13344031615333270257]}},{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[886225832632004317,14255593997978316403]}},{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[2255118238040761479,18238811431415079153]}},{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[16030725988839514509,13221492198480567872]}},{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[4378005683902666456,14285554179360740773]}},{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","num":15,"id":{"name":"either","disambiguator":[9710870749486380430,5109345448129762727]}}],"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":0,"byte_end":91090,"line_start":1,"line_end":2721,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":15,"index":186},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":1424,"byte_end":1430,"line_start":53,"line_end":53,"column_start":17,"column_end":23},"alias_span":null,"name":"Either","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":2,"index":3288},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":1901,"byte_end":1905,"line_start":74,"line_end":74,"column_start":14,"column_end":18},"alias_span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":1909,"byte_end":1919,"line_start":74,"line_end":74,"column_start":22,"column_end":32},"name":"__std_iter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":302},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":2012,"byte_end":2017,"line_start":79,"line_end":79,"column_start":9,"column_end":14},"alias_span":null,"name":"Dedup","value":"","parent":{"krate":0,"index":19}},{"kind":"Use","ref_id":{"krate":0,"index":287},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":2027,"byte_end":2034,"line_start":80,"line_end":80,"column_start":9,"column_end":16},"alias_span":null,"name":"DedupBy","value":"","parent":{"krate":0,"index":19}},{"kind":"Use","ref_id":{"krate":0,"index":1607},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":2044,"byte_end":2054,"line_start":81,"line_end":81,"column_start":9,"column_end":19},"alias_span":null,"name":"Interleave","value":"","parent":{"krate":0,"index":19}},{"kind":"Use","ref_id":{"krate":0,"index":1621},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":2064,"byte_end":2082,"line_start":82,"line_end":82,"column_start":9,"column_end":27},"alias_span":null,"name":"InterleaveShortest","value":"","parent":{"krate":0,"index":19}},{"kind":"Use","ref_id":{"krate":0,"index":1645},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":2092,"byte_end":2099,"line_start":83,"line_end":83,"column_start":9,"column_end":16},"alias_span":null,"name":"Product","value":"","parent":{"krate":0,"index":19}},{"kind":"Use","ref_id":{"krate":0,"index":1635},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":2109,"byte_end":2116,"line_start":84,"line_end":84,"column_start":9,"column_end":16},"alias_span":null,"name":"PutBack","value":"","parent":{"krate":0,"index":19}},{"kind":"Use","ref_id":{"krate":0,"index":1660},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":2126,"byte_end":2134,"line_start":85,"line_end":85,"column_start":9,"column_end":17},"alias_span":null,"name":"Batching","value":"","parent":{"krate":0,"index":19}},{"kind":"Use","ref_id":{"krate":0,"index":1821},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":2144,"byte_end":2151,"line_start":86,"line_end":86,"column_start":9,"column_end":16},"alias_span":null,"name":"MapInto","value":"","parent":{"krate":0,"index":19}},{"kind":"Use","ref_id":{"krate":0,"index":1830},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":2161,"byte_end":2171,"line_start":87,"line_end":87,"column_start":9,"column_end":19},"alias_span":null,"name":"MapResults","value":"","parent":{"krate":0,"index":19}},{"kind":"Use","ref_id":{"krate":0,"index":225},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":2181,"byte_end":2186,"line_start":88,"line_end":88,"column_start":9,"column_end":14},"alias_span":null,"name":"Merge","value":"","parent":{"krate":0,"index":19}},{"kind":"Use","ref_id":{"krate":0,"index":231},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":2196,"byte_end":2203,"line_start":89,"line_end":89,"column_start":9,"column_end":16},"alias_span":null,"name":"MergeBy","value":"","parent":{"krate":0,"index":19}},{"kind":"Use","ref_id":{"krate":0,"index":326},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":2213,"byte_end":2225,"line_start":90,"line_end":90,"column_start":9,"column_end":21},"alias_span":null,"name":"TakeWhileRef","value":"","parent":{"krate":0,"index":19}},{"kind":"Use","ref_id":{"krate":0,"index":1705},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":2235,"byte_end":2244,"line_start":91,"line_end":91,"column_start":9,"column_end":18},"alias_span":null,"name":"WhileSome","value":"","parent":{"krate":0,"index":19}},{"kind":"Use","ref_id":{"krate":0,"index":267},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":2254,"byte_end":2262,"line_start":92,"line_end":92,"column_start":9,"column_end":17},"alias_span":null,"name":"Coalesce","value":"","parent":{"krate":0,"index":19}},{"kind":"Use","ref_id":{"krate":0,"index":1714},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":2272,"byte_end":2289,"line_start":93,"line_end":93,"column_start":9,"column_end":26},"alias_span":null,"name":"TupleCombinations","value":"","parent":{"krate":0,"index":19}},{"kind":"Use","ref_id":{"krate":0,"index":1839},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":2299,"byte_end":2308,"line_start":94,"line_end":94,"column_start":9,"column_end":18},"alias_span":null,"name":"Positions","value":"","parent":{"krate":0,"index":19}},{"kind":"Use","ref_id":{"krate":0,"index":1849},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":2318,"byte_end":2324,"line_start":95,"line_end":95,"column_start":9,"column_end":15},"alias_span":null,"name":"Update","value":"","parent":{"krate":0,"index":19}},{"kind":"Use","ref_id":{"krate":0,"index":1670},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":2387,"byte_end":2391,"line_start":98,"line_end":98,"column_start":30,"column_end":34},"alias_span":null,"name":"Step","value":"","parent":{"krate":0,"index":19}},{"kind":"Use","ref_id":{"krate":0,"index":1582},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":2454,"byte_end":2466,"line_start":100,"line_end":100,"column_start":30,"column_end":42},"alias_span":null,"name":"MultiProduct","value":"","parent":{"krate":0,"index":19}},{"kind":"Use","ref_id":{"krate":0,"index":569},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":2533,"byte_end":2545,"line_start":102,"line_end":102,"column_start":34,"column_end":46},"alias_span":null,"name":"Combinations","value":"","parent":{"krate":0,"index":19}},{"kind":"Use","ref_id":{"krate":0,"index":2060},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":2629,"byte_end":2656,"line_start":104,"line_end":104,"column_start":51,"column_end":78},"alias_span":null,"name":"CombinationsWithReplacement","value":"","parent":{"krate":0,"index":19}},{"kind":"Use","ref_id":{"krate":0,"index":2049},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":2695,"byte_end":2705,"line_start":105,"line_end":105,"column_start":38,"column_end":48},"alias_span":null,"name":"ConsTuples","value":"","parent":{"krate":0,"index":19}},{"kind":"Use","ref_id":{"krate":0,"index":2071},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":2743,"byte_end":2758,"line_start":106,"line_end":106,"column_start":37,"column_end":52},"alias_span":null,"name":"ExactlyOneError","value":"","parent":{"krate":0,"index":19}},{"kind":"Use","ref_id":{"krate":0,"index":2092},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":2788,"byte_end":2794,"line_start":107,"line_end":107,"column_start":29,"column_end":35},"alias_span":null,"name":"Format","value":"","parent":{"krate":0,"index":19}},{"kind":"Use","ref_id":{"krate":0,"index":2081},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":2796,"byte_end":2806,"line_start":107,"line_end":107,"column_start":37,"column_end":47},"alias_span":null,"name":"FormatWith","value":"","parent":{"krate":0,"index":19}},{"kind":"Use","ref_id":{"krate":0,"index":788},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":2874,"byte_end":2884,"line_start":109,"line_end":109,"column_start":34,"column_end":44},"alias_span":null,"name":"IntoChunks","value":"","parent":{"krate":0,"index":19}},{"kind":"Use","ref_id":{"krate":0,"index":812},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":2886,"byte_end":2891,"line_start":109,"line_end":109,"column_start":46,"column_end":51},"alias_span":null,"name":"Chunk","value":"","parent":{"krate":0,"index":19}},{"kind":"Use","ref_id":{"krate":0,"index":802},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":2893,"byte_end":2899,"line_start":109,"line_end":109,"column_start":53,"column_end":59},"alias_span":null,"name":"Chunks","value":"","parent":{"krate":0,"index":19}},{"kind":"Use","ref_id":{"krate":0,"index":727},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":2901,"byte_end":2908,"line_start":109,"line_end":109,"column_start":61,"column_end":68},"alias_span":null,"name":"GroupBy","value":"","parent":{"krate":0,"index":19}},{"kind":"Use","ref_id":{"krate":0,"index":765},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":2910,"byte_end":2915,"line_start":109,"line_end":109,"column_start":70,"column_end":75},"alias_span":null,"name":"Group","value":"","parent":{"krate":0,"index":19}},{"kind":"Use","ref_id":{"krate":0,"index":751},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":2917,"byte_end":2923,"line_start":109,"line_end":109,"column_start":77,"column_end":83},"alias_span":null,"name":"Groups","value":"","parent":{"krate":0,"index":19}},{"kind":"Use","ref_id":{"krate":0,"index":2143},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":2958,"byte_end":2969,"line_start":110,"line_end":110,"column_start":33,"column_end":44},"alias_span":null,"name":"Intersperse","value":"","parent":{"krate":0,"index":19}},{"kind":"Use","ref_id":{"krate":0,"index":860},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":3036,"byte_end":3042,"line_start":112,"line_end":112,"column_start":34,"column_end":40},"alias_span":null,"name":"KMerge","value":"","parent":{"krate":0,"index":19}},{"kind":"Use","ref_id":{"krate":0,"index":874},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":3044,"byte_end":3052,"line_start":112,"line_end":112,"column_start":42,"column_end":50},"alias_span":null,"name":"KMergeBy","value":"","parent":{"krate":0,"index":19}},{"kind":"Use","ref_id":{"krate":0,"index":923},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":3086,"byte_end":3097,"line_start":113,"line_end":113,"column_start":32,"column_end":43},"alias_span":null,"name":"MergeJoinBy","value":"","parent":{"krate":0,"index":19}},{"kind":"Use","ref_id":{"krate":0,"index":2206},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":3166,"byte_end":3175,"line_start":115,"line_end":115,"column_start":36,"column_end":45},"alias_span":null,"name":"MultiPeek","value":"","parent":{"krate":0,"index":19}},{"kind":"Use","ref_id":{"krate":0,"index":2217},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":3206,"byte_end":3214,"line_start":116,"line_end":116,"column_start":30,"column_end":38},"alias_span":null,"name":"PadUsing","value":"","parent":{"krate":0,"index":19}},{"kind":"Use","ref_id":{"krate":0,"index":1019},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":3255,"byte_end":3271,"line_start":117,"line_end":117,"column_start":40,"column_end":56},"alias_span":null,"name":"PeekingTakeWhile","value":"","parent":{"krate":0,"index":19}},{"kind":"Use","ref_id":{"krate":0,"index":1040},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":3338,"byte_end":3350,"line_start":119,"line_end":119,"column_start":34,"column_end":46},"alias_span":null,"name":"Permutations","value":"","parent":{"krate":0,"index":19}},{"kind":"Use","ref_id":{"krate":0,"index":2301},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":3393,"byte_end":3407,"line_start":120,"line_end":120,"column_start":42,"column_end":56},"alias_span":null,"name":"ProcessResults","value":"","parent":{"krate":0,"index":19}},{"kind":"Use","ref_id":{"krate":0,"index":2312},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":3477,"byte_end":3485,"line_start":122,"line_end":122,"column_start":37,"column_end":45},"alias_span":null,"name":"PutBackN","value":"","parent":{"krate":0,"index":19}},{"kind":"Use","ref_id":{"krate":0,"index":2322},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":3551,"byte_end":3557,"line_start":124,"line_end":124,"column_start":33,"column_end":39},"alias_span":null,"name":"RcIter","value":"","parent":{"krate":0,"index":19}},{"kind":"Use","ref_id":{"krate":0,"index":2329},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":3587,"byte_end":3594,"line_start":125,"line_end":125,"column_start":29,"column_end":36},"alias_span":null,"name":"RepeatN","value":"","parent":{"krate":0,"index":19}},{"kind":"Use","ref_id":{"krate":0,"index":2339},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":3650,"byte_end":3660,"line_start":127,"line_end":127,"column_start":30,"column_end":40},"alias_span":null,"name":"RepeatCall","value":"","parent":{"krate":0,"index":19}},{"kind":"Use","ref_id":{"krate":0,"index":2347},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":3662,"byte_end":3668,"line_start":127,"line_end":127,"column_start":42,"column_end":48},"alias_span":null,"name":"Unfold","value":"","parent":{"krate":0,"index":19}},{"kind":"Use","ref_id":{"krate":0,"index":2356},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":3670,"byte_end":3677,"line_start":127,"line_end":127,"column_start":50,"column_end":57},"alias_span":null,"name":"Iterate","value":"","parent":{"krate":0,"index":19}},{"kind":"Use","ref_id":{"krate":0,"index":2376},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":3736,"byte_end":3739,"line_start":129,"line_end":129,"column_start":25,"column_end":28},"alias_span":null,"name":"Tee","value":"","parent":{"krate":0,"index":19}},{"kind":"Use","ref_id":{"krate":0,"index":2383},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":3773,"byte_end":3784,"line_start":130,"line_end":130,"column_start":33,"column_end":44},"alias_span":null,"name":"TupleBuffer","value":"","parent":{"krate":0,"index":19}},{"kind":"Use","ref_id":{"krate":0,"index":2402},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":3786,"byte_end":3798,"line_start":130,"line_end":130,"column_start":46,"column_end":58},"alias_span":null,"name":"TupleWindows","value":"","parent":{"krate":0,"index":19}},{"kind":"Use","ref_id":{"krate":0,"index":2393},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":3800,"byte_end":3806,"line_start":130,"line_end":130,"column_start":60,"column_end":66},"alias_span":null,"name":"Tuples","value":"","parent":{"krate":0,"index":19}},{"kind":"Use","ref_id":{"krate":0,"index":2476},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":3874,"byte_end":3880,"line_start":132,"line_end":132,"column_start":34,"column_end":40},"alias_span":null,"name":"Unique","value":"","parent":{"krate":0,"index":19}},{"kind":"Use","ref_id":{"krate":0,"index":2463},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":3882,"byte_end":3890,"line_start":132,"line_end":132,"column_start":42,"column_end":50},"alias_span":null,"name":"UniqueBy","value":"","parent":{"krate":0,"index":19}},{"kind":"Use","ref_id":{"krate":0,"index":1297},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":3927,"byte_end":3939,"line_start":133,"line_end":133,"column_start":35,"column_end":47},"alias_span":null,"name":"WithPosition","value":"","parent":{"krate":0,"index":19}},{"kind":"Use","ref_id":{"krate":0,"index":2512},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":3973,"byte_end":3978,"line_start":134,"line_end":134,"column_start":33,"column_end":38},"alias_span":null,"name":"ZipEq","value":"","parent":{"krate":0,"index":19}},{"kind":"Use","ref_id":{"krate":0,"index":2525},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":4012,"byte_end":4022,"line_start":135,"line_end":135,"column_start":33,"column_end":43},"alias_span":null,"name":"ZipLongest","value":"","parent":{"krate":0,"index":19}},{"kind":"Use","ref_id":{"krate":0,"index":2538},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":4053,"byte_end":4056,"line_start":136,"line_end":136,"column_start":30,"column_end":33},"alias_span":null,"name":"Zip","value":"","parent":{"krate":0,"index":19}},{"kind":"Use","ref_id":{"krate":0,"index":1211},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":4187,"byte_end":4203,"line_start":141,"line_end":141,"column_start":32,"column_end":48},"alias_span":null,"name":"HomogeneousTuple","value":"","parent":{"krate":0,"index":83}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":4253,"byte_end":4254,"line_start":145,"line_end":145,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"WithPosition, PadUsing, KMergeBy, Intersperse, FormatWith, ExactlyOneError, Combinations, Step, ZipLongest, TakeWhileRef, MapResults, PutBack, Interleave, Tuples, UniqueBy, TupleCombinations, Permutations, MultiProduct, Positions, ZipEq, Merge, Batching, InterleaveShortest, Dedup, WhileSome, PutBackN, PeekingTakeWhile, MergeJoinBy, KMerge, GroupBy, IntoChunks, Format, CombinationsWithReplacement, Update, Coalesce, MergeBy, MapInto, TupleWindows, Tee, Product, DedupBy, Unique","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":554},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":4284,"byte_end":4290,"line_start":146,"line_end":146,"column_start":29,"column_end":35},"alias_span":null,"name":"concat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":563},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":4325,"byte_end":4336,"line_start":147,"line_end":147,"column_start":34,"column_end":45},"alias_span":null,"name":"cons_tuples","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":634},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":4359,"byte_end":4368,"line_start":148,"line_end":148,"column_start":22,"column_end":31},"alias_span":null,"name":"diff_with","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":618},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":4391,"byte_end":4395,"line_start":149,"line_end":149,"column_start":22,"column_end":26},"alias_span":null,"name":"Diff","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":882},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":4454,"byte_end":4463,"line_start":151,"line_end":151,"column_start":30,"column_end":39},"alias_span":null,"name":"kmerge_by","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2181},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":4489,"byte_end":4501,"line_start":152,"line_end":152,"column_start":24,"column_end":36},"alias_span":null,"name":"MinMaxResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1004},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":4538,"byte_end":4549,"line_start":153,"line_end":153,"column_start":36,"column_end":47},"alias_span":null,"name":"PeekingNext","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1086},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":4588,"byte_end":4603,"line_start":154,"line_end":154,"column_start":38,"column_end":53},"alias_span":null,"name":"process_results","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1129},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":4629,"byte_end":4637,"line_start":155,"line_end":155,"column_start":25,"column_end":33},"alias_span":null,"name":"repeat_n","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1160},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":4685,"byte_end":4696,"line_start":157,"line_end":157,"column_start":26,"column_end":37},"alias_span":null,"name":"repeat_call","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1169},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":4698,"byte_end":4704,"line_start":157,"line_end":157,"column_start":39,"column_end":45},"alias_span":null,"name":"unfold","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1192},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":4706,"byte_end":4713,"line_start":157,"line_end":157,"column_start":47,"column_end":54},"alias_span":null,"name":"iterate","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2484},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":4746,"byte_end":4754,"line_start":158,"line_end":158,"column_start":31,"column_end":39},"alias_span":null,"name":"Position","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1355},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":4781,"byte_end":4789,"line_start":159,"line_end":159,"column_start":26,"column_end":34},"alias_span":null,"name":"multizip","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1858},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":4856,"byte_end":4868,"line_start":162,"line_end":162,"column_start":32,"column_end":44},"alias_span":null,"name":"EitherOrBoth","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":143},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":136993,"byte_end":137003,"line_start":16,"line_end":16,"column_start":5,"column_end":15},"alias_span":null,"name":"interleave","value":"","parent":{"krate":0,"index":501}},{"kind":"Use","ref_id":{"krate":0,"index":228},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":137009,"byte_end":137014,"line_start":17,"line_end":17,"column_start":5,"column_end":10},"alias_span":null,"name":"merge","value":"","parent":{"krate":0,"index":501}},{"kind":"Use","ref_id":{"krate":0,"index":162},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":137020,"byte_end":137028,"line_start":18,"line_end":18,"column_start":5,"column_end":13},"alias_span":null,"name":"put_back","value":"","parent":{"krate":0,"index":501}},{"kind":"Use","ref_id":{"krate":0,"index":1095},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":137093,"byte_end":137103,"line_start":21,"line_end":21,"column_start":33,"column_end":43},"alias_span":null,"name":"put_back_n","value":"","parent":{"krate":0,"index":501}},{"kind":"Use","ref_id":{"krate":0,"index":962},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":137164,"byte_end":137173,"line_start":23,"line_end":23,"column_start":32,"column_end":41},"alias_span":null,"name":"multipeek","value":"","parent":{"krate":0,"index":501}},{"kind":"Use","ref_id":{"krate":0,"index":872},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":137231,"byte_end":137237,"line_start":25,"line_end":25,"column_start":29,"column_end":35},"alias_span":null,"name":"kmerge","value":"","parent":{"krate":0,"index":501}},{"kind":"Use","ref_id":{"krate":0,"index":1317},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":137267,"byte_end":137273,"line_start":26,"line_end":26,"column_start":29,"column_end":35},"alias_span":null,"name":"zip_eq","value":"","parent":{"krate":0,"index":501}},{"kind":"Use","ref_id":{"krate":0,"index":919},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":137302,"byte_end":137315,"line_start":27,"line_end":27,"column_start":28,"column_end":41},"alias_span":null,"name":"merge_join_by","value":"","parent":{"krate":0,"index":501}},{"kind":"Use","ref_id":{"krate":0,"index":1109},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":137373,"byte_end":137379,"line_start":29,"line_end":29,"column_start":29,"column_end":35},"alias_span":null,"name":"rciter","value":"","parent":{"krate":0,"index":501}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":4253,"byte_end":4254,"line_start":145,"line_end":145,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"interleave, zip_eq, merge, merge_join_by, kmerge","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":0,"byte_end":91090,"line_start":1,"line_end":2721,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":83},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":458},{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":551},{"krate":0,"index":552},{"krate":0,"index":558},{"krate":0,"index":566},{"krate":0,"index":585},{"krate":0,"index":600},{"krate":0,"index":615},{"krate":0,"index":639},{"krate":0,"index":662},{"krate":0,"index":670},{"krate":0,"index":827},{"krate":0,"index":841},{"krate":0,"index":898},{"krate":0,"index":911},{"krate":0,"index":948},{"krate":0,"index":957},{"krate":0,"index":981},{"krate":0,"index":1000},{"krate":0,"index":1036},{"krate":0,"index":1077},{"krate":0,"index":1093},{"krate":0,"index":1105},{"krate":0,"index":1128},{"krate":0,"index":1141},{"krate":0,"index":1155},{"krate":0,"index":1195},{"krate":0,"index":1209},{"krate":0,"index":1256},{"krate":0,"index":1293},{"krate":0,"index":1315},{"krate":0,"index":1329},{"krate":0,"index":1353},{"krate":0,"index":1359},{"krate":0,"index":1360},{"krate":0,"index":1361},{"krate":0,"index":1565},{"krate":0,"index":1567},{"krate":0,"index":1570},{"krate":0,"index":1573},{"krate":0,"index":2711},{"krate":0,"index":2736},{"krate":0,"index":2733},{"krate":0,"index":2730},{"krate":0,"index":2725},{"krate":0,"index":2727},{"krate":0,"index":2719},{"krate":0,"index":2721},{"krate":0,"index":1578}],"decl_id":null,"docs":" Extra iterator adaptors, functions and macros.","sig":null,"attributes":[{"value":"warn(missing_docs)","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":0,"byte_end":22,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"crate_name = \"itertools\"","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":23,"byte_end":49,"line_start":2,"line_end":2,"column_start":1,"column_end":27}}]},{"kind":"Mod","id":{"krate":0,"index":19},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":1963,"byte_end":1970,"line_start":77,"line_end":77,"column_start":9,"column_end":16},"name":"structs","qualname":"::structs","value":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":20},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":47},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":76},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82}],"decl_id":null,"docs":" The concrete iterator types.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":83},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":4147,"byte_end":4153,"line_start":140,"line_end":140,"column_start":9,"column_end":15},"name":"traits","qualname":"::traits","value":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":84}],"decl_id":null,"docs":" Traits helpful for using certain `Itertools` methods in generic contexts.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1582},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/multi_product.rs","byte_start":125127,"byte_end":125139,"line_start":15,"line_end":15,"column_start":12,"column_end":24},"name":"MultiProduct","qualname":"::adaptors::multi_product::MultiProduct","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator adaptor that iterates over the cartesian product of\n multiple iterators of type `I`.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/multi_product.rs","byte_start":125042,"byte_end":125115,"line_start":14,"line_end":14,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1607},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":92493,"byte_end":92503,"line_start":25,"line_end":25,"column_start":12,"column_end":22},"name":"Interleave","qualname":"::adaptors::Interleave","value":"Interleave {  }","parent":null,"children":[{"krate":0,"index":1610},{"krate":0,"index":1611},{"krate":0,"index":1612}],"decl_id":null,"docs":" An iterator adaptor that alternates elements from two iterators until both\n run out.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":92408,"byte_end":92481,"line_start":24,"line_end":24,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":143},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":92833,"byte_end":92843,"line_start":42,"line_end":42,"column_start":8,"column_end":18},"name":"interleave","qualname":"::adaptors::interleave","value":"fn <I, J> (i: I, j: J) -> Interleave<<I as IntoIterator>::IntoIter, <J as IntoIterator>::IntoIter>","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator that interleaves elements in `i` and `j`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1621},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":94108,"byte_end":94126,"line_start":88,"line_end":88,"column_start":12,"column_end":30},"name":"InterleaveShortest","qualname":"::adaptors::InterleaveShortest","value":"InterleaveShortest {  }","parent":null,"children":[{"krate":0,"index":1624},{"krate":0,"index":1625},{"krate":0,"index":1626}],"decl_id":null,"docs":" An iterator adaptor that alternates elements from the two iterators until\n one of them runs out.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":94023,"byte_end":94096,"line_start":87,"line_end":87,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1635},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":96528,"byte_end":96535,"line_start":177,"line_end":177,"column_start":12,"column_end":19},"name":"PutBack","qualname":"::adaptors::PutBack","value":"PutBack {  }","parent":null,"children":[{"krate":0,"index":1637},{"krate":0,"index":1638}],"decl_id":null,"docs":" An iterator adaptor that allows putting back a single\n item to the front of the iterator.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":162},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":96672,"byte_end":96680,"line_start":185,"line_end":185,"column_start":8,"column_end":16},"name":"put_back","qualname":"::adaptors::put_back","value":"fn <I> (iterable: I) -> PutBack<I::IntoIter>","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator where you can put back a single item\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":96929,"byte_end":96939,"line_start":198,"line_end":198,"column_start":12,"column_end":22},"name":"with_value","qualname":"<PutBack<I>>::with_value","value":"fn (mut self, value: I::Item) -> Self","parent":null,"children":[],"decl_id":null,"docs":" put back value `value` (builder method)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":97095,"byte_end":97105,"line_start":205,"line_end":205,"column_start":12,"column_end":22},"name":"into_parts","qualname":"<PutBack<I>>::into_parts","value":"fn (self) -> (Option<I::Item>, I)","parent":null,"children":[],"decl_id":null,"docs":" Split the `PutBack` into its parts.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":97074,"byte_end":97083,"line_start":204,"line_end":204,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":97370,"byte_end":97378,"line_start":214,"line_end":214,"column_start":12,"column_end":20},"name":"put_back","qualname":"<PutBack<I>>::put_back","value":"fn (&mut self, x: I::Item) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Put back a single value to the front of the iterator.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":97349,"byte_end":97358,"line_start":213,"line_end":213,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1645},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":99379,"byte_end":99386,"line_start":288,"line_end":288,"column_start":12,"column_end":19},"name":"Product","qualname":"::adaptors::Product","value":"Product {  }","parent":null,"children":[{"krate":0,"index":1648},{"krate":0,"index":1649},{"krate":0,"index":1650},{"krate":0,"index":1651}],"decl_id":null,"docs":" An iterator adaptor that iterates over the cartesian product of\n the element sets of two iterators `I` and `J`.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":99294,"byte_end":99367,"line_start":287,"line_end":287,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1660},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":102226,"byte_end":102234,"line_start":384,"line_end":384,"column_start":12,"column_end":20},"name":"Batching","qualname":"::adaptors::Batching","value":"Batching {  }","parent":null,"children":[{"krate":0,"index":1663},{"krate":0,"index":1664}],"decl_id":null,"docs":" A “meta iterator adaptor”. Its closure receives a reference to the iterator\n and may pick off as many elements as it likes, to produce the next iterator element.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":102141,"byte_end":102214,"line_start":383,"line_end":383,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1670},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":103349,"byte_end":103353,"line_start":426,"line_end":426,"column_start":12,"column_end":16},"name":"Step","qualname":"::adaptors::Step","value":"Step {  }","parent":null,"children":[{"krate":0,"index":1672},{"krate":0,"index":1673}],"decl_id":null,"docs":" An iterator adaptor that steps a number elements in the base iterator\n for each iteration.","sig":null,"attributes":[{"value":"deprecated(note = \"Use std .step_by() instead\", since = \"0.8\")","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":103157,"byte_end":103218,"line_start":422,"line_end":422,"column_start":1,"column_end":62}},{"value":"allow(deprecated)","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":103219,"byte_end":103239,"line_start":423,"line_end":423,"column_start":1,"column_end":21}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":103264,"byte_end":103337,"line_start":425,"line_end":425,"column_start":1,"column_end":74}}]},{"kind":"Trait","id":{"krate":0,"index":219},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":104371,"byte_end":104385,"line_start":478,"line_end":478,"column_start":11,"column_end":25},"name":"MergePredicate","qualname":"::adaptors::MergePredicate","value":"MergePredicate<T>","parent":null,"children":[{"krate":0,"index":221}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":104398,"byte_end":104408,"line_start":479,"line_end":479,"column_start":8,"column_end":18},"name":"merge_pred","qualname":"::adaptors::MergePredicate::merge_pred","value":"fn (&mut self, a: &T, b: &T) -> bool","parent":{"krate":0,"index":219},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1680},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":104474,"byte_end":104482,"line_start":483,"line_end":483,"column_start":12,"column_end":20},"name":"MergeLte","qualname":"::adaptors::MergeLte","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":225},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":104982,"byte_end":104987,"line_start":498,"line_end":498,"column_start":10,"column_end":15},"name":"Merge","qualname":"::adaptors::Merge","value":"MergeBy<I, J, MergeLte>","parent":null,"children":[],"decl_id":null,"docs":" An iterator adaptor that merges the two base iterators in ascending order.\n If both base iterators are sorted (ascending), the result is sorted.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":104899,"byte_end":104972,"line_start":497,"line_end":497,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":228},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":105272,"byte_end":105277,"line_start":511,"line_end":511,"column_start":8,"column_end":13},"name":"merge","qualname":"::adaptors::merge","value":"fn <I, J> (i: I, j: J) -> Merge<<I as IntoIterator>::IntoIter, <J as IntoIterator>::IntoIter>","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator that merges elements in `i` and `j`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":231},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":105877,"byte_end":105884,"line_start":526,"line_end":526,"column_start":12,"column_end":19},"name":"MergeBy","qualname":"::adaptors::MergeBy","value":"MergeBy {  }","parent":null,"children":[{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238}],"decl_id":null,"docs":" An iterator adaptor that merges the two base iterators in ascending order.\n If both base iterators are sorted (ascending), the result is sorted.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":105792,"byte_end":105865,"line_start":525,"line_end":525,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":267},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":109255,"byte_end":109263,"line_start":652,"line_end":652,"column_start":12,"column_end":20},"name":"Coalesce","qualname":"::adaptors::Coalesce","value":"Coalesce {  }","parent":null,"children":[{"krate":0,"index":270},{"krate":0,"index":271}],"decl_id":null,"docs":" An iterator adaptor that may join together adjacent elements.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":109170,"byte_end":109243,"line_start":651,"line_end":651,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":287},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":110540,"byte_end":110547,"line_start":705,"line_end":705,"column_start":12,"column_end":19},"name":"DedupBy","qualname":"::adaptors::DedupBy","value":"DedupBy {  }","parent":null,"children":[{"krate":0,"index":290},{"krate":0,"index":291}],"decl_id":null,"docs":" An iterator adaptor that removes repeated duplicates, determining equality using a comparison function.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":110455,"byte_end":110528,"line_start":704,"line_end":704,"column_start":1,"column_end":74}}]},{"kind":"Trait","id":{"krate":0,"index":292},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":110643,"byte_end":110657,"line_start":712,"line_end":712,"column_start":11,"column_end":25},"name":"DedupPredicate","qualname":"::adaptors::DedupPredicate","value":"DedupPredicate<T>","parent":null,"children":[{"krate":0,"index":294}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":110728,"byte_end":110738,"line_start":713,"line_end":713,"column_start":8,"column_end":18},"name":"dedup_pair","qualname":"::adaptors::DedupPredicate::dedup_pair","value":"fn (&mut self, a: &T, b: &T) -> bool","parent":{"krate":0,"index":292},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1698},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":110804,"byte_end":110811,"line_start":717,"line_end":717,"column_start":12,"column_end":19},"name":"DedupEq","qualname":"::adaptors::DedupEq","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":302},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":111231,"byte_end":111236,"line_start":734,"line_end":734,"column_start":10,"column_end":15},"name":"Dedup","qualname":"::adaptors::Dedup","value":"DedupBy<I, DedupEq>","parent":null,"children":[],"decl_id":null,"docs":" An iterator adaptor that removes repeated duplicates.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":326},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":113255,"byte_end":113267,"line_start":811,"line_end":811,"column_start":12,"column_end":24},"name":"TakeWhileRef","qualname":"::adaptors::TakeWhileRef","value":"TakeWhileRef {  }","parent":null,"children":[{"krate":0,"index":330},{"krate":0,"index":331}],"decl_id":null,"docs":" An iterator adaptor that borrows from a `Clone`-able iterator\n to only pick off elements while the predicate returns `true`.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":113170,"byte_end":113243,"line_start":810,"line_end":810,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1705},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":114631,"byte_end":114640,"line_start":862,"line_end":862,"column_start":12,"column_end":21},"name":"WhileSome","qualname":"::adaptors::WhileSome","value":"WhileSome {  }","parent":null,"children":[{"krate":0,"index":1707}],"decl_id":null,"docs":" An iterator adaptor that filters `Option<A>` iterator elements\n and produces `A`. Stops on the first `None` encountered.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":114546,"byte_end":114619,"line_start":861,"line_end":861,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1714},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":115492,"byte_end":115509,"line_start":896,"line_end":896,"column_start":12,"column_end":29},"name":"TupleCombinations","qualname":"::adaptors::TupleCombinations","value":"TupleCombinations {  }","parent":null,"children":[{"krate":0,"index":1717},{"krate":0,"index":1718},{"krate":0,"index":1719}],"decl_id":null,"docs":" An iterator to iterate through all combinations in a `Clone`-able iterator that produces tuples\n of a specific size.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":115407,"byte_end":115480,"line_start":895,"line_end":895,"column_start":1,"column_end":74}}]},{"kind":"Trait","id":{"krate":0,"index":354},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":115660,"byte_end":115674,"line_start":905,"line_end":905,"column_start":11,"column_end":25},"name":"HasCombination","qualname":"::adaptors::HasCombination","value":"HasCombination<I>: Sized","parent":null,"children":[{"krate":0,"index":356}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":356},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":115696,"byte_end":115707,"line_start":906,"line_end":906,"column_start":10,"column_end":21},"name":"Combination","qualname":"::adaptors::HasCombination::Combination","value":"type Combination: From<I> + Iterator<Item = Self>;","parent":{"krate":0,"index":354},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1728},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":116335,"byte_end":116352,"line_start":934,"line_end":934,"column_start":12,"column_end":29},"name":"Tuple1Combination","qualname":"::adaptors::Tuple1Combination","value":"Tuple1Combination {  }","parent":null,"children":[{"krate":0,"index":1730}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1754},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":118574,"byte_end":118591,"line_start":1015,"line_end":1015,"column_start":25,"column_end":42},"name":"Tuple2Combination","qualname":"::adaptors::Tuple2Combination","value":"Tuple2Combination {  }","parent":null,"children":[{"krate":0,"index":1756},{"krate":0,"index":1757},{"krate":0,"index":1758}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1782},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":118650,"byte_end":118667,"line_start":1016,"line_end":1016,"column_start":25,"column_end":42},"name":"Tuple3Combination","qualname":"::adaptors::Tuple3Combination","value":"Tuple3Combination {  }","parent":null,"children":[{"krate":0,"index":1784},{"krate":0,"index":1785},{"krate":0,"index":1786}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1810},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":118731,"byte_end":118748,"line_start":1017,"line_end":1017,"column_start":25,"column_end":42},"name":"Tuple4Combination","qualname":"::adaptors::Tuple4Combination","value":"Tuple4Combination {  }","parent":null,"children":[{"krate":0,"index":1812},{"krate":0,"index":1813},{"krate":0,"index":1814}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1821},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":119054,"byte_end":119061,"line_start":1024,"line_end":1024,"column_start":12,"column_end":19},"name":"MapInto","qualname":"::adaptors::MapInto","value":"MapInto {  }","parent":null,"children":[{"krate":0,"index":1824},{"krate":0,"index":1825}],"decl_id":null,"docs":" An iterator adapter to apply `Into` conversion to each element.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":118969,"byte_end":119042,"line_start":1023,"line_end":1023,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1830},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":120433,"byte_end":120443,"line_start":1082,"line_end":1082,"column_start":12,"column_end":22},"name":"MapResults","qualname":"::adaptors::MapResults","value":"MapResults {  }","parent":null,"children":[{"krate":0,"index":1833},{"krate":0,"index":1834}],"decl_id":null,"docs":" An iterator adapter to apply a transformation within a nested `Result`.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":120348,"byte_end":120421,"line_start":1081,"line_end":1081,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1839},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":121742,"byte_end":121751,"line_start":1132,"line_end":1132,"column_start":12,"column_end":21},"name":"Positions","qualname":"::adaptors::Positions","value":"Positions {  }","parent":null,"children":[{"krate":0,"index":1842},{"krate":0,"index":1843},{"krate":0,"index":1844}],"decl_id":null,"docs":" An iterator adapter to get the positions of each element that matches a predicate.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":121657,"byte_end":121730,"line_start":1131,"line_end":1131,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1849},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":123175,"byte_end":123181,"line_start":1191,"line_end":1191,"column_start":12,"column_end":18},"name":"Update","qualname":"::adaptors::Update","value":"Update {  }","parent":null,"children":[{"krate":0,"index":1852},{"krate":0,"index":1853}],"decl_id":null,"docs":" An iterator adapter to apply a mutating function to each element before yielding it.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":123090,"byte_end":123163,"line_start":1190,"line_end":1190,"column_start":1,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1861},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs","byte_start":131133,"byte_end":131137,"line_start":9,"line_end":9,"column_start":5,"column_end":9},"name":"Both","qualname":"::either_or_both::EitherOrBoth::Both","value":"EitherOrBoth::Both(A, B)","parent":{"krate":0,"index":1858},"children":[],"decl_id":null,"docs":" Both values are present.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1865},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs","byte_start":131201,"byte_end":131205,"line_start":11,"line_end":11,"column_start":5,"column_end":9},"name":"Left","qualname":"::either_or_both::EitherOrBoth::Left","value":"EitherOrBoth::Left(A)","parent":{"krate":0,"index":1858},"children":[],"decl_id":null,"docs":" Only the left value of type `A` is present.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1868},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs","byte_start":131267,"byte_end":131272,"line_start":13,"line_end":13,"column_start":5,"column_end":10},"name":"Right","qualname":"::either_or_both::EitherOrBoth::Right","value":"EitherOrBoth::Right(B)","parent":{"krate":0,"index":1858},"children":[],"decl_id":null,"docs":" Only the right value of type `B` is present.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1858},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs","byte_start":131075,"byte_end":131087,"line_start":7,"line_end":7,"column_start":10,"column_end":22},"name":"EitherOrBoth","qualname":"::either_or_both::EitherOrBoth","value":"EitherOrBoth::{Both, Left, Right}","parent":null,"children":[{"krate":0,"index":1861},{"krate":0,"index":1865},{"krate":0,"index":1868}],"decl_id":null,"docs":" Value that either holds a single A or B, or both.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":464},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs","byte_start":131391,"byte_end":131399,"line_start":18,"line_end":18,"column_start":12,"column_end":20},"name":"has_left","qualname":"<EitherOrBoth<A, B>>::has_left","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" If `Left`, or `Both`, return true, otherwise, return false.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":465},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs","byte_start":131543,"byte_end":131552,"line_start":23,"line_end":23,"column_start":12,"column_end":21},"name":"has_right","qualname":"<EitherOrBoth<A, B>>::has_right","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" If `Right`, or `Both`, return true, otherwise, return false.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":466},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs","byte_start":131725,"byte_end":131732,"line_start":29,"line_end":29,"column_start":12,"column_end":19},"name":"is_left","qualname":"<EitherOrBoth<A, B>>::is_left","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" If Left, return true otherwise, return false.\n Exclusive version of [`has_left`].\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":467},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs","byte_start":131952,"byte_end":131960,"line_start":38,"line_end":38,"column_start":12,"column_end":20},"name":"is_right","qualname":"<EitherOrBoth<A, B>>::is_right","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" If Right, return true otherwise, return false.\n Exclusive version of [`has_right`].\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":468},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs","byte_start":132193,"byte_end":132200,"line_start":47,"line_end":47,"column_start":12,"column_end":19},"name":"is_both","qualname":"<EitherOrBoth<A, B>>::is_both","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" If Right, return true otherwise, return false.\n Equivalent to `self.as_ref().both().is_some()`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":469},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs","byte_start":132366,"byte_end":132370,"line_start":52,"line_end":52,"column_start":12,"column_end":16},"name":"left","qualname":"<EitherOrBoth<A, B>>::left","value":"fn (self) -> Option<A>","parent":null,"children":[],"decl_id":null,"docs":" If `Left`, or `Both`, return `Some` with the left value, otherwise, return `None`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":470},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs","byte_start":132611,"byte_end":132616,"line_start":60,"line_end":60,"column_start":12,"column_end":17},"name":"right","qualname":"<EitherOrBoth<A, B>>::right","value":"fn (self) -> Option<B>","parent":null,"children":[],"decl_id":null,"docs":" If `Right`, or `Both`, return `Some` with the right value, otherwise, return `None`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":471},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs","byte_start":132832,"byte_end":132836,"line_start":68,"line_end":68,"column_start":12,"column_end":16},"name":"both","qualname":"<EitherOrBoth<A, B>>::both","value":"fn (self) -> Option<(A, B)>","parent":null,"children":[],"decl_id":null,"docs":" If Both, return `Some` tuple containing left and right.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":472},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs","byte_start":133046,"byte_end":133052,"line_start":76,"line_end":76,"column_start":12,"column_end":18},"name":"as_ref","qualname":"<EitherOrBoth<A, B>>::as_ref","value":"fn (&self) -> EitherOrBoth<&A, &B>","parent":null,"children":[],"decl_id":null,"docs":" Converts from `&EitherOrBoth<A, B>` to `EitherOrBoth<&A, &B>`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":473},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs","byte_start":133367,"byte_end":133373,"line_start":85,"line_end":85,"column_start":12,"column_end":18},"name":"as_mut","qualname":"<EitherOrBoth<A, B>>::as_mut","value":"fn (&mut self) -> EitherOrBoth<&mut A, &mut B>","parent":null,"children":[],"decl_id":null,"docs":" Converts from `&mut EitherOrBoth<A, B>` to `EitherOrBoth<&mut A, &mut B>`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs","byte_start":133695,"byte_end":133699,"line_start":94,"line_end":94,"column_start":12,"column_end":16},"name":"flip","qualname":"<EitherOrBoth<A, B>>::flip","value":"fn (self) -> EitherOrBoth<B, A>","parent":null,"children":[],"decl_id":null,"docs":" Convert `EitherOrBoth<A, B>` to `EitherOrBoth<B, A>`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":475},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs","byte_start":134047,"byte_end":134055,"line_start":104,"line_end":104,"column_start":12,"column_end":20},"name":"map_left","qualname":"<EitherOrBoth<A, B>>::map_left","value":"fn <F, M> (self, f: F) -> EitherOrBoth<M, B>","parent":null,"children":[],"decl_id":null,"docs":" Apply the function `f` on the value `a` in `Left(a)` or `Both(a, b)` variants. If it is\n present rewrapping the result in `self`'s original variant.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs","byte_start":134463,"byte_end":134472,"line_start":117,"line_end":117,"column_start":12,"column_end":21},"name":"map_right","qualname":"<EitherOrBoth<A, B>>::map_right","value":"fn <F, M> (self, f: F) -> EitherOrBoth<A, M>","parent":null,"children":[],"decl_id":null,"docs":" Apply the function `f` on the value `b` in `Right(b)` or `Both(a, b)` variants.\n If it is present rewrapping the result in `self`'s original variant.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":481},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs","byte_start":134919,"byte_end":134926,"line_start":131,"line_end":131,"column_start":12,"column_end":19},"name":"map_any","qualname":"<EitherOrBoth<A, B>>::map_any","value":"fn <F, L, G, R> (self, f: F, g: G) -> EitherOrBoth<L, R>","parent":null,"children":[],"decl_id":null,"docs":" Apply the functions `f` and `g` on the value `a` and `b` respectively;\n found in `Left(a)`, `Right(b)`, or `Both(a, b)` variants.\n The Result is rewrapped `self`'s original variant.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":486},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs","byte_start":135327,"byte_end":135340,"line_start":145,"line_end":145,"column_start":12,"column_end":25},"name":"left_and_then","qualname":"<EitherOrBoth<A, B>>::left_and_then","value":"fn <F, L> (self, f: F) -> EitherOrBoth<L, B>","parent":null,"children":[],"decl_id":null,"docs":" Apply the function `f` on the value `b` in `Right(b)` or `Both(a, _)` variants if it is\n present.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":489},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs","byte_start":135678,"byte_end":135692,"line_start":157,"line_end":157,"column_start":12,"column_end":26},"name":"right_and_then","qualname":"<EitherOrBoth<A, B>>::right_and_then","value":"fn <F, R> (self, f: F) -> EitherOrBoth<A, R>","parent":null,"children":[],"decl_id":null,"docs":" Apply the function `f` on the value `a`\n in `Left(a)` or `Both(a, _)` variants if it is present.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":494},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs","byte_start":136048,"byte_end":136054,"line_start":170,"line_end":170,"column_start":12,"column_end":18},"name":"reduce","qualname":"<EitherOrBoth<T, T>>::reduce","value":"fn <F> (self, f: F) -> T","parent":null,"children":[],"decl_id":null,"docs":" Return either value of left, right, or the product of `f` applied where `Both` are present.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":501},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"free","qualname":"::free","value":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","parent":null,"children":[{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":506},{"krate":0,"index":508},{"krate":0,"index":509},{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":516},{"krate":0,"index":517},{"krate":0,"index":518},{"krate":0,"index":519},{"krate":0,"index":521},{"krate":0,"index":523},{"krate":0,"index":526},{"krate":0,"index":529},{"krate":0,"index":533},{"krate":0,"index":537},{"krate":0,"index":540},{"krate":0,"index":543},{"krate":0,"index":545},{"krate":0,"index":547},{"krate":0,"index":549}],"decl_id":null,"docs":" Free functions that create iterator adaptors or call iterator methods.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":519},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":137620,"byte_end":137629,"line_start":42,"line_end":42,"column_start":8,"column_end":17},"name":"enumerate","qualname":"::free::enumerate","value":"fn <I> (iterable: I) -> iter::Enumerate<I::IntoIter>","parent":null,"children":[],"decl_id":null,"docs":" Iterate `iterable` with a running index.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":521},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":137951,"byte_end":137954,"line_start":59,"line_end":59,"column_start":8,"column_end":11},"name":"rev","qualname":"::free::rev","value":"fn <I> (iterable: I) -> iter::Rev<I::IntoIter>","parent":null,"children":[],"decl_id":null,"docs":" Iterate `iterable` in reverse.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":523},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":138355,"byte_end":138358,"line_start":78,"line_end":78,"column_start":8,"column_end":11},"name":"zip","qualname":"::free::zip","value":"fn <I, J> (i: I, j: J) -> Zip<I::IntoIter, J::IntoIter>","parent":null,"children":[],"decl_id":null,"docs":" Iterate `i` and `j` in lock step.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":526},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":138738,"byte_end":138743,"line_start":96,"line_end":96,"column_start":8,"column_end":13},"name":"chain","qualname":"::free::chain","value":"fn <I, J> (i: I, j: J) -> iter::Chain<<I as IntoIterator>::IntoIter, <J as IntoIterator>::IntoIter>","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator that first iterates `i` and then `j`.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":529},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":139166,"byte_end":139172,"line_start":112,"line_end":112,"column_start":8,"column_end":14},"name":"cloned","qualname":"::free::cloned","value":"fn <'a, I, T> (iterable: I) -> iter::Cloned<I::IntoIter>","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator that clones each element from &T to T","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":533},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":139560,"byte_end":139564,"line_start":128,"line_end":128,"column_start":8,"column_end":12},"name":"fold","qualname":"::free::fold","value":"fn <I, B, F> (iterable: I, init: B, f: F) -> B","parent":null,"children":[],"decl_id":null,"docs":" Perform a fold operation over the iterable.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":537},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":139939,"byte_end":139942,"line_start":144,"line_end":144,"column_start":8,"column_end":11},"name":"all","qualname":"::free::all","value":"fn <I, F> (iterable: I, f: F) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Test whether the predicate holds for all elements in the iterable.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":540},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":140302,"byte_end":140305,"line_start":160,"line_end":160,"column_start":8,"column_end":11},"name":"any","qualname":"::free::any","value":"fn <I, F> (iterable: I, f: F) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Test whether the predicate holds for any elements in the iterable.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":543},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":140630,"byte_end":140633,"line_start":176,"line_end":176,"column_start":8,"column_end":11},"name":"max","qualname":"::free::max","value":"fn <I> (iterable: I) -> Option<I::Item>","parent":null,"children":[],"decl_id":null,"docs":" Return the maximum value of the iterable.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":545},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":140946,"byte_end":140949,"line_start":192,"line_end":192,"column_start":8,"column_end":11},"name":"min","qualname":"::free::min","value":"fn <I> (iterable: I) -> Option<I::Item>","parent":null,"children":[],"decl_id":null,"docs":" Return the minimum value of the iterable.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":547},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":141342,"byte_end":141346,"line_start":210,"line_end":210,"column_start":8,"column_end":12},"name":"join","qualname":"::free::join","value":"fn <I> (iterable: I, sep: &str) -> String","parent":null,"children":[],"decl_id":null,"docs":" Combine all iterator elements into one String, seperated by `sep`.","sig":null,"attributes":[{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":141307,"byte_end":141334,"line_start":209,"line_end":209,"column_start":1,"column_end":28}}]},{"kind":"Function","id":{"krate":0,"index":549},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":141842,"byte_end":141848,"line_start":230,"line_end":230,"column_start":8,"column_end":14},"name":"sorted","qualname":"::free::sorted","value":"fn <I> (iterable: I) -> VecIntoIter<I::Item>","parent":null,"children":[],"decl_id":null,"docs":" Sort all iterator elements into a new iterator in ascending order.","sig":null,"attributes":[{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/free.rs","byte_start":141807,"byte_end":141834,"line_start":229,"line_end":229,"column_start":1,"column_end":28}}]},{"kind":"Function","id":{"krate":0,"index":554},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/concat_impl.rs","byte_start":142488,"byte_end":142494,"line_start":17,"line_end":17,"column_start":8,"column_end":14},"name":"concat","qualname":"::concat_impl::concat","value":"fn <I> (iterable: I) -> I::Item","parent":null,"children":[],"decl_id":null,"docs":" Combine all an iterator's elements into one element by using `Extend`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2049},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/cons_tuples_impl.rs","byte_start":144270,"byte_end":144280,"line_start":46,"line_end":46,"column_start":12,"column_end":22},"name":"ConsTuples","qualname":"::cons_tuples_impl::ConsTuples","value":"ConsTuples {  }","parent":null,"children":[{"krate":0,"index":2052}],"decl_id":null,"docs":" An iterator that maps an iterator of tuples like\n `((A, B), C)` to an iterator of `(A, B, C)`.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/cons_tuples_impl.rs","byte_start":144168,"byte_end":144241,"line_start":44,"line_end":44,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":563},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/cons_tuples_impl.rs","byte_start":144542,"byte_end":144553,"line_start":60,"line_end":60,"column_start":8,"column_end":19},"name":"cons_tuples","qualname":"::cons_tuples_impl::cons_tuples","value":"fn <I, J> (iterable: I) -> ConsTuples<I, J>","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator that maps for example iterators of\n `((A, B), C)` to `(A, B, C)`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":569},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/combinations.rs","byte_start":144993,"byte_end":145005,"line_start":9,"line_end":9,"column_start":12,"column_end":24},"name":"Combinations","qualname":"::combinations::Combinations","value":"Combinations {  }","parent":null,"children":[{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":573}],"decl_id":null,"docs":" An iterator to iterate through all the `k`-length combinations in an iterator.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/combinations.rs","byte_start":144908,"byte_end":144981,"line_start":8,"line_end":8,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":2060},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/combinations_with_replacement.rs","byte_start":147450,"byte_end":147477,"line_start":9,"line_end":9,"column_start":12,"column_end":39},"name":"CombinationsWithReplacement","qualname":"::combinations_with_replacement::CombinationsWithReplacement","value":"CombinationsWithReplacement {  }","parent":null,"children":[{"krate":0,"index":2062},{"krate":0,"index":2063},{"krate":0,"index":2064},{"krate":0,"index":2065},{"krate":0,"index":2066}],"decl_id":null,"docs":" An iterator to iterate through all the `n`-length combinations in an iterator, with replacement.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2071},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/exactly_one_err.rs","byte_start":150807,"byte_end":150822,"line_start":14,"line_end":14,"column_start":12,"column_end":27},"name":"ExactlyOneError","qualname":"::exactly_one_err::ExactlyOneError","value":"ExactlyOneError {  }","parent":null,"children":[{"krate":0,"index":2073},{"krate":0,"index":2074}],"decl_id":null,"docs":" Iterator returned for the error case of `IterTools::exactly_one()`\n This iterator yields exactly the same elements as the input iterator.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":621},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/diff.rs","byte_start":152684,"byte_end":152697,"line_start":21,"line_end":21,"column_start":5,"column_end":18},"name":"FirstMismatch","qualname":"::diff::Diff::FirstMismatch","value":"Diff::FirstMismatch(usize, PutBack<I>, PutBack<J>)","parent":{"krate":0,"index":618},"children":[],"decl_id":null,"docs":" The index of the first non-matching element along with both iterator's remaining elements\n starting with the first mis-match.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":626},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/diff.rs","byte_start":152830,"byte_end":152837,"line_start":23,"line_end":23,"column_start":5,"column_end":12},"name":"Shorter","qualname":"::diff::Diff::Shorter","value":"Diff::Shorter(usize, PutBack<I>)","parent":{"krate":0,"index":618},"children":[],"decl_id":null,"docs":" The total number of elements that were in `J` along with the remaining elements of `I`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":630},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/diff.rs","byte_start":152958,"byte_end":152964,"line_start":25,"line_end":25,"column_start":5,"column_end":11},"name":"Longer","qualname":"::diff::Diff::Longer","value":"Diff::Longer(usize, PutBack<J>)","parent":{"krate":0,"index":618},"children":[],"decl_id":null,"docs":" The total number of elements that were in `I` along with the remaining elements of `J`.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":618},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/diff.rs","byte_start":152481,"byte_end":152485,"line_start":15,"line_end":15,"column_start":10,"column_end":14},"name":"Diff","qualname":"::diff::Diff","value":"Diff::{FirstMismatch, Shorter, Longer}","parent":null,"children":[{"krate":0,"index":621},{"krate":0,"index":626},{"krate":0,"index":630}],"decl_id":null,"docs":" A type returned by the [`diff_with`](./fn.diff_with.html) function.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":634},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/diff.rs","byte_start":153713,"byte_end":153722,"line_start":40,"line_end":40,"column_start":8,"column_end":17},"name":"diff_with","qualname":"::diff::diff_with","value":"fn <I, J, F> (i: I, j: J, is_equal: F) -> Option<Diff<I::IntoIter, J::IntoIter>>","parent":null,"children":[],"decl_id":null,"docs":" Compares every element yielded by both `i` and `j` with the given function in lock-step and\n returns a `Diff` which describes how `j` differs from `i`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2081},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/format.rs","byte_start":154859,"byte_end":154869,"line_start":11,"line_end":11,"column_start":12,"column_end":22},"name":"FormatWith","qualname":"::format::FormatWith","value":"FormatWith {  }","parent":null,"children":[{"krate":0,"index":2085},{"krate":0,"index":2086}],"decl_id":null,"docs":" Format all iterator elements lazily, separated by `sep`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2092},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/format.rs","byte_start":155292,"byte_end":155298,"line_start":25,"line_end":25,"column_start":12,"column_end":18},"name":"Format","qualname":"::format::Format","value":"Format {  }","parent":null,"children":[{"krate":0,"index":2095},{"krate":0,"index":2096}],"decl_id":null,"docs":" Format all iterator elements lazily, separated by `sep`.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":677},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":158570,"byte_end":158573,"line_start":6,"line_end":6,"column_start":10,"column_end":13},"name":"Key","qualname":"::groupbylazy::KeyFunction::Key","value":"type Key;","parent":{"krate":0,"index":675},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":727},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":168033,"byte_end":168040,"line_start":289,"line_end":289,"column_start":12,"column_end":19},"name":"GroupBy","qualname":"::groupbylazy::GroupBy","value":"GroupBy {  }","parent":null,"children":[{"krate":0,"index":731},{"krate":0,"index":732}],"decl_id":null,"docs":" `GroupBy` is the storage for the lazy grouping operation.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":167948,"byte_end":168021,"line_start":288,"line_end":288,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":751},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":169907,"byte_end":169913,"line_start":359,"line_end":359,"column_start":12,"column_end":18},"name":"Groups","qualname":"::groupbylazy::Groups","value":"Groups {  }","parent":null,"children":[{"krate":0,"index":756}],"decl_id":null,"docs":" An iterator that yields the Group iterators.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":169822,"byte_end":169895,"line_start":358,"line_end":358,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":765},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":170774,"byte_end":170779,"line_start":393,"line_end":393,"column_start":12,"column_end":17},"name":"Group","qualname":"::groupbylazy::Group","value":"Group {  }","parent":null,"children":[{"krate":0,"index":770},{"krate":0,"index":771},{"krate":0,"index":772}],"decl_id":null,"docs":" An iterator for the elements in a single group.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":788},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":172714,"byte_end":172724,"line_start":465,"line_end":465,"column_start":12,"column_end":22},"name":"IntoChunks","qualname":"::groupbylazy::IntoChunks","value":"IntoChunks {  }","parent":null,"children":[{"krate":0,"index":790},{"krate":0,"index":791}],"decl_id":null,"docs":" `ChunkLazy` is the storage for a lazy chunking operation.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":172629,"byte_end":172702,"line_start":464,"line_end":464,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":802},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":173847,"byte_end":173853,"line_start":510,"line_end":510,"column_start":12,"column_end":18},"name":"Chunks","qualname":"::groupbylazy::Chunks","value":"Chunks {  }","parent":null,"children":[{"krate":0,"index":805}],"decl_id":null,"docs":" An iterator that yields the Chunk iterators.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":173762,"byte_end":173835,"line_start":509,"line_end":509,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":812},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":174564,"byte_end":174569,"line_start":541,"line_end":541,"column_start":12,"column_end":17},"name":"Chunk","qualname":"::groupbylazy::Chunk","value":"Chunk {  }","parent":null,"children":[{"krate":0,"index":815},{"krate":0,"index":816},{"krate":0,"index":817}],"decl_id":null,"docs":" An iterator for the elements in a single chunk.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2143},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/intersperse.rs","byte_start":175613,"byte_end":175624,"line_start":15,"line_end":15,"column_start":12,"column_end":23},"name":"Intersperse","qualname":"::intersperse::Intersperse","value":"Intersperse {  }","parent":null,"children":[{"krate":0,"index":2145},{"krate":0,"index":2146},{"krate":0,"index":2147}],"decl_id":null,"docs":" An iterator adaptor to insert a particular value\n between each element of the adapted iterator.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/intersperse.rs","byte_start":175511,"byte_end":175584,"line_start":13,"line_end":13,"column_start":1,"column_end":74}}]},{"kind":"Type","id":{"krate":0,"index":860},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs","byte_start":180048,"byte_end":180054,"line_start":102,"line_end":102,"column_start":10,"column_end":16},"name":"KMerge","qualname":"::kmerge_impl::KMerge","value":"KMergeBy<I, KMergeByLt>","parent":null,"children":[],"decl_id":null,"docs":" An iterator adaptor that merges an abitrary number of base iterators in ascending order.\n If all base iterators are sorted (ascending), the result is sorted.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs","byte_start":179965,"byte_end":180038,"line_start":101,"line_end":101,"column_start":1,"column_end":74}}]},{"kind":"Trait","id":{"krate":0,"index":862},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs","byte_start":180096,"byte_end":180111,"line_start":104,"line_end":104,"column_start":11,"column_end":26},"name":"KMergePredicate","qualname":"::kmerge_impl::KMergePredicate","value":"KMergePredicate<T>","parent":null,"children":[{"krate":0,"index":864}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":864},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs","byte_start":180124,"byte_end":180135,"line_start":105,"line_end":105,"column_start":8,"column_end":19},"name":"kmerge_pred","qualname":"::kmerge_impl::KMergePredicate::kmerge_pred","value":"fn (&mut self, a: &T, b: &T) -> bool","parent":{"krate":0,"index":862},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2162},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs","byte_start":180201,"byte_end":180211,"line_start":109,"line_end":109,"column_start":12,"column_end":22},"name":"KMergeByLt","qualname":"::kmerge_impl::KMergeByLt","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":872},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs","byte_start":180807,"byte_end":180813,"line_start":135,"line_end":135,"column_start":8,"column_end":14},"name":"kmerge","qualname":"::kmerge_impl::kmerge","value":"fn <I> (iterable: I) -> KMerge<<I::Item as IntoIterator>::IntoIter>","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator that merges elements of the contained iterators using\n the ordering function.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":874},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs","byte_start":181388,"byte_end":181396,"line_start":151,"line_end":151,"column_start":12,"column_end":20},"name":"KMergeBy","qualname":"::kmerge_impl::KMergeBy","value":"KMergeBy {  }","parent":null,"children":[{"krate":0,"index":877},{"krate":0,"index":878}],"decl_id":null,"docs":" An iterator adaptor that merges an abitrary number of base iterators\n according to an ordering function.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs","byte_start":181303,"byte_end":181376,"line_start":150,"line_end":150,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":882},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs","byte_start":181775,"byte_end":181784,"line_start":168,"line_end":168,"column_start":8,"column_end":17},"name":"kmerge_by","qualname":"::kmerge_impl::kmerge_by","value":"fn <I, F> (iterable: I, mut less_than: F) -> KMergeBy<<I::Item as IntoIterator>::IntoIter, F>","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator that merges elements of the contained iterators.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":919},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/merge_join.rs","byte_start":184697,"byte_end":184710,"line_start":11,"line_end":11,"column_start":8,"column_end":21},"name":"merge_join_by","qualname":"::merge_join::merge_join_by","value":"fn <I, J, F> (left: I, right: J, cmp_fn: F) -> MergeJoinBy<I::IntoIter, J::IntoIter, F>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator adaptor that merge-joins items from the two base iterators in ascending order.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":923},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/merge_join.rs","byte_start":185329,"byte_end":185340,"line_start":28,"line_end":28,"column_start":12,"column_end":23},"name":"MergeJoinBy","qualname":"::merge_join::MergeJoinBy","value":"MergeJoinBy {  }","parent":null,"children":[{"krate":0,"index":927},{"krate":0,"index":928},{"krate":0,"index":929}],"decl_id":null,"docs":" An iterator adaptor that merge-joins items from the two base iterators in ascending order.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/merge_join.rs","byte_start":185244,"byte_end":185317,"line_start":27,"line_end":27,"column_start":1,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2183},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/minmax.rs","byte_start":190370,"byte_end":190380,"line_start":7,"line_end":7,"column_start":5,"column_end":15},"name":"NoElements","qualname":"::minmax::MinMaxResult::NoElements","value":"MinMaxResult::NoElements","parent":{"krate":0,"index":2181},"children":[],"decl_id":null,"docs":" Empty iterator\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2185},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/minmax.rs","byte_start":190462,"byte_end":190472,"line_start":10,"line_end":10,"column_start":5,"column_end":15},"name":"OneElement","qualname":"::minmax::MinMaxResult::OneElement","value":"MinMaxResult::OneElement(T)","parent":{"krate":0,"index":2181},"children":[],"decl_id":null,"docs":" Iterator with one element, so the minimum and maximum are the same\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2188},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/minmax.rs","byte_start":190585,"byte_end":190591,"line_start":14,"line_end":14,"column_start":5,"column_end":11},"name":"MinMax","qualname":"::minmax::MinMaxResult::MinMax","value":"MinMaxResult::MinMax(T, T)","parent":{"krate":0,"index":2181},"children":[],"decl_id":null,"docs":" More than one element in the iterator, the first element is not larger\n than the second\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2181},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/minmax.rs","byte_start":190325,"byte_end":190337,"line_start":5,"line_end":5,"column_start":10,"column_end":22},"name":"MinMaxResult","qualname":"::minmax::MinMaxResult","value":"MinMaxResult::{NoElements, OneElement, MinMax}","parent":null,"children":[{"krate":0,"index":2183},{"krate":0,"index":2185},{"krate":0,"index":2188}],"decl_id":null,"docs":" `MinMaxResult` is an enum returned by `minmax`. See `Itertools::minmax()` for\n more detail.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":951},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/minmax.rs","byte_start":191409,"byte_end":191420,"line_start":38,"line_end":38,"column_start":12,"column_end":23},"name":"into_option","qualname":"<MinMaxResult<T>>::into_option","value":"fn (self) -> Option<(T, T)>","parent":null,"children":[],"decl_id":null,"docs":" `into_option` creates an `Option` of type `(T, T)`. The returned `Option`\n has variant `None` if and only if the `MinMaxResult` has variant\n `NoElements`. Otherwise `Some((x, y))` is returned where `x <= y`.\n If the `MinMaxResult` has variant `OneElement(x)`, performing this\n operation will make one clone of `x`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2206},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/multipeek_impl.rs","byte_start":194232,"byte_end":194241,"line_start":8,"line_end":8,"column_start":12,"column_end":21},"name":"MultiPeek","qualname":"::multipeek_impl::MultiPeek","value":"MultiPeek {  }","parent":null,"children":[{"krate":0,"index":2208},{"krate":0,"index":2209},{"krate":0,"index":2210}],"decl_id":null,"docs":" See [`multipeek()`](../fn.multipeek.html) for more information.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":962},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/multipeek_impl.rs","byte_start":194467,"byte_end":194476,"line_start":18,"line_end":18,"column_start":8,"column_end":17},"name":"multipeek","qualname":"::multipeek_impl::multipeek","value":"fn <I> (iterable: I) -> MultiPeek<I::IntoIter>","parent":null,"children":[],"decl_id":null,"docs":" An iterator adaptor that allows the user to peek at multiple `.next()`\n values without advancing the base iterator.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":966},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/multipeek_impl.rs","byte_start":194758,"byte_end":194768,"line_start":32,"line_end":32,"column_start":12,"column_end":22},"name":"reset_peek","qualname":"<MultiPeek<I>>::reset_peek","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Reset the peeking “cursor”\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":969},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/multipeek_impl.rs","byte_start":195032,"byte_end":195036,"line_start":41,"line_end":41,"column_start":12,"column_end":16},"name":"peek","qualname":"<MultiPeek<I>>::peek","value":"fn (&mut self) -> Option<&I::Item>","parent":null,"children":[],"decl_id":null,"docs":" Works exactly like `.next()` with the only difference that it doesn't\n advance itself. `.peek()` can be called multiple times, to peek\n further ahead.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2217},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/pad_tail.rs","byte_start":196842,"byte_end":196850,"line_start":12,"line_end":12,"column_start":12,"column_end":20},"name":"PadUsing","qualname":"::pad_tail::PadUsing","value":"PadUsing {  }","parent":null,"children":[{"krate":0,"index":2220},{"krate":0,"index":2221},{"krate":0,"index":2222},{"krate":0,"index":2223}],"decl_id":null,"docs":" An iterator adaptor that pads a sequence to a minimum length by filling\n missing elements using a closure.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/pad_tail.rs","byte_start":196757,"byte_end":196830,"line_start":11,"line_end":11,"column_start":1,"column_end":74}}]},{"kind":"Trait","id":{"krate":0,"index":1004},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/peeking_take_while.rs","byte_start":199048,"byte_end":199059,"line_start":14,"line_end":14,"column_start":11,"column_end":22},"name":"PeekingNext","qualname":"::peeking_take_while::PeekingNext","value":"PeekingNext: Iterator","parent":null,"children":[{"krate":0,"index":1005}],"decl_id":null,"docs":" An iterator that allows peeking at an element before deciding to accept it.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1005},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/peeking_take_while.rs","byte_start":199243,"byte_end":199255,"line_start":18,"line_end":18,"column_start":8,"column_end":20},"name":"peeking_next","qualname":"::peeking_take_while::PeekingNext::peeking_next","value":"fn <F> (&mut self, accept: F) -> Option<Self::Item>","parent":{"krate":0,"index":1004},"children":[],"decl_id":null,"docs":" Pass a reference to the next iterator element to the closure `accept`;\n if `accept` returns true, return it as the next element,\n else None.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1019},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/peeking_take_while.rs","byte_start":200774,"byte_end":200790,"line_start":79,"line_end":79,"column_start":12,"column_end":28},"name":"PeekingTakeWhile","qualname":"::peeking_take_while::PeekingTakeWhile","value":"PeekingTakeWhile {  }","parent":null,"children":[{"krate":0,"index":1023},{"krate":0,"index":1024}],"decl_id":null,"docs":" An iterator adaptor that takes items while a closure returns `true`.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/peeking_take_while.rs","byte_start":200689,"byte_end":200762,"line_start":78,"line_end":78,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1040},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/permutations.rs","byte_start":203328,"byte_end":203340,"line_start":12,"line_end":12,"column_start":12,"column_end":24},"name":"Permutations","qualname":"::permutations::Permutations","value":"Permutations {  }","parent":null,"children":[{"krate":0,"index":1042},{"krate":0,"index":1043}],"decl_id":null,"docs":" An iterator adaptor that iterates through all the `k`-permutations of the\n elements from an iterator.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/permutations.rs","byte_start":203243,"byte_end":203316,"line_start":11,"line_end":11,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":2301},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/process_results_impl.rs","byte_start":211401,"byte_end":211415,"line_start":9,"line_end":9,"column_start":12,"column_end":26},"name":"ProcessResults","qualname":"::process_results_impl::ProcessResults","value":"ProcessResults {  }","parent":null,"children":[{"krate":0,"index":2305},{"krate":0,"index":2306}],"decl_id":null,"docs":" An iterator that produces only the `T` values as long as the\n inner iterator produces `Ok(T)`.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/process_results_impl.rs","byte_start":211299,"byte_end":211372,"line_start":7,"line_end":7,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":1086},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/process_results_impl.rs","byte_start":213320,"byte_end":213335,"line_start":71,"line_end":71,"column_start":8,"column_end":23},"name":"process_results","qualname":"::process_results_impl::process_results","value":"fn <I, F, T, E, R> (iterable: I, processor: F) -> Result<R, E>","parent":null,"children":[],"decl_id":null,"docs":" “Lift” a function of the values of an iterator so that it can process\n an iterator of `Result` values instead.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2312},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/put_back_n_impl.rs","byte_start":213860,"byte_end":213868,"line_start":8,"line_end":8,"column_start":12,"column_end":20},"name":"PutBackN","qualname":"::put_back_n_impl::PutBackN","value":"PutBackN {  }","parent":null,"children":[{"krate":0,"index":2314},{"krate":0,"index":2315}],"decl_id":null,"docs":" An iterator adaptor that allows putting multiple\n items in front of the iterator.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1095},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/put_back_n_impl.rs","byte_start":214071,"byte_end":214081,"line_start":17,"line_end":17,"column_start":8,"column_end":18},"name":"put_back_n","qualname":"::put_back_n_impl::put_back_n","value":"fn <I> (iterable: I) -> PutBackN<I::IntoIter>","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator where you can put back multiple values to the front\n of the iteration.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1099},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/put_back_n_impl.rs","byte_start":214664,"byte_end":214672,"line_start":42,"line_end":42,"column_start":12,"column_end":20},"name":"put_back","qualname":"<PutBackN<I>>::put_back","value":"fn (&mut self, x: I::Item) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Puts x in front of the iterator.\n The values are yielded in order of the most recently put back\n values first.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/put_back_n_impl.rs","byte_start":214643,"byte_end":214652,"line_start":41,"line_end":41,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":2322},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/rciter_impl.rs","byte_start":215303,"byte_end":215309,"line_start":8,"line_end":8,"column_start":12,"column_end":18},"name":"RcIter","qualname":"::rciter_impl::RcIter","value":"RcIter { rciter }","parent":null,"children":[{"krate":0,"index":2324}],"decl_id":null,"docs":" A wrapper for `Rc<RefCell<I>>`, that implements the `Iterator` trait.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2324},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/rciter_impl.rs","byte_start":215351,"byte_end":215357,"line_start":10,"line_end":10,"column_start":9,"column_end":15},"name":"rciter","qualname":"::rciter_impl::RcIter::rciter","value":"std::rc::Rc<std::cell::RefCell<I>>","parent":{"krate":0,"index":2322},"children":[],"decl_id":null,"docs":" The boxed iterator.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1109},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/rciter_impl.rs","byte_start":216626,"byte_end":216632,"line_start":47,"line_end":47,"column_start":8,"column_end":14},"name":"rciter","qualname":"::rciter_impl::rciter","value":"fn <I> (iterable: I) -> RcIter<I::IntoIter>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator inside a `Rc<RefCell<_>>` wrapper.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2329},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/repeatn.rs","byte_start":218085,"byte_end":218092,"line_start":7,"line_end":7,"column_start":12,"column_end":19},"name":"RepeatN","qualname":"::repeatn::RepeatN","value":"RepeatN {  }","parent":null,"children":[{"krate":0,"index":2331},{"krate":0,"index":2332}],"decl_id":null,"docs":" An iterator that produces *n* repetitions of an element.","sig":null,"attributes":[{"value":"must_use = \"iterators are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/repeatn.rs","byte_start":217984,"byte_end":218049,"line_start":5,"line_end":5,"column_start":1,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":1129},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/repeatn.rs","byte_start":218209,"byte_end":218217,"line_start":13,"line_end":13,"column_start":8,"column_end":16},"name":"repeat_n","qualname":"::repeatn::repeat_n","value":"fn <A> (element: A, n: usize) -> RepeatN<A>","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator that produces `n` repetitions of `element`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2339},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":221926,"byte_end":221936,"line_start":11,"line_end":11,"column_start":12,"column_end":22},"name":"RepeatCall","qualname":"::sources::RepeatCall","value":"RepeatCall {  }","parent":null,"children":[{"krate":0,"index":2341}],"decl_id":null,"docs":" See [`repeat_call`](../fn.repeat_call.html) for more information.\n","sig":null,"attributes":[{"value":"deprecated(note = \"Use std repeat_with() instead\", since = \"0.8\")","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":221850,"byte_end":221914,"line_start":10,"line_end":10,"column_start":1,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":1160},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":222693,"byte_end":222704,"line_start":43,"line_end":43,"column_start":8,"column_end":19},"name":"repeat_call","qualname":"::sources::repeat_call","value":"fn <F, A> (function: F) -> RepeatCall<F>","parent":null,"children":[],"decl_id":null,"docs":" An iterator source that produces elements indefinitely by calling\n a given closure.","sig":null,"attributes":[{"value":"deprecated(note = \"Use std repeat_with() instead\", since = \"0.8\")","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":222621,"byte_end":222685,"line_start":42,"line_end":42,"column_start":1,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":1169},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":224311,"byte_end":224317,"line_start":101,"line_end":101,"column_start":8,"column_end":14},"name":"unfold","qualname":"::sources::unfold","value":"fn <A, St, F> (initial_state: St, f: F) -> Unfold<St, F>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unfold source with the specified closure as the \"iterator\n function\" and an initial state to eventually pass to the closure","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2347},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":224740,"byte_end":224746,"line_start":119,"line_end":119,"column_start":12,"column_end":18},"name":"Unfold","qualname":"::sources::Unfold","value":"Unfold { state }","parent":null,"children":[{"krate":0,"index":2350},{"krate":0,"index":2351}],"decl_id":null,"docs":" See [`unfold`](../fn.unfold.html) for more information.\n","sig":null,"attributes":[{"value":"must_use = \"iterators are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":224663,"byte_end":224728,"line_start":118,"line_end":118,"column_start":1,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":2351},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":224854,"byte_end":224859,"line_start":122,"line_end":122,"column_start":9,"column_end":14},"name":"state","qualname":"::sources::Unfold::state","value":"St","parent":{"krate":0,"index":2347},"children":[],"decl_id":null,"docs":" Internal state that will be passed to the closure on the next iteration\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2356},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":225519,"byte_end":225526,"line_start":149,"line_end":149,"column_start":12,"column_end":19},"name":"Iterate","qualname":"::sources::Iterate","value":"Iterate {  }","parent":null,"children":[{"krate":0,"index":2359},{"krate":0,"index":2360}],"decl_id":null,"docs":" An iterator that infinitely applies function to value and yields results.","sig":null,"attributes":[{"value":"must_use = \"iterators are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":225442,"byte_end":225507,"line_start":148,"line_end":148,"column_start":1,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":1192},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":226283,"byte_end":226290,"line_start":184,"line_end":184,"column_start":8,"column_end":15},"name":"iterate","qualname":"::sources::iterate","value":"fn <St, F> (initial_value: St, f: F) -> Iterate<St, F>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new iterator that infinitely applies function to value and yields results.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2376},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tee.rs","byte_start":227008,"byte_end":227011,"line_start":21,"line_end":21,"column_start":12,"column_end":15},"name":"Tee","qualname":"::tee::Tee","value":"Tee {  }","parent":null,"children":[{"krate":0,"index":2378},{"krate":0,"index":2379}],"decl_id":null,"docs":" One half of an iterator pair where both return the same elements.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tee.rs","byte_start":226906,"byte_end":226979,"line_start":19,"line_end":19,"column_start":1,"column_end":74}}]},{"kind":"Trait","id":{"krate":0,"index":1211},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs","byte_start":228972,"byte_end":228988,"line_start":11,"line_end":11,"column_start":11,"column_end":27},"name":"HomogeneousTuple","qualname":"::tuple_impl::HomogeneousTuple","value":"HomogeneousTuple: TupleCollect","parent":null,"children":[],"decl_id":null,"docs":" Implemented for homogeneous tuples of size up to 4.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2383},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs","byte_start":229276,"byte_end":229287,"line_start":22,"line_end":22,"column_start":12,"column_end":23},"name":"TupleBuffer","qualname":"::tuple_impl::TupleBuffer","value":"TupleBuffer {  }","parent":null,"children":[{"krate":0,"index":2385},{"krate":0,"index":2386}],"decl_id":null,"docs":" An iterator over a incomplete tuple.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2393},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs","byte_start":230541,"byte_end":230547,"line_start":78,"line_end":78,"column_start":12,"column_end":18},"name":"Tuples","qualname":"::tuple_impl::Tuples","value":"Tuples {  }","parent":null,"children":[{"krate":0,"index":2396},{"krate":0,"index":2397}],"decl_id":null,"docs":" An iterator that groups the items in tuples of a specific size.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs","byte_start":230456,"byte_end":230529,"line_start":77,"line_end":77,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1236},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs","byte_start":231602,"byte_end":231613,"line_start":122,"line_end":122,"column_start":12,"column_end":23},"name":"into_buffer","qualname":"<Tuples<I, T>>::into_buffer","value":"fn (self) -> TupleBuffer<T>","parent":null,"children":[],"decl_id":null,"docs":" Return a buffer with the produced items that was not enough to be grouped in a tuple.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2402},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs","byte_start":231984,"byte_end":231996,"line_start":134,"line_end":134,"column_start":12,"column_end":24},"name":"TupleWindows","qualname":"::tuple_impl::TupleWindows","value":"TupleWindows {  }","parent":null,"children":[{"krate":0,"index":2405},{"krate":0,"index":2406}],"decl_id":null,"docs":" An iterator over all contiguous windows that produces tuples of a specific size.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs","byte_start":231875,"byte_end":231948,"line_start":132,"line_end":132,"column_start":1,"column_end":74}}]},{"kind":"Trait","id":{"krate":0,"index":1246},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs","byte_start":233293,"byte_end":233305,"line_start":187,"line_end":187,"column_start":11,"column_end":23},"name":"TupleCollect","qualname":"::tuple_impl::TupleCollect","value":"TupleCollect: Sized","parent":null,"children":[{"krate":0,"index":1247},{"krate":0,"index":1248},{"krate":0,"index":1249},{"krate":0,"index":1251},{"krate":0,"index":1253},{"krate":0,"index":1254}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1247},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs","byte_start":233324,"byte_end":233328,"line_start":188,"line_end":188,"column_start":10,"column_end":14},"name":"Item","qualname":"::tuple_impl::TupleCollect::Item","value":"type Item;","parent":{"krate":0,"index":1246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1248},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs","byte_start":233339,"byte_end":233345,"line_start":189,"line_end":189,"column_start":10,"column_end":16},"name":"Buffer","qualname":"::tuple_impl::TupleCollect::Buffer","value":"type Buffer: Default + AsRef<[Option<Self::Item>]> + AsMut<[Option<Self::Item>]>;","parent":{"krate":0,"index":1246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1249},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs","byte_start":233424,"byte_end":233441,"line_start":191,"line_end":191,"column_start":8,"column_end":25},"name":"collect_from_iter","qualname":"::tuple_impl::TupleCollect::collect_from_iter","value":"fn <I> (iter: I, buf: &mut Self::Buffer) -> Option<Self>","parent":{"krate":0,"index":1246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1251},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs","byte_start":233552,"byte_end":233576,"line_start":194,"line_end":194,"column_start":8,"column_end":32},"name":"collect_from_iter_no_buf","qualname":"::tuple_impl::TupleCollect::collect_from_iter_no_buf","value":"fn <I> (iter: I) -> Option<Self>","parent":{"krate":0,"index":1246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1253},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs","byte_start":233663,"byte_end":233672,"line_start":197,"line_end":197,"column_start":8,"column_end":17},"name":"num_items","qualname":"::tuple_impl::TupleCollect::num_items","value":"fn () -> usize","parent":{"krate":0,"index":1246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1254},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs","byte_start":233693,"byte_end":233708,"line_start":199,"line_end":199,"column_start":8,"column_end":23},"name":"left_shift_push","qualname":"::tuple_impl::TupleCollect::left_shift_push","value":"fn (&mut self, item: Self::Item) -> ()","parent":{"krate":0,"index":1246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2463},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/unique_impl.rs","byte_start":236435,"byte_end":236443,"line_start":12,"line_end":12,"column_start":12,"column_end":20},"name":"UniqueBy","qualname":"::unique_impl::UniqueBy","value":"UniqueBy {  }","parent":null,"children":[{"krate":0,"index":2467},{"krate":0,"index":2468},{"krate":0,"index":2469}],"decl_id":null,"docs":" An iterator adapter to filter out duplicate elements.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/unique_impl.rs","byte_start":236350,"byte_end":236423,"line_start":11,"line_end":11,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":2476},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/unique_impl.rs","byte_start":239056,"byte_end":239062,"line_start":112,"line_end":112,"column_start":12,"column_end":18},"name":"Unique","qualname":"::unique_impl::Unique","value":"Unique {  }","parent":null,"children":[{"krate":0,"index":2478}],"decl_id":null,"docs":" An iterator adapter to filter out duplicate elements.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/unique_impl.rs","byte_start":238971,"byte_end":239044,"line_start":111,"line_end":111,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1297},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/with_position.rs","byte_start":239857,"byte_end":239869,"line_start":9,"line_end":9,"column_start":12,"column_end":24},"name":"WithPosition","qualname":"::with_position::WithPosition","value":"WithPosition {  }","parent":null,"children":[{"krate":0,"index":1299},{"krate":0,"index":1300}],"decl_id":null,"docs":" An iterator adaptor that wraps each element in an [`Position`](../enum.Position.html).","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/with_position.rs","byte_start":239772,"byte_end":239845,"line_start":8,"line_end":8,"column_start":1,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2486},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/with_position.rs","byte_start":240626,"byte_end":240631,"line_start":40,"line_end":40,"column_start":5,"column_end":10},"name":"First","qualname":"::with_position::Position::First","value":"Position::First(T)","parent":{"krate":0,"index":2484},"children":[],"decl_id":null,"docs":" This is the first element.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2489},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/with_position.rs","byte_start":240696,"byte_end":240702,"line_start":42,"line_end":42,"column_start":5,"column_end":11},"name":"Middle","qualname":"::with_position::Position::Middle","value":"Position::Middle(T)","parent":{"krate":0,"index":2484},"children":[],"decl_id":null,"docs":" This is neither the first nor the last element.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2492},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/with_position.rs","byte_start":240745,"byte_end":240749,"line_start":44,"line_end":44,"column_start":5,"column_end":9},"name":"Last","qualname":"::with_position::Position::Last","value":"Position::Last(T)","parent":{"krate":0,"index":2484},"children":[],"decl_id":null,"docs":" This is the last element.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2495},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/with_position.rs","byte_start":240792,"byte_end":240796,"line_start":46,"line_end":46,"column_start":5,"column_end":9},"name":"Only","qualname":"::with_position::Position::Only","value":"Position::Only(T)","parent":{"krate":0,"index":2484},"children":[],"decl_id":null,"docs":" This is the only element.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2484},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/with_position.rs","byte_start":240573,"byte_end":240581,"line_start":38,"line_end":38,"column_start":10,"column_end":18},"name":"Position","qualname":"::with_position::Position","value":"Position::{First, Middle, Last, Only}","parent":null,"children":[{"krate":0,"index":2486},{"krate":0,"index":2489},{"krate":0,"index":2492},{"krate":0,"index":2495}],"decl_id":null,"docs":" A value yielded by `WithPosition`.\n Indicates the position of this element in the iterator results.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1307},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/with_position.rs","byte_start":240869,"byte_end":240879,"line_start":51,"line_end":51,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Position<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Return the inner value.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2512},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/zip_eq_impl.rs","byte_start":242685,"byte_end":242690,"line_start":8,"line_end":8,"column_start":12,"column_end":17},"name":"ZipEq","qualname":"::zip_eq_impl::ZipEq","value":"ZipEq {  }","parent":null,"children":[{"krate":0,"index":2515},{"krate":0,"index":2516}],"decl_id":null,"docs":" An iterator which iterates two other iterators simultaneously","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/zip_eq_impl.rs","byte_start":242600,"byte_end":242673,"line_start":7,"line_end":7,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":1317},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/zip_eq_impl.rs","byte_start":243065,"byte_end":243071,"line_start":27,"line_end":27,"column_start":8,"column_end":14},"name":"zip_eq","qualname":"::zip_eq_impl::zip_eq","value":"fn <I, J> (i: I, j: J) -> ZipEq<I::IntoIter, J::IntoIter>","parent":null,"children":[],"decl_id":null,"docs":" Iterate `i` and `j` in lock step.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2525},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/zip_longest.rs","byte_start":244503,"byte_end":244513,"line_start":17,"line_end":17,"column_start":12,"column_end":22},"name":"ZipLongest","qualname":"::zip_longest::ZipLongest","value":"ZipLongest {  }","parent":null,"children":[{"krate":0,"index":2528},{"krate":0,"index":2529}],"decl_id":null,"docs":" An iterator which iterates two other iterators simultaneously","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/zip_longest.rs","byte_start":244418,"byte_end":244491,"line_start":16,"line_end":16,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":2538},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/ziptuple.rs","byte_start":246537,"byte_end":246540,"line_start":6,"line_end":6,"column_start":12,"column_end":15},"name":"Zip","qualname":"::ziptuple::Zip","value":"Zip {  }","parent":null,"children":[{"krate":0,"index":2540}],"decl_id":null,"docs":" See [`multizip`](../fn.multizip.html) for more information.\n","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/ziptuple.rs","byte_start":246452,"byte_end":246525,"line_start":5,"line_end":5,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":1355},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/ziptuple.rs","byte_start":247704,"byte_end":247712,"line_start":41,"line_end":41,"column_start":8,"column_end":16},"name":"multizip","qualname":"::ziptuple::multizip","value":"fn <T, U> (t: U) -> Zip<T>","parent":null,"children":[],"decl_id":null,"docs":" An iterator that generalizes *.zip()* and allows running multiple iterators in lockstep.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1361},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":9836,"byte_end":9845,"line_start":334,"line_end":334,"column_start":11,"column_end":20},"name":"Itertools","qualname":"::Itertools","value":"Itertools: Iterator","parent":null,"children":[{"krate":0,"index":1362},{"krate":0,"index":1364},{"krate":0,"index":1366},{"krate":0,"index":1367},{"krate":0,"index":1369},{"krate":0,"index":1371},{"krate":0,"index":1374},{"krate":0,"index":1377},{"krate":0,"index":1378},{"krate":0,"index":1380},{"krate":0,"index":1382},{"krate":0,"index":1383},{"krate":0,"index":1384},{"krate":0,"index":1386},{"krate":0,"index":1391},{"krate":0,"index":1393},{"krate":0,"index":1396},{"krate":0,"index":1399},{"krate":0,"index":1400},{"krate":0,"index":1402},{"krate":0,"index":1404},{"krate":0,"index":1405},{"krate":0,"index":1407},{"krate":0,"index":1408},{"krate":0,"index":1410},{"krate":0,"index":1411},{"krate":0,"index":1414},{"krate":0,"index":1416},{"krate":0,"index":1418},{"krate":0,"index":1420},{"krate":0,"index":1422},{"krate":0,"index":1423},{"krate":0,"index":1424},{"krate":0,"index":1425},{"krate":0,"index":1427},{"krate":0,"index":1428},{"krate":0,"index":1430},{"krate":0,"index":1432},{"krate":0,"index":1434},{"krate":0,"index":1436},{"krate":0,"index":1438},{"krate":0,"index":1440},{"krate":0,"index":1441},{"krate":0,"index":1442},{"krate":0,"index":1444},{"krate":0,"index":1445},{"krate":0,"index":1446},{"krate":0,"index":1450},{"krate":0,"index":1454},{"krate":0,"index":1455},{"krate":0,"index":1456},{"krate":0,"index":1458},{"krate":0,"index":1463},{"krate":0,"index":1467},{"krate":0,"index":1470},{"krate":0,"index":1482},{"krate":0,"index":1485},{"krate":0,"index":1488},{"krate":0,"index":1491},{"krate":0,"index":1492},{"krate":0,"index":1494},{"krate":0,"index":1497},{"krate":0,"index":1504},{"krate":0,"index":1507},{"krate":0,"index":1510},{"krate":0,"index":1514},{"krate":0,"index":1518},{"krate":0,"index":1521},{"krate":0,"index":1526},{"krate":0,"index":1530},{"krate":0,"index":1533},{"krate":0,"index":1538},{"krate":0,"index":1542},{"krate":0,"index":1549},{"krate":0,"index":1557},{"krate":0,"index":1564}],"decl_id":null,"docs":" An [`Iterator`] blanket implementation that provides extra adaptors and\n methods.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1362},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":10244,"byte_end":10254,"line_start":349,"line_end":349,"column_start":8,"column_end":18},"name":"interleave","qualname":"::Itertools::interleave","value":"fn <J> (self, other: J) -> Interleave<Self, J::IntoIter>","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" Alternate elements from two iterators until both have run out.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1364},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":10777,"byte_end":10796,"line_start":367,"line_end":367,"column_start":8,"column_end":27},"name":"interleave_shortest","qualname":"::Itertools::interleave_shortest","value":"fn <J> (self, other: J) -> InterleaveShortest<Self, J::IntoIter>","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" Alternate elements from two iterators until at least one of them has run\n out.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1366},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":11375,"byte_end":11386,"line_start":386,"line_end":386,"column_start":8,"column_end":19},"name":"intersperse","qualname":"::Itertools::intersperse","value":"fn (self, element: Self::Item) -> Intersperse<Self>","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" An iterator adaptor to insert a particular value\n between each element of the adapted iterator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1367},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":12629,"byte_end":12640,"line_start":420,"line_end":420,"column_start":8,"column_end":19},"name":"zip_longest","qualname":"::Itertools::zip_longest","value":"fn <J> (self, other: J) -> ZipLongest<Self, J::IntoIter>","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" Create an iterator which iterates over both this and the specified\n iterator simultaneously, yielding pairs of two optional elements.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":12612,"byte_end":12621,"line_start":419,"line_end":419,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1369},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":13078,"byte_end":13084,"line_start":433,"line_end":433,"column_start":8,"column_end":14},"name":"zip_eq","qualname":"::Itertools::zip_eq","value":"fn <J> (self, other: J) -> ZipEq<Self, J::IntoIter>","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" Create an iterator which iterates over both this and the specified\n iterator simultaneously, yielding pairs of elements.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":13061,"byte_end":13070,"line_start":432,"line_end":432,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1371},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":14000,"byte_end":14008,"line_start":463,"line_end":463,"column_start":8,"column_end":16},"name":"batching","qualname":"::Itertools::batching","value":"fn <B, F> (self, f: F) -> Batching<Self, F>","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" A “meta iterator adaptor”. Its closure receives a reference to the\n iterator and may pick off as many elements as it likes, to produce the\n next iterator element.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1374},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":15735,"byte_end":15743,"line_start":505,"line_end":505,"column_start":8,"column_end":16},"name":"group_by","qualname":"::Itertools::group_by","value":"fn <K, F> (self, key: F) -> GroupBy<K, Self, F>","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" Return an *iterable* that can group iterator elements.\n Consecutive elements that map to the same key (“runs”), are assigned\n to the same group.","sig":null,"attributes":[{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":15700,"byte_end":15727,"line_start":504,"line_end":504,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1377},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":17022,"byte_end":17028,"line_start":541,"line_end":541,"column_start":8,"column_end":14},"name":"chunks","qualname":"::Itertools::chunks","value":"fn (self, size: usize) -> IntoChunks<Self>","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" Return an *iterable* that can chunk the iterator.","sig":null,"attributes":[{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":16987,"byte_end":17014,"line_start":540,"line_end":540,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1378},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":18384,"byte_end":18397,"line_start":579,"line_end":579,"column_start":8,"column_end":21},"name":"tuple_windows","qualname":"::Itertools::tuple_windows","value":"fn <T> (self) -> TupleWindows<Self, T>","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" Return an iterator over all contiguous windows producing tuples of\n a specific size (up to 4).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1380},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":19706,"byte_end":19712,"line_start":618,"line_end":618,"column_start":8,"column_end":14},"name":"tuples","qualname":"::Itertools::tuples","value":"fn <T> (self) -> Tuples<Self, T>","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" Return an iterator that groups the items in tuples of a specific size\n (up to 4).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1382},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":20521,"byte_end":20524,"line_start":643,"line_end":643,"column_start":8,"column_end":11},"name":"tee","qualname":"::Itertools::tee","value":"fn (self) -> (Tee<Self>, Tee<Self>)","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" Split into an iterator pair that both yield all elements from\n the original iterator.","sig":null,"attributes":[{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":20486,"byte_end":20513,"line_start":642,"line_end":642,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1383},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":21253,"byte_end":21257,"line_start":668,"line_end":668,"column_start":8,"column_end":12},"name":"step","qualname":"::Itertools::step","value":"fn (self, n: usize) -> Step<Self>","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that steps `n` elements in the base iterator\n for each iteration.","sig":null,"attributes":[{"value":"deprecated(note = \"Use std .step_by() instead\", since = \"0.8\")","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":21159,"byte_end":21220,"line_start":666,"line_end":666,"column_start":5,"column_end":66}},{"value":"allow(deprecated)","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":21225,"byte_end":21245,"line_start":667,"line_end":667,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1384},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":21565,"byte_end":21573,"line_start":681,"line_end":681,"column_start":8,"column_end":16},"name":"map_into","qualname":"::Itertools::map_into","value":"fn <R> (self) -> MapInto<Self, R>","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" Convert each item of the iterator using the `Into` trait.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1386},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":22126,"byte_end":22137,"line_start":699,"line_end":699,"column_start":8,"column_end":19},"name":"map_results","qualname":"::Itertools::map_results","value":"fn <F, T, U, E> (self, f: F) -> MapResults<Self, F>","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that applies the provided closure\n to every `Result::Ok` value. `Result::Err` values are\n unchanged.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1391},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":22800,"byte_end":22805,"line_start":720,"line_end":720,"column_start":8,"column_end":13},"name":"merge","qualname":"::Itertools::merge","value":"fn <J> (self, other: J) -> Merge<Self, J::IntoIter>","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that merges the two base iterators in\n ascending order.  If both base iterators are sorted (ascending), the\n result is sorted.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1393},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":23582,"byte_end":23590,"line_start":744,"line_end":744,"column_start":8,"column_end":16},"name":"merge_by","qualname":"::Itertools::merge_by","value":"fn <J, F> (self, other: J, is_first: F) -> MergeBy<Self, J::IntoIter, F>","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that merges the two base iterators in order.\n This is much like `.merge()` but allows for a custom ordering.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1396},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":25180,"byte_end":25193,"line_start":784,"line_end":784,"column_start":8,"column_end":21},"name":"merge_join_by","qualname":"::Itertools::merge_join_by","value":"fn <J, F> (self, other: J, cmp_fn: F) -> MergeJoinBy<Self, J::IntoIter, F>","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" Create an iterator that merges items from both this and the specified\n iterator in ascending order.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":25163,"byte_end":25172,"line_start":783,"line_end":783,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1399},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":26027,"byte_end":26033,"line_start":810,"line_end":810,"column_start":8,"column_end":14},"name":"kmerge","qualname":"::Itertools::kmerge","value":"fn (self) -> KMerge<<Self::Item as IntoIterator>::IntoIter>","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that flattens an iterator of iterators by\n merging them in ascending order.","sig":null,"attributes":[{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":25992,"byte_end":26019,"line_start":809,"line_end":809,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1400},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":27038,"byte_end":27047,"line_start":839,"line_end":839,"column_start":8,"column_end":17},"name":"kmerge_by","qualname":"::Itertools::kmerge_by","value":"fn <F> (self, first: F) -> KMergeBy<<Self::Item as IntoIterator>::IntoIter, F>","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that flattens an iterator of iterators by\n merging them according to the given closure.","sig":null,"attributes":[{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":27003,"byte_end":27030,"line_start":838,"line_end":838,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1402},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":27799,"byte_end":27816,"line_start":860,"line_end":860,"column_start":8,"column_end":25},"name":"cartesian_product","qualname":"::Itertools::cartesian_product","value":"fn <J> (self, other: J) -> Product<Self, J::IntoIter>","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that iterates over the cartesian product of\n the element sets of two iterators `self` and `J`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1404},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":29271,"byte_end":29294,"line_start":895,"line_end":895,"column_start":8,"column_end":31},"name":"multi_cartesian_product","qualname":"::Itertools::multi_cartesian_product","value":"fn (self) -> MultiProduct<<Self::Item as IntoIterator>::IntoIter>","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that iterates over the cartesian product of\n all subiterators returned by meta-iterator `self`.","sig":null,"attributes":[{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":29236,"byte_end":29263,"line_start":894,"line_end":894,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1405},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":30787,"byte_end":30795,"line_start":932,"line_end":932,"column_start":8,"column_end":16},"name":"coalesce","qualname":"::Itertools::coalesce","value":"fn <F> (self, f: F) -> Coalesce<Self, F>","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that uses the passed-in closure to\n optionally merge together consecutive elements.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1407},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":31509,"byte_end":31514,"line_start":954,"line_end":954,"column_start":8,"column_end":13},"name":"dedup","qualname":"::Itertools::dedup","value":"fn (self) -> Dedup<Self>","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" Remove duplicates from sections of consecutive identical elements.\n If the iterator is sorted, all elements will be unique.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1408},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":32257,"byte_end":32265,"line_start":976,"line_end":976,"column_start":8,"column_end":16},"name":"dedup_by","qualname":"::Itertools::dedup_by","value":"fn <Cmp> (self, cmp: Cmp) -> DedupBy<Self, Cmp>","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" Remove duplicates from sections of consecutive identical elements,\n determining equality using a comparison function.\n If the iterator is sorted, all elements will be unique.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1410},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":33007,"byte_end":33013,"line_start":998,"line_end":998,"column_start":8,"column_end":14},"name":"unique","qualname":"::Itertools::unique","value":"fn (self) -> Unique<Self>","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that filters out elements that have\n already been produced once during the iteration. Duplicates\n are detected using hash and equality.","sig":null,"attributes":[{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":32972,"byte_end":32999,"line_start":997,"line_end":997,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1411},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":33770,"byte_end":33779,"line_start":1020,"line_end":1020,"column_start":8,"column_end":17},"name":"unique_by","qualname":"::Itertools::unique_by","value":"fn <V, F> (self, f: F) -> UniqueBy<Self, V, F>","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that filters out elements that have\n already been produced once during the iteration.","sig":null,"attributes":[{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":33735,"byte_end":33762,"line_start":1019,"line_end":1019,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1414},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":34516,"byte_end":34534,"line_start":1040,"line_end":1040,"column_start":8,"column_end":26},"name":"peeking_take_while","qualname":"::Itertools::peeking_take_while","value":"fn <F> (&mut self, accept: F) -> PeekingTakeWhile<Self, F>","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that borrows from this iterator and\n takes items while the closure `accept` returns `true`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1416},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":35480,"byte_end":35494,"line_start":1065,"line_end":1065,"column_start":8,"column_end":22},"name":"take_while_ref","qualname":"::Itertools::take_while_ref","value":"fn <F> (&mut self, accept: F) -> TakeWhileRef<Self, F>","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that borrows from a `Clone`-able iterator\n to only pick off elements while the predicate `accept` returns `true`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1418},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":36160,"byte_end":36170,"line_start":1086,"line_end":1086,"column_start":8,"column_end":18},"name":"while_some","qualname":"::Itertools::while_some","value":"fn <A> (self) -> WhileSome<Self>","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that filters `Option<A>` iterator elements\n and produces `A`. Stops on the first `None` encountered.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1420},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":37601,"byte_end":37619,"line_start":1125,"line_end":1125,"column_start":8,"column_end":26},"name":"tuple_combinations","qualname":"::Itertools::tuple_combinations","value":"fn <T> (self) -> TupleCombinations<Self, T>","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that iterates over the combinations of the\n elements from an iterator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1422},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":38828,"byte_end":38840,"line_start":1163,"line_end":1163,"column_start":8,"column_end":20},"name":"combinations","qualname":"::Itertools::combinations","value":"fn (self, k: usize) -> Combinations<Self>","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that iterates over the `k`-length combinations of\n the elements from an iterator.","sig":null,"attributes":[{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":38793,"byte_end":38820,"line_start":1162,"line_end":1162,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1423},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":39647,"byte_end":39676,"line_start":1190,"line_end":1190,"column_start":8,"column_end":37},"name":"combinations_with_replacement","qualname":"::Itertools::combinations_with_replacement","value":"fn (self, k: usize) -> CombinationsWithReplacement<Self>","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" Return an iterator that iterates over the `k`-length combinations of\n the elements from an iterator, with replacement.","sig":null,"attributes":[{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":39612,"byte_end":39639,"line_start":1189,"line_end":1189,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1424},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":41189,"byte_end":41201,"line_start":1236,"line_end":1236,"column_start":8,"column_end":20},"name":"permutations","qualname":"::Itertools::permutations","value":"fn (self, k: usize) -> Permutations<Self>","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that iterates over all k-permutations of the\n elements from an iterator.","sig":null,"attributes":[{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":41154,"byte_end":41181,"line_start":1235,"line_end":1235,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1425},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":42031,"byte_end":42040,"line_start":1260,"line_end":1260,"column_start":8,"column_end":17},"name":"pad_using","qualname":"::Itertools::pad_using","value":"fn <F> (self, min: usize, f: F) -> PadUsing<Self, F>","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that pads the sequence to a minimum length of\n `min` by filling missing elements using a closure `f`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1427},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":42965,"byte_end":42978,"line_start":1286,"line_end":1286,"column_start":8,"column_end":21},"name":"with_position","qualname":"::Itertools::with_position","value":"fn (self) -> WithPosition<Self>","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that wraps each element in a `Position` to\n ease special-case handling of the first or last elements.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1428},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":43657,"byte_end":43666,"line_start":1305,"line_end":1305,"column_start":8,"column_end":17},"name":"positions","qualname":"::Itertools::positions","value":"fn <P> (self, predicate: P) -> Positions<Self, P>","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that yields the indices of all elements\n satisfying a predicate, counted from the start of the iterator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1430},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":44219,"byte_end":44225,"line_start":1322,"line_end":1322,"column_start":8,"column_end":14},"name":"update","qualname":"::Itertools::update","value":"fn <F> (self, updater: F) -> Update<Self, F>","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that applies a mutating function\n to each element before yielding it.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1432},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":44850,"byte_end":44860,"line_start":1343,"line_end":1343,"column_start":8,"column_end":18},"name":"next_tuple","qualname":"::Itertools::next_tuple","value":"fn <T> (&mut self) -> Option<T>","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" Advances the iterator and returns the next items grouped in a tuple of\n a specific size (up to 4).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1434},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":45602,"byte_end":45615,"line_start":1368,"line_end":1368,"column_start":8,"column_end":21},"name":"collect_tuple","qualname":"::Itertools::collect_tuple","value":"fn <T> (mut self) -> Option<T>","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" Collects all items from the iterator into a tuple of a specific size\n (up to 4).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1436},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":46296,"byte_end":46309,"line_start":1392,"line_end":1392,"column_start":8,"column_end":21},"name":"find_position","qualname":"::Itertools::find_position","value":"fn <P> (&mut self, mut pred: P) -> Option<(usize, Self::Item)>","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" Find the position and value of the first element satisfying a predicate.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1438},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":47158,"byte_end":47167,"line_start":1421,"line_end":1421,"column_start":8,"column_end":17},"name":"all_equal","qualname":"::Itertools::all_equal","value":"fn (&mut self) -> bool","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" Check whether all elements compare equal.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1440},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":47945,"byte_end":47953,"line_start":1446,"line_end":1446,"column_start":8,"column_end":16},"name":"dropping","qualname":"::Itertools::dropping","value":"fn (mut self, n: usize) -> Self","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" Consume the first `n` elements from the iterator eagerly,\n and return the same iterator again.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1441},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":48646,"byte_end":48659,"line_start":1470,"line_end":1470,"column_start":8,"column_end":21},"name":"dropping_back","qualname":"::Itertools::dropping_back","value":"fn (mut self, n: usize) -> Self","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" Consume the last `n` elements from the iterator eagerly,\n and return the same iterator again.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1442},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":49445,"byte_end":49452,"line_start":1498,"line_end":1498,"column_start":8,"column_end":15},"name":"foreach","qualname":"::Itertools::foreach","value":"fn <F> (self, f: F) -> ()","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" Run the closure `f` eagerly on each element of the iterator.","sig":null,"attributes":[{"value":"deprecated(note = \"Use .for_each() instead\", since = \"0.8\")","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":49379,"byte_end":49437,"line_start":1497,"line_end":1497,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1444},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":50083,"byte_end":50089,"line_start":1518,"line_end":1518,"column_start":8,"column_end":14},"name":"concat","qualname":"::Itertools::concat","value":"fn (self) -> Self::Item","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" Combine all an iterator's elements into one element by using `Extend`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1445},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":50417,"byte_end":50428,"line_start":1528,"line_end":1528,"column_start":8,"column_end":19},"name":"collect_vec","qualname":"::Itertools::collect_vec","value":"fn (self) -> Vec<Self::Item>","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" `.collect_vec()` is simply a type specialization of `.collect()`,\n for convenience.\n","sig":null,"attributes":[{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":50382,"byte_end":50409,"line_start":1527,"line_end":1527,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1446},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":51070,"byte_end":51081,"line_start":1555,"line_end":1555,"column_start":8,"column_end":19},"name":"try_collect","qualname":"::Itertools::try_collect","value":"fn <T, U, E> (self) -> Result<U, E>","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" `.try_collect()` is more convenient way of writing\n `.collect::<Result<_, _>>()`","sig":null,"attributes":[{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":51035,"byte_end":51062,"line_start":1554,"line_end":1554,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1450},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":51791,"byte_end":51799,"line_start":1579,"line_end":1579,"column_start":8,"column_end":16},"name":"set_from","qualname":"::Itertools::set_from","value":"fn <'a, A, J> (&mut self, from: J) -> usize","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" Assign to each reference in `self` from the `from` iterator,\n stopping at the shortest of the two iterators.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":51774,"byte_end":51783,"line_start":1578,"line_end":1578,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1454},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":52543,"byte_end":52547,"line_start":1605,"line_end":1605,"column_start":8,"column_end":12},"name":"join","qualname":"::Itertools::join","value":"fn (&mut self, sep: &str) -> String","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" Combine all iterator elements into one String, separated by `sep`.","sig":null,"attributes":[{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":52508,"byte_end":52535,"line_start":1604,"line_end":1604,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1455},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":53675,"byte_end":53681,"line_start":1639,"line_end":1639,"column_start":8,"column_end":14},"name":"format","qualname":"::Itertools::format","value":"fn (self, sep: &str) -> Format<Self>","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" Format all iterator elements, separated by `sep`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1456},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":55159,"byte_end":55170,"line_start":1677,"line_end":1677,"column_start":8,"column_end":19},"name":"format_with","qualname":"::Itertools::format_with","value":"fn <F> (self, sep: &str, format: F) -> FormatWith<Self, F>","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" Format all iterator elements, separated by `sep`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1458},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":56900,"byte_end":56912,"line_start":1726,"line_end":1726,"column_start":8,"column_end":20},"name":"fold_results","qualname":"::Itertools::fold_results","value":"fn <A, E, B, F> (&mut self, mut start: B, mut f: F) -> Result<B, E>","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" Fold `Result` values from an iterator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1463},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":58069,"byte_end":58081,"line_start":1758,"line_end":1758,"column_start":8,"column_end":20},"name":"fold_options","qualname":"::Itertools::fold_options","value":"fn <A, B, F> (&mut self, mut start: B, mut f: F) -> Option<B>","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" Fold `Option` values from an iterator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1467},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":58881,"byte_end":58886,"line_start":1783,"line_end":1783,"column_start":8,"column_end":13},"name":"fold1","qualname":"::Itertools::fold1","value":"fn <F> (mut self, f: F) -> Option<Self::Item>","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" Accumulator of the elements in the iterator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1470},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":60874,"byte_end":60884,"line_start":1838,"line_end":1838,"column_start":8,"column_end":18},"name":"tree_fold1","qualname":"::Itertools::tree_fold1","value":"fn <F> (mut self, mut f: F) -> Option<Self::Item>","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" Accumulate the elements in the iterator in a tree-like manner.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1482},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":64438,"byte_end":64448,"line_start":1937,"line_end":1937,"column_start":8,"column_end":18},"name":"fold_while","qualname":"::Itertools::fold_while","value":"fn <B, F> (&mut self, init: B, mut f: F) -> FoldWhile<B>","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" An iterator method that applies a function, producing a single, final value.","sig":null,"attributes":[{"value":"deprecated(note = \"Use .try_fold() instead\", since = \"0.8\")","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":64372,"byte_end":64430,"line_start":1936,"line_end":1936,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1485},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":65515,"byte_end":65519,"line_start":1972,"line_end":1972,"column_start":8,"column_end":12},"name":"sum1","qualname":"::Itertools::sum1","value":"fn <S> (mut self) -> Option<S>","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" Iterate over the entire iterator and add all the elements.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1488},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":66382,"byte_end":66390,"line_start":2000,"line_end":2000,"column_start":8,"column_end":16},"name":"product1","qualname":"::Itertools::product1","value":"fn <P> (mut self) -> Option<P>","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" Iterate over the entire iterator and multiply all the elements.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1491},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":67281,"byte_end":67287,"line_start":2027,"line_end":2027,"column_start":8,"column_end":14},"name":"sorted","qualname":"::Itertools::sorted","value":"fn (self) -> VecIntoIter<Self::Item>","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" Sort all iterator elements into a new iterator in ascending order.","sig":null,"attributes":[{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":67246,"byte_end":67273,"line_start":2026,"line_end":2026,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1492},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":68509,"byte_end":68518,"line_start":2062,"line_end":2062,"column_start":8,"column_end":17},"name":"sorted_by","qualname":"::Itertools::sorted_by","value":"fn <F> (self, cmp: F) -> VecIntoIter<Self::Item>","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" Sort all iterator elements into a new iterator in ascending order.","sig":null,"attributes":[{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":68474,"byte_end":68501,"line_start":2061,"line_end":2061,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1494},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":69679,"byte_end":69692,"line_start":2095,"line_end":2095,"column_start":8,"column_end":21},"name":"sorted_by_key","qualname":"::Itertools::sorted_by_key","value":"fn <K, F> (self, f: F) -> VecIntoIter<Self::Item>","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" Sort all iterator elements into a new iterator in ascending order.","sig":null,"attributes":[{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":69644,"byte_end":69671,"line_start":2094,"line_end":2094,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1497},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":70645,"byte_end":70658,"line_start":2126,"line_end":2126,"column_start":8,"column_end":21},"name":"partition_map","qualname":"::Itertools::partition_map","value":"fn <A, B, F, L, R> (self, mut predicate: F) -> (A, B)","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" Collect all iterator elements into one of two\n partitions. Unlike `Iterator::partition`, each partition may\n have a distinct type.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1504},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":71742,"byte_end":71756,"line_start":2158,"line_end":2158,"column_start":8,"column_end":22},"name":"into_group_map","qualname":"::Itertools::into_group_map","value":"fn <K, V> (self) -> HashMap<K, Vec<V>>","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" Return a `HashMap` of keys mapped to `Vec`s of values. Keys and values\n are taken from `(Key, Value)` tuple pairs yielded by the input iterator.","sig":null,"attributes":[{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":71707,"byte_end":71734,"line_start":2157,"line_end":2157,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1507},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":73219,"byte_end":73225,"line_start":2200,"line_end":2200,"column_start":8,"column_end":14},"name":"minmax","qualname":"::Itertools::minmax","value":"fn (self) -> MinMaxResult<Self::Item>","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" Return the minimum and maximum elements in the iterator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1510},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":73921,"byte_end":73934,"line_start":2217,"line_end":2217,"column_start":8,"column_end":21},"name":"minmax_by_key","qualname":"::Itertools::minmax_by_key","value":"fn <K, F> (self, key: F) -> MinMaxResult<Self::Item>","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" Return the minimum and maximum element of an iterator, as determined by\n the specified function.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1514},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":74572,"byte_end":74581,"line_start":2231,"line_end":2231,"column_start":8,"column_end":17},"name":"minmax_by","qualname":"::Itertools::minmax_by","value":"fn <F> (self, mut compare: F) -> MinMaxResult<Self::Item>","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" Return the minimum and maximum element of an iterator, as determined by\n the specified comparison function.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1518},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":75416,"byte_end":75428,"line_start":2260,"line_end":2260,"column_start":8,"column_end":20},"name":"position_max","qualname":"::Itertools::position_max","value":"fn (self) -> Option<usize>","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" Return the position of the maximum element in the iterator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1521},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":76279,"byte_end":76298,"line_start":2288,"line_end":2288,"column_start":8,"column_end":27},"name":"position_max_by_key","qualname":"::Itertools::position_max_by_key","value":"fn <K, F> (self, mut key: F) -> Option<usize>","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" Return the position of the maximum element in the iterator, as\n determined by the specified function.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1526},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":77209,"byte_end":77224,"line_start":2316,"line_end":2316,"column_start":8,"column_end":23},"name":"position_max_by","qualname":"::Itertools::position_max_by","value":"fn <F> (self, mut compare: F) -> Option<usize>","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" Return the position of the maximum element in the iterator, as\n determined by the specified comparison function.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1530},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":78014,"byte_end":78026,"line_start":2343,"line_end":2343,"column_start":8,"column_end":20},"name":"position_min","qualname":"::Itertools::position_min","value":"fn (self) -> Option<usize>","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" Return the position of the minimum element in the iterator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1533},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":78878,"byte_end":78897,"line_start":2371,"line_end":2371,"column_start":8,"column_end":27},"name":"position_min_by_key","qualname":"::Itertools::position_min_by_key","value":"fn <K, F> (self, mut key: F) -> Option<usize>","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" Return the position of the minimum element in the iterator, as\n determined by the specified function.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1538},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":79809,"byte_end":79824,"line_start":2399,"line_end":2399,"column_start":8,"column_end":23},"name":"position_min_by","qualname":"::Itertools::position_min_by","value":"fn <F> (self, mut compare: F) -> Option<usize>","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" Return the position of the minimum element in the iterator, as\n determined by the specified comparison function.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1542},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":81782,"byte_end":81797,"line_start":2451,"line_end":2451,"column_start":8,"column_end":23},"name":"position_minmax","qualname":"::Itertools::position_minmax","value":"fn (self) -> MinMaxResult<usize>","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" Return the positions of the minimum and maximum elements in\n the iterator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1549},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":83532,"byte_end":83554,"line_start":2497,"line_end":2497,"column_start":8,"column_end":30},"name":"position_minmax_by_key","qualname":"::Itertools::position_minmax_by_key","value":"fn <K, F> (self, mut key: F) -> MinMaxResult<usize>","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" Return the postions of the minimum and maximum elements of an\n iterator, as determined by the specified function.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1557},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":85210,"byte_end":85228,"line_start":2540,"line_end":2540,"column_start":8,"column_end":26},"name":"position_minmax_by","qualname":"::Itertools::position_minmax_by","value":"fn <F> (self, mut compare: F) -> MinMaxResult<usize>","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" Return the postions of the minimum and maximum elements of an\n iterator, as determined by the specified comparison function.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1564},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":86566,"byte_end":86577,"line_start":2568,"line_end":2568,"column_start":8,"column_end":19},"name":"exactly_one","qualname":"::Itertools::exactly_one","value":"fn (mut self) -> Result<Self::Item, ExactlyOneError<Self>>","parent":{"krate":0,"index":1361},"children":[],"decl_id":null,"docs":" If the iterator yields exactly one element, that element will be returned, otherwise\n an error will be returned containing an iterator that has the same output as the input\n iterator.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1567},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":87564,"byte_end":87569,"line_start":2601,"line_end":2601,"column_start":8,"column_end":13},"name":"equal","qualname":"::equal","value":"fn <I, J> (a: I, b: J) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if both iterables produce equal sequences\n (elements pairwise equal and sequences of the same length),\n `false` otherwise.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1570},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":88389,"byte_end":88401,"line_start":2629,"line_end":2629,"column_start":8,"column_end":20},"name":"assert_equal","qualname":"::assert_equal","value":"fn <I, J> (a: I, b: J) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Assert that two iterables produce equal sequences, with the same\n semantics as *equal(a, b)*.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1573},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":89628,"byte_end":89637,"line_start":2671,"line_end":2671,"column_start":8,"column_end":17},"name":"partition","qualname":"::partition","value":"fn <'a, A, I, F> (iter: I, mut pred: F) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Partition a sequence using predicate `pred` so that elements\n that map to `true` are placed before elements which map to `false`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2713},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":90573,"byte_end":90581,"line_start":2701,"line_end":2701,"column_start":5,"column_end":13},"name":"Continue","qualname":"::FoldWhile::Continue","value":"FoldWhile::Continue(T)","parent":{"krate":0,"index":2711},"children":[],"decl_id":null,"docs":" Continue folding with this value\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2716},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":90642,"byte_end":90646,"line_start":2703,"line_end":2703,"column_start":5,"column_end":9},"name":"Done","qualname":"::FoldWhile::Done","value":"FoldWhile::Done(T)","parent":{"krate":0,"index":2711},"children":[],"decl_id":null,"docs":" Fold is complete and will return this value\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2711},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":90513,"byte_end":90522,"line_start":2699,"line_end":2699,"column_start":10,"column_end":19},"name":"FoldWhile","qualname":"::FoldWhile","value":"FoldWhile::{Continue, Done}","parent":null,"children":[{"krate":0,"index":2713},{"krate":0,"index":2716}],"decl_id":null,"docs":" An enum used for controlling the execution of `.fold_while()`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1580},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":90738,"byte_end":90748,"line_start":2708,"line_end":2708,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FoldWhile<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Return the value in the continue or done.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1581},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":90941,"byte_end":90948,"line_start":2715,"line_end":2715,"column_start":12,"column_end":19},"name":"is_done","qualname":"<FoldWhile<T>>::is_done","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if `self` is `Done`, false if it is `Continue`.\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/multi_product.rs","byte_start":126141,"byte_end":126153,"line_start":50,"line_end":50,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":111},{"krate":0,"index":113},{"krate":0,"index":115}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/multi_product.rs","byte_start":128244,"byte_end":128260,"line_start":117,"line_end":117,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/multi_product.rs","byte_start":128908,"byte_end":128920,"line_start":146,"line_end":146,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":129},{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":93146,"byte_end":93156,"line_start":53,"line_end":53,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":94567,"byte_end":94585,"line_start":109,"line_end":109,"column_start":25,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":96835,"byte_end":96842,"line_start":194,"line_end":194,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":97461,"byte_end":97468,"line_start":219,"line_end":219,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":99855,"byte_end":99862,"line_start":314,"line_end":314,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":192}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":102295,"byte_end":102303,"line_start":389,"line_end":389,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1669}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":102522,"byte_end":102530,"line_start":398,"line_end":398,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":103695,"byte_end":103699,"line_start":446,"line_end":446,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":104318,"byte_end":104322,"line_start":474,"line_end":474,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":104527,"byte_end":104535,"line_start":485,"line_end":485,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":224}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":106066,"byte_end":106073,"line_start":536,"line_end":536,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1684}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":106289,"byte_end":106290,"line_start":543,"line_end":543,"column_start":55,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":246}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":106761,"byte_end":106768,"line_start":563,"line_end":563,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1685}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":106988,"byte_end":106995,"line_start":573,"line_end":573,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":108123,"byte_end":108135,"line_start":617,"line_end":617,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":264},{"krate":0,"index":266}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":109369,"byte_end":109377,"line_start":659,"line_end":659,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1696}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":109491,"byte_end":109499,"line_start":666,"line_end":666,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1697}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":109877,"byte_end":109885,"line_start":686,"line_end":686,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":110855,"byte_end":110862,"line_start":719,"line_end":719,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":297}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":110994,"byte_end":110995,"line_start":725,"line_end":725,"column_start":55,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":301}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":111300,"byte_end":111307,"line_start":736,"line_end":736,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1702}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":111816,"byte_end":111823,"line_start":763,"line_end":763,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1703}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":111968,"byte_end":111975,"line_start":770,"line_end":770,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":321},{"krate":0,"index":322}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":113348,"byte_end":113360,"line_start":816,"line_end":816,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1704}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":113688,"byte_end":113700,"line_start":829,"line_end":829,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":345}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":114793,"byte_end":114802,"line_start":871,"line_end":871,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":353}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":116118,"byte_end":116135,"line_start":922,"line_end":922,"column_start":25,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":363},{"krate":0,"index":364}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":116394,"byte_end":116411,"line_start":938,"line_end":938,"column_start":21,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":367}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":116523,"byte_end":116540,"line_start":944,"line_end":944,"column_start":32,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":370},{"krate":0,"index":371}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":119318,"byte_end":119325,"line_start":1037,"line_end":1037,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":386},{"krate":0,"index":387}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":119840,"byte_end":119847,"line_start":1060,"line_end":1060,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":120086,"byte_end":120093,"line_start":1071,"line_end":1071,"column_start":34,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":120744,"byte_end":120754,"line_start":1098,"line_end":1098,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":419}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":122053,"byte_end":122062,"line_start":1150,"line_end":1150,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":430}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":122551,"byte_end":122560,"line_start":1172,"line_end":1172,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":434}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":123406,"byte_end":123412,"line_start":1205,"line_end":1205,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":448}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":124278,"byte_end":124284,"line_start":1241,"line_end":1241,"column_start":34,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":124390,"byte_end":124396,"line_start":1247,"line_end":1247,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":457}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs","byte_start":131291,"byte_end":131303,"line_start":16,"line_end":16,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":464},{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":478},{"krate":0,"index":481},{"krate":0,"index":486},{"krate":0,"index":489}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs","byte_start":135916,"byte_end":135928,"line_start":168,"line_end":168,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":494}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs","byte_start":136291,"byte_end":136303,"line_start":182,"line_end":182,"column_start":43,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":499}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/cons_tuples_impl.rs","byte_start":144357,"byte_end":144367,"line_start":52,"line_end":52,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2057}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/combinations.rs","byte_start":145109,"byte_end":145121,"line_start":15,"line_end":15,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2058}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/combinations.rs","byte_start":145251,"byte_end":145263,"line_start":22,"line_end":22,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2059}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/combinations.rs","byte_start":145804,"byte_end":145816,"line_start":48,"line_end":48,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":582},{"krate":0,"index":583}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/combinations_with_replacement.rs","byte_start":147727,"byte_end":147754,"line_start":22,"line_end":22,"column_start":24,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2070}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/combinations_with_replacement.rs","byte_start":147913,"byte_end":147940,"line_start":30,"line_end":30,"column_start":9,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":592}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/combinations_with_replacement.rs","byte_start":148635,"byte_end":148662,"line_start":59,"line_end":59,"column_start":22,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":598},{"krate":0,"index":599}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/exactly_one_err.rs","byte_start":150927,"byte_end":150942,"line_start":22,"line_end":22,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":605}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/exactly_one_err.rs","byte_start":151172,"byte_end":151187,"line_start":32,"line_end":32,"column_start":22,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":612}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/exactly_one_err.rs","byte_start":151809,"byte_end":151824,"line_start":58,"line_end":58,"column_start":31,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/format.rs","byte_start":155958,"byte_end":155968,"line_start":50,"line_end":50,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":653}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/format.rs","byte_start":156719,"byte_end":156725,"line_start":74,"line_end":74,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":659}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":158672,"byte_end":158673,"line_start":10,"line_end":10,"column_start":46,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":684},{"krate":0,"index":685}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":158978,"byte_end":158988,"line_start":29,"line_end":29,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":687}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":159178,"byte_end":159188,"line_start":40,"line_end":40,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":691},{"krate":0,"index":692}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":160230,"byte_end":160240,"line_start":77,"line_end":77,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":712},{"krate":0,"index":713},{"krate":0,"index":717},{"krate":0,"index":718},{"krate":0,"index":719},{"krate":0,"index":720},{"krate":0,"index":721}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":167018,"byte_end":167028,"line_start":263,"line_end":263,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":726}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":168840,"byte_end":168847,"line_start":320,"line_end":320,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":741},{"krate":0,"index":742}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":170054,"byte_end":170060,"line_start":366,"line_end":366,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":762},{"krate":0,"index":763}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":170963,"byte_end":170968,"line_start":402,"line_end":402,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":778}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":171139,"byte_end":171144,"line_start":411,"line_end":411,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":784},{"krate":0,"index":785}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":172976,"byte_end":172986,"line_start":475,"line_end":475,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":794},{"krate":0,"index":795}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":173972,"byte_end":173978,"line_start":517,"line_end":517,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":809},{"krate":0,"index":810}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":174730,"byte_end":174735,"line_start":550,"line_end":550,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":821}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":174894,"byte_end":174899,"line_start":559,"line_end":559,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":825},{"krate":0,"index":826}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/intersperse.rs","byte_start":175991,"byte_end":176002,"line_start":35,"line_end":35,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":834},{"krate":0,"index":835},{"krate":0,"index":836},{"krate":0,"index":837}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs","byte_start":177627,"byte_end":177635,"line_start":22,"line_end":22,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":848},{"krate":0,"index":850},{"krate":0,"index":851}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs","byte_start":178531,"byte_end":178539,"line_start":53,"line_end":53,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2161}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs","byte_start":180257,"byte_end":180267,"line_start":111,"line_end":111,"column_start":44,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":867}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs","byte_start":180402,"byte_end":180403,"line_start":117,"line_end":117,"column_start":56,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":871}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs","byte_start":181503,"byte_end":181511,"line_start":158,"line_end":158,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2166}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs","byte_start":182350,"byte_end":182358,"line_start":182,"line_end":182,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2167}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs","byte_start":182507,"byte_end":182515,"line_start":190,"line_end":190,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":893},{"krate":0,"index":894},{"krate":0,"index":896}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lazy_buffer.rs","byte_start":183396,"byte_end":183406,"line_start":10,"line_end":10,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":902},{"krate":0,"index":903},{"krate":0,"index":904},{"krate":0,"index":905}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lazy_buffer.rs","byte_start":184112,"byte_end":184122,"line_start":48,"line_end":48,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":909},{"krate":0,"index":910}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/merge_join.rs","byte_start":185470,"byte_end":185481,"line_start":34,"line_end":34,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2179}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/merge_join.rs","byte_start":185701,"byte_end":185712,"line_start":44,"line_end":44,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2180}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/merge_join.rs","byte_start":185937,"byte_end":185948,"line_start":53,"line_end":53,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":942},{"krate":0,"index":943},{"krate":0,"index":944},{"krate":0,"index":945},{"krate":0,"index":946},{"krate":0,"index":947}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/minmax.rs","byte_start":190616,"byte_end":190628,"line_start":17,"line_end":17,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":951}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/multipeek_impl.rs","byte_start":194671,"byte_end":194680,"line_start":28,"line_end":28,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":966}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/multipeek_impl.rs","byte_start":194833,"byte_end":194842,"line_start":37,"line_end":37,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":969}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/multipeek_impl.rs","byte_start":195486,"byte_end":195495,"line_start":59,"line_end":59,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":972}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/multipeek_impl.rs","byte_start":195962,"byte_end":195971,"line_start":78,"line_end":78,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":976},{"krate":0,"index":977},{"krate":0,"index":978}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/multipeek_impl.rs","byte_start":196395,"byte_end":196404,"line_start":98,"line_end":98,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/pad_tail.rs","byte_start":197223,"byte_end":197231,"line_start":32,"line_end":32,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":990},{"krate":0,"index":991},{"krate":0,"index":992}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/pad_tail.rs","byte_start":197994,"byte_end":198002,"line_start":63,"line_end":63,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":996}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/pad_tail.rs","byte_start":198459,"byte_end":198467,"line_start":80,"line_end":80,"column_start":34,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/peeking_take_while.rs","byte_start":199376,"byte_end":199384,"line_start":22,"line_end":22,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1009}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/peeking_take_while.rs","byte_start":199704,"byte_end":199711,"line_start":37,"line_end":37,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1013}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/peeking_take_while.rs","byte_start":200128,"byte_end":200136,"line_start":56,"line_end":56,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1017}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/peeking_take_while.rs","byte_start":201082,"byte_end":201098,"line_start":96,"line_end":96,"column_start":29,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1032},{"krate":0,"index":1033},{"krate":0,"index":1034}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/permutations.rs","byte_start":203431,"byte_end":203443,"line_start":17,"line_end":17,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2273}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/permutations.rs","byte_start":204018,"byte_end":204030,"line_start":54,"line_end":54,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2300}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/permutations.rs","byte_start":204896,"byte_end":204908,"line_start":95,"line_end":95,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1058},{"krate":0,"index":1059},{"krate":0,"index":1062},{"krate":0,"index":1064}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/permutations.rs","byte_start":207585,"byte_end":207597,"line_start":169,"line_end":169,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1067}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/permutations.rs","byte_start":208828,"byte_end":208841,"line_start":207,"line_end":207,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1069},{"krate":0,"index":1070}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/process_results_impl.rs","byte_start":211513,"byte_end":211527,"line_start":14,"line_end":14,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1083},{"krate":0,"index":1084},{"krate":0,"index":1085}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/put_back_n_impl.rs","byte_start":214254,"byte_end":214262,"line_start":26,"line_end":26,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1099}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/put_back_n_impl.rs","byte_start":214764,"byte_end":214772,"line_start":47,"line_end":47,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1102},{"krate":0,"index":1103},{"krate":0,"index":1104}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/rciter_impl.rs","byte_start":216788,"byte_end":216794,"line_start":53,"line_end":53,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2328}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/rciter_impl.rs","byte_start":216868,"byte_end":216874,"line_start":58,"line_end":58,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1116},{"krate":0,"index":1117},{"krate":0,"index":1118}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/rciter_impl.rs","byte_start":217433,"byte_end":217439,"line_start":77,"line_end":77,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1121}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/repeatn.rs","byte_start":218415,"byte_end":218422,"line_start":23,"line_end":23,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1133},{"krate":0,"index":1134},{"krate":0,"index":1135}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/repeatn.rs","byte_start":218812,"byte_end":218819,"line_start":43,"line_end":43,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1138}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/repeatn.rs","byte_start":218969,"byte_end":218976,"line_start":52,"line_end":52,"column_start":31,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":221978,"byte_end":221988,"line_start":15,"line_end":15,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2345}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":222827,"byte_end":222837,"line_start":49,"line_end":49,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1166},{"krate":0,"index":1167},{"krate":0,"index":1168}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":224503,"byte_end":224509,"line_start":110,"line_end":110,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2346}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":224896,"byte_end":224902,"line_start":125,"line_end":125,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1180},{"krate":0,"index":1181},{"krate":0,"index":1182}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":225591,"byte_end":225598,"line_start":154,"line_end":154,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2365}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":225701,"byte_end":225708,"line_start":160,"line_end":160,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1189},{"krate":0,"index":1190},{"krate":0,"index":1191}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tee.rs","byte_start":227413,"byte_end":227416,"line_start":37,"line_end":37,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1204},{"krate":0,"index":1205},{"krate":0,"index":1206}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tee.rs","byte_start":228513,"byte_end":228516,"line_start":75,"line_end":75,"column_start":31,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs","byte_start":229055,"byte_end":229056,"line_start":15,"line_end":15,"column_start":44,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Inherent","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs","byte_start":229370,"byte_end":229381,"line_start":29,"line_end":29,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1216}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs","byte_start":229553,"byte_end":229564,"line_start":40,"line_end":40,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1219},{"krate":0,"index":1220},{"krate":0,"index":1221}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs","byte_start":230234,"byte_end":230245,"line_start":68,"line_end":68,"column_start":31,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs","byte_start":230923,"byte_end":230929,"line_start":97,"line_end":97,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1231},{"krate":0,"index":1232}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Inherent","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs","byte_start":231145,"byte_end":231151,"line_start":108,"line_end":108,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1236}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs","byte_start":232765,"byte_end":232777,"line_start":166,"line_end":166,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1244},{"krate":0,"index":1245}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/unique_impl.rs","byte_start":236585,"byte_end":236593,"line_start":19,"line_end":19,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2475}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/unique_impl.rs","byte_start":237382,"byte_end":237390,"line_start":50,"line_end":50,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1278},{"krate":0,"index":1279},{"krate":0,"index":1280},{"krate":0,"index":1281}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/unique_impl.rs","byte_start":238107,"byte_end":238113,"line_start":79,"line_end":79,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1285},{"krate":0,"index":1286},{"krate":0,"index":1287},{"krate":0,"index":1288}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/unique_impl.rs","byte_start":239140,"byte_end":239146,"line_start":116,"line_end":116,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2482}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/with_position.rs","byte_start":239977,"byte_end":239989,"line_start":16,"line_end":16,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2483}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Inherent","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/with_position.rs","byte_start":240812,"byte_end":240820,"line_start":49,"line_end":49,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1307}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/with_position.rs","byte_start":241099,"byte_end":241111,"line_start":61,"line_end":61,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1310},{"krate":0,"index":1311},{"krate":0,"index":1312}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/with_position.rs","byte_start":242347,"byte_end":242359,"line_start":95,"line_end":95,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/zip_eq_impl.rs","byte_start":243277,"byte_end":243282,"line_start":37,"line_end":37,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1323},{"krate":0,"index":1324},{"krate":0,"index":1325}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/zip_eq_impl.rs","byte_start":243860,"byte_end":243865,"line_start":57,"line_end":57,"column_start":34,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/zip_longest.rs","byte_start":244794,"byte_end":244804,"line_start":33,"line_end":33,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1343},{"krate":0,"index":1344},{"krate":0,"index":1345}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/zip_longest.rs","byte_start":245426,"byte_end":245436,"line_start":55,"line_end":55,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1349}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/zip_longest.rs","byte_start":246257,"byte_end":246267,"line_start":75,"line_end":75,"column_start":34,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":87142,"byte_end":87143,"line_start":2588,"line_end":2588,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Inherent","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":90662,"byte_end":90671,"line_start":2706,"line_end":2706,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1580},{"krate":0,"index":1581}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":4893,"byte_end":4897,"line_start":164,"line_end":164,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":501}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/multi_product.rs","byte_start":126141,"byte_end":126153,"line_start":50,"line_end":50,"column_start":9,"column_end":21},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1582},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/multi_product.rs","byte_start":128244,"byte_end":128260,"line_start":117,"line_end":117,"column_start":9,"column_end":25},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1589},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/multi_product.rs","byte_start":128908,"byte_end":128920,"line_start":146,"line_end":146,"column_start":22,"column_end":34},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1582},"to":{"krate":2,"index":3599}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":93146,"byte_end":93156,"line_start":53,"line_end":53,"column_start":25,"column_end":35},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1607},"to":{"krate":2,"index":3599}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":94567,"byte_end":94585,"line_start":109,"line_end":109,"column_start":25,"column_end":43},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1621},"to":{"krate":2,"index":3599}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":96835,"byte_end":96842,"line_start":194,"line_end":194,"column_start":9,"column_end":16},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1635},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":97461,"byte_end":97468,"line_start":219,"line_end":219,"column_start":22,"column_end":29},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1635},"to":{"krate":2,"index":3599}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":99855,"byte_end":99862,"line_start":314,"line_end":314,"column_start":25,"column_end":32},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1645},"to":{"krate":2,"index":3599}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":102295,"byte_end":102303,"line_start":389,"line_end":389,"column_start":27,"column_end":35},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1660},"to":{"krate":2,"index":7570}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":102522,"byte_end":102530,"line_start":398,"line_end":398,"column_start":28,"column_end":36},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1660},"to":{"krate":2,"index":3599}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":103695,"byte_end":103699,"line_start":446,"line_end":446,"column_start":22,"column_end":26},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1670},"to":{"krate":2,"index":3599}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":104318,"byte_end":104322,"line_start":474,"line_end":474,"column_start":31,"column_end":35},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1670},"to":{"krate":2,"index":3885}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":104527,"byte_end":104535,"line_start":485,"line_end":485,"column_start":43,"column_end":51},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1680},"to":{"krate":0,"index":219}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":106066,"byte_end":106073,"line_start":536,"line_end":536,"column_start":30,"column_end":37},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":231},"to":{"krate":2,"index":7570}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":106289,"byte_end":106290,"line_start":543,"line_end":543,"column_start":55,"column_end":56},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":245},"to":{"krate":0,"index":219}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":106761,"byte_end":106768,"line_start":563,"line_end":563,"column_start":25,"column_end":32},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":231},"to":{"krate":2,"index":2182}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":106988,"byte_end":106995,"line_start":573,"line_end":573,"column_start":28,"column_end":35},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":231},"to":{"krate":2,"index":3599}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":108123,"byte_end":108135,"line_start":617,"line_end":617,"column_start":9,"column_end":21},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1686},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":109369,"byte_end":109377,"line_start":659,"line_end":659,"column_start":36,"column_end":44},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":267},"to":{"krate":2,"index":2182}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":109491,"byte_end":109499,"line_start":666,"line_end":666,"column_start":27,"column_end":35},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":267},"to":{"krate":2,"index":7570}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":109877,"byte_end":109885,"line_start":686,"line_end":686,"column_start":25,"column_end":33},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":267},"to":{"krate":2,"index":3599}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":110855,"byte_end":110862,"line_start":719,"line_end":719,"column_start":42,"column_end":49},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1698},"to":{"krate":0,"index":292}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":110994,"byte_end":110995,"line_start":725,"line_end":725,"column_start":55,"column_end":56},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":300},"to":{"krate":0,"index":292}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":111300,"byte_end":111307,"line_start":736,"line_end":736,"column_start":39,"column_end":46},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":287},"to":{"krate":2,"index":2182}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":111816,"byte_end":111823,"line_start":763,"line_end":763,"column_start":30,"column_end":37},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":287},"to":{"krate":2,"index":7570}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":111968,"byte_end":111975,"line_start":770,"line_end":770,"column_start":28,"column_end":35},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":287},"to":{"krate":2,"index":3599}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":113348,"byte_end":113360,"line_start":816,"line_end":816,"column_start":31,"column_end":43},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":326},"to":{"krate":2,"index":7570}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":113688,"byte_end":113700,"line_start":829,"line_end":829,"column_start":29,"column_end":41},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":326},"to":{"krate":2,"index":3599}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":114793,"byte_end":114802,"line_start":871,"line_end":871,"column_start":25,"column_end":34},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1705},"to":{"krate":2,"index":3599}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":115679,"byte_end":115684,"line_start":905,"line_end":905,"column_start":30,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":1540},"to":{"krate":0,"index":354}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":116118,"byte_end":116135,"line_start":922,"line_end":922,"column_start":25,"column_end":42},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1714},"to":{"krate":2,"index":3599}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":116394,"byte_end":116411,"line_start":938,"line_end":938,"column_start":21,"column_end":38},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1728},"to":{"krate":2,"index":2224}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":116523,"byte_end":116540,"line_start":944,"line_end":944,"column_start":32,"column_end":49},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1728},"to":{"krate":2,"index":3599}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":119318,"byte_end":119325,"line_start":1037,"line_end":1037,"column_start":25,"column_end":32},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1821},"to":{"krate":2,"index":3599}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":119840,"byte_end":119847,"line_start":1060,"line_end":1060,"column_start":36,"column_end":43},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1821},"to":{"krate":2,"index":3856}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":120086,"byte_end":120093,"line_start":1071,"line_end":1071,"column_start":34,"column_end":41},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1821},"to":{"krate":2,"index":3885}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":120744,"byte_end":120754,"line_start":1098,"line_end":1098,"column_start":34,"column_end":44},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1830},"to":{"krate":2,"index":3599}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":122053,"byte_end":122062,"line_start":1150,"line_end":1150,"column_start":25,"column_end":34},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1839},"to":{"krate":2,"index":3599}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":122551,"byte_end":122560,"line_start":1172,"line_end":1172,"column_start":36,"column_end":45},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1839},"to":{"krate":2,"index":3856}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":123406,"byte_end":123412,"line_start":1205,"line_end":1205,"column_start":25,"column_end":31},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1849},"to":{"krate":2,"index":3599}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":124278,"byte_end":124284,"line_start":1241,"line_end":1241,"column_start":34,"column_end":40},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1849},"to":{"krate":2,"index":3885}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/adaptors/mod.rs","byte_start":124390,"byte_end":124396,"line_start":1247,"line_end":1247,"column_start":36,"column_end":42},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1849},"to":{"krate":2,"index":3856}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs","byte_start":131291,"byte_end":131303,"line_start":16,"line_end":16,"column_start":12,"column_end":24},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1858},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs","byte_start":135916,"byte_end":135928,"line_start":168,"line_end":168,"column_start":9,"column_end":21},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1858},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/either_or_both.rs","byte_start":136291,"byte_end":136303,"line_start":182,"line_end":182,"column_start":43,"column_end":55},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1858},"to":{"krate":2,"index":2221}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/cons_tuples_impl.rs","byte_start":144357,"byte_end":144367,"line_start":52,"line_end":52,"column_start":22,"column_end":32},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":2049},"to":{"krate":2,"index":2182}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/combinations.rs","byte_start":145109,"byte_end":145121,"line_start":15,"line_end":15,"column_start":19,"column_end":31},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":569},"to":{"krate":2,"index":2182}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/combinations.rs","byte_start":145251,"byte_end":145263,"line_start":22,"line_end":22,"column_start":24,"column_end":36},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":569},"to":{"krate":2,"index":7570}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/combinations.rs","byte_start":145804,"byte_end":145816,"line_start":48,"line_end":48,"column_start":22,"column_end":34},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":569},"to":{"krate":2,"index":3599}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/combinations_with_replacement.rs","byte_start":147727,"byte_end":147754,"line_start":22,"line_end":22,"column_start":24,"column_end":51},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":2060},"to":{"krate":2,"index":7570}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/combinations_with_replacement.rs","byte_start":147913,"byte_end":147940,"line_start":30,"line_end":30,"column_start":9,"column_end":36},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":2060},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/combinations_with_replacement.rs","byte_start":148635,"byte_end":148662,"line_start":59,"line_end":59,"column_start":22,"column_end":49},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":2060},"to":{"krate":2,"index":3599}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/exactly_one_err.rs","byte_start":150927,"byte_end":150942,"line_start":22,"line_end":22,"column_start":9,"column_end":24},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":2071},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/exactly_one_err.rs","byte_start":151172,"byte_end":151187,"line_start":32,"line_end":32,"column_start":22,"column_end":37},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":2071},"to":{"krate":2,"index":3599}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/exactly_one_err.rs","byte_start":151809,"byte_end":151824,"line_start":58,"line_end":58,"column_start":31,"column_end":46},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":2071},"to":{"krate":2,"index":3885}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/format.rs","byte_start":155958,"byte_end":155968,"line_start":50,"line_end":50,"column_start":33,"column_end":43},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":2081},"to":{"krate":2,"index":7575}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/format.rs","byte_start":156719,"byte_end":156725,"line_start":74,"line_end":74,"column_start":13,"column_end":19},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":2092},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":158672,"byte_end":158673,"line_start":10,"line_end":10,"column_start":46,"column_end":47},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":683},"to":{"krate":0,"index":675}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":158978,"byte_end":158988,"line_start":29,"line_end":29,"column_start":6,"column_end":16},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":2137},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":159178,"byte_end":159188,"line_start":40,"line_end":40,"column_start":32,"column_end":42},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":2137},"to":{"krate":0,"index":675}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":160230,"byte_end":160240,"line_start":77,"line_end":77,"column_start":15,"column_end":25},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":693},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":167018,"byte_end":167028,"line_start":263,"line_end":263,"column_start":15,"column_end":25},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":693},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":168840,"byte_end":168847,"line_start":320,"line_end":320,"column_start":15,"column_end":22},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":727},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":170054,"byte_end":170060,"line_start":366,"line_end":366,"column_start":32,"column_end":38},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":751},"to":{"krate":2,"index":3599}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":170963,"byte_end":170968,"line_start":402,"line_end":402,"column_start":28,"column_end":33},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":765},"to":{"krate":2,"index":1728}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":171139,"byte_end":171144,"line_start":411,"line_end":411,"column_start":32,"column_end":37},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":765},"to":{"krate":2,"index":3599}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":172976,"byte_end":172986,"line_start":475,"line_end":475,"column_start":9,"column_end":19},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":788},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":173972,"byte_end":173978,"line_start":517,"line_end":517,"column_start":26,"column_end":32},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":802},"to":{"krate":2,"index":3599}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":174730,"byte_end":174735,"line_start":550,"line_end":550,"column_start":22,"column_end":27},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":812},"to":{"krate":2,"index":1728}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/groupbylazy.rs","byte_start":174894,"byte_end":174899,"line_start":559,"line_end":559,"column_start":26,"column_end":31},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":812},"to":{"krate":2,"index":3599}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/intersperse.rs","byte_start":175991,"byte_end":176002,"line_start":35,"line_end":35,"column_start":22,"column_end":33},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":2143},"to":{"krate":2,"index":3599}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs","byte_start":177627,"byte_end":177635,"line_start":22,"line_end":22,"column_start":9,"column_end":17},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":2154},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs","byte_start":178531,"byte_end":178539,"line_start":53,"line_end":53,"column_start":19,"column_end":27},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":2154},"to":{"krate":2,"index":2182}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs","byte_start":180257,"byte_end":180267,"line_start":111,"line_end":111,"column_start":44,"column_end":54},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":2162},"to":{"krate":0,"index":862}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs","byte_start":180402,"byte_end":180403,"line_start":117,"line_end":117,"column_start":56,"column_end":57},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":870},"to":{"krate":0,"index":862}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs","byte_start":181503,"byte_end":181511,"line_start":158,"line_end":158,"column_start":27,"column_end":35},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":874},"to":{"krate":2,"index":7570}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs","byte_start":182350,"byte_end":182358,"line_start":182,"line_end":182,"column_start":22,"column_end":30},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":874},"to":{"krate":2,"index":2182}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/kmerge_impl.rs","byte_start":182507,"byte_end":182515,"line_start":190,"line_end":190,"column_start":25,"column_end":33},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":874},"to":{"krate":2,"index":3599}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lazy_buffer.rs","byte_start":183396,"byte_end":183406,"line_start":10,"line_end":10,"column_start":9,"column_end":19},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":2168},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lazy_buffer.rs","byte_start":184112,"byte_end":184122,"line_start":48,"line_end":48,"column_start":25,"column_end":35},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":2168},"to":{"krate":2,"index":1782}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/merge_join.rs","byte_start":185470,"byte_end":185481,"line_start":34,"line_end":34,"column_start":25,"column_end":36},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":923},"to":{"krate":2,"index":2182}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/merge_join.rs","byte_start":185701,"byte_end":185712,"line_start":44,"line_end":44,"column_start":30,"column_end":41},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":923},"to":{"krate":2,"index":7570}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/merge_join.rs","byte_start":185937,"byte_end":185948,"line_start":53,"line_end":53,"column_start":28,"column_end":39},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":923},"to":{"krate":2,"index":3599}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/minmax.rs","byte_start":190616,"byte_end":190628,"line_start":17,"line_end":17,"column_start":16,"column_end":28},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":2181},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/multipeek_impl.rs","byte_start":194671,"byte_end":194680,"line_start":28,"line_end":28,"column_start":9,"column_end":18},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":2206},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/multipeek_impl.rs","byte_start":194833,"byte_end":194842,"line_start":37,"line_end":37,"column_start":19,"column_end":28},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":2206},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/multipeek_impl.rs","byte_start":195486,"byte_end":195495,"line_start":59,"line_end":59,"column_start":25,"column_end":34},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":2206},"to":{"krate":0,"index":1004}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/multipeek_impl.rs","byte_start":195962,"byte_end":195971,"line_start":78,"line_end":78,"column_start":22,"column_end":31},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":2206},"to":{"krate":2,"index":3599}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/multipeek_impl.rs","byte_start":196395,"byte_end":196404,"line_start":98,"line_end":98,"column_start":31,"column_end":40},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":2206},"to":{"krate":2,"index":3885}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/pad_tail.rs","byte_start":197223,"byte_end":197231,"line_start":32,"line_end":32,"column_start":25,"column_end":33},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":2217},"to":{"krate":2,"index":3599}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/pad_tail.rs","byte_start":197994,"byte_end":198002,"line_start":63,"line_end":63,"column_start":36,"column_end":44},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":2217},"to":{"krate":2,"index":3856}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/pad_tail.rs","byte_start":198459,"byte_end":198467,"line_start":80,"line_end":80,"column_start":34,"column_end":42},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":2217},"to":{"krate":2,"index":3885}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/peeking_take_while.rs","byte_start":199062,"byte_end":199070,"line_start":14,"line_end":14,"column_start":25,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":3599},"to":{"krate":0,"index":1004}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/peeking_take_while.rs","byte_start":199376,"byte_end":199384,"line_start":22,"line_end":22,"column_start":25,"column_end":33},"kind":{"Impl":{"id":91}},"from":{"krate":2,"index":29209},"to":{"krate":0,"index":1004}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/peeking_take_while.rs","byte_start":199704,"byte_end":199711,"line_start":37,"line_end":37,"column_start":25,"column_end":32},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1635},"to":{"krate":0,"index":1004}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/peeking_take_while.rs","byte_start":200128,"byte_end":200136,"line_start":56,"line_end":56,"column_start":25,"column_end":33},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":2312},"to":{"krate":0,"index":1004}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/peeking_take_while.rs","byte_start":201082,"byte_end":201098,"line_start":96,"line_end":96,"column_start":29,"column_end":45},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1019},"to":{"krate":2,"index":3599}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/permutations.rs","byte_start":203431,"byte_end":203443,"line_start":17,"line_end":17,"column_start":19,"column_end":31},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1040},"to":{"krate":2,"index":2182}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/permutations.rs","byte_start":204018,"byte_end":204030,"line_start":54,"line_end":54,"column_start":24,"column_end":36},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1040},"to":{"krate":2,"index":7570}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/permutations.rs","byte_start":204896,"byte_end":204908,"line_start":95,"line_end":95,"column_start":22,"column_end":34},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1040},"to":{"krate":2,"index":3599}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/permutations.rs","byte_start":207585,"byte_end":207597,"line_start":169,"line_end":169,"column_start":9,"column_end":21},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1040},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/permutations.rs","byte_start":208828,"byte_end":208841,"line_start":207,"line_end":207,"column_start":6,"column_end":19},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":2289},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/process_results_impl.rs","byte_start":211513,"byte_end":211527,"line_start":14,"line_end":14,"column_start":32,"column_end":46},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":2301},"to":{"krate":2,"index":3599}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/put_back_n_impl.rs","byte_start":214254,"byte_end":214262,"line_start":26,"line_end":26,"column_start":19,"column_end":27},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":2312},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/put_back_n_impl.rs","byte_start":214764,"byte_end":214772,"line_start":47,"line_end":47,"column_start":32,"column_end":40},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":2312},"to":{"krate":2,"index":3599}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/rciter_impl.rs","byte_start":216788,"byte_end":216794,"line_start":53,"line_end":53,"column_start":19,"column_end":25},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":2322},"to":{"krate":2,"index":2182}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/rciter_impl.rs","byte_start":216868,"byte_end":216874,"line_start":58,"line_end":58,"column_start":25,"column_end":31},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":2322},"to":{"krate":2,"index":3599}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/rciter_impl.rs","byte_start":217433,"byte_end":217439,"line_start":77,"line_end":77,"column_start":33,"column_end":39},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":2322},"to":{"krate":2,"index":3856}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/repeatn.rs","byte_start":218415,"byte_end":218422,"line_start":23,"line_end":23,"column_start":22,"column_end":29},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":2329},"to":{"krate":2,"index":3599}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/repeatn.rs","byte_start":218812,"byte_end":218819,"line_start":43,"line_end":43,"column_start":33,"column_end":40},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":2329},"to":{"krate":2,"index":3856}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/repeatn.rs","byte_start":218969,"byte_end":218976,"line_start":52,"line_end":52,"column_start":31,"column_end":38},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":2329},"to":{"krate":2,"index":3885}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":221978,"byte_end":221988,"line_start":15,"line_end":15,"column_start":24,"column_end":34},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":2339},"to":{"krate":2,"index":7570}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":222827,"byte_end":222837,"line_start":49,"line_end":49,"column_start":25,"column_end":35},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":2339},"to":{"krate":2,"index":3599}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":224503,"byte_end":224509,"line_start":110,"line_end":110,"column_start":28,"column_end":34},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":2347},"to":{"krate":2,"index":7570}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":224896,"byte_end":224902,"line_start":125,"line_end":125,"column_start":29,"column_end":35},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":2347},"to":{"krate":2,"index":3599}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":225591,"byte_end":225598,"line_start":154,"line_end":154,"column_start":28,"column_end":35},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":2356},"to":{"krate":2,"index":7570}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/sources.rs","byte_start":225701,"byte_end":225708,"line_start":160,"line_end":160,"column_start":26,"column_end":33},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":2356},"to":{"krate":2,"index":3599}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tee.rs","byte_start":227413,"byte_end":227416,"line_start":37,"line_end":37,"column_start":22,"column_end":25},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":2376},"to":{"krate":2,"index":3599}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tee.rs","byte_start":228513,"byte_end":228516,"line_start":75,"line_end":75,"column_start":31,"column_end":34},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":2376},"to":{"krate":2,"index":3885}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs","byte_start":228995,"byte_end":229007,"line_start":12,"line_end":12,"column_start":7,"column_end":19},"kind":"SuperTrait","from":{"krate":0,"index":1246},"to":{"krate":0,"index":1211}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs","byte_start":229055,"byte_end":229056,"line_start":15,"line_end":15,"column_start":44,"column_end":45},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":1213},"to":{"krate":0,"index":1211}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs","byte_start":229370,"byte_end":229381,"line_start":29,"line_end":29,"column_start":9,"column_end":20},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":2383},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs","byte_start":229553,"byte_end":229564,"line_start":40,"line_end":40,"column_start":22,"column_end":33},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":2383},"to":{"krate":2,"index":3599}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs","byte_start":230234,"byte_end":230245,"line_start":68,"line_end":68,"column_start":31,"column_end":42},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":2383},"to":{"krate":2,"index":3885}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs","byte_start":230923,"byte_end":230929,"line_start":97,"line_end":97,"column_start":25,"column_end":31},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":2393},"to":{"krate":2,"index":3599}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs","byte_start":231145,"byte_end":231151,"line_start":108,"line_end":108,"column_start":12,"column_end":18},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":2393},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs","byte_start":232765,"byte_end":232777,"line_start":166,"line_end":166,"column_start":25,"column_end":37},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":2402},"to":{"krate":2,"index":3599}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/tuple_impl.rs","byte_start":233307,"byte_end":233312,"line_start":187,"line_end":187,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":1540},"to":{"krate":0,"index":1246}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/unique_impl.rs","byte_start":236585,"byte_end":236593,"line_start":19,"line_end":19,"column_start":30,"column_end":38},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":2463},"to":{"krate":2,"index":7570}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/unique_impl.rs","byte_start":237382,"byte_end":237390,"line_start":50,"line_end":50,"column_start":28,"column_end":36},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":2463},"to":{"krate":2,"index":3599}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/unique_impl.rs","byte_start":238107,"byte_end":238113,"line_start":79,"line_end":79,"column_start":22,"column_end":28},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":2476},"to":{"krate":2,"index":3599}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/unique_impl.rs","byte_start":239140,"byte_end":239146,"line_start":116,"line_end":116,"column_start":24,"column_end":30},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":2476},"to":{"krate":2,"index":7570}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/with_position.rs","byte_start":239977,"byte_end":239989,"line_start":16,"line_end":16,"column_start":19,"column_end":31},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":1297},"to":{"krate":2,"index":2182}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/with_position.rs","byte_start":240812,"byte_end":240820,"line_start":49,"line_end":49,"column_start":9,"column_end":17},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":2484},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/with_position.rs","byte_start":241099,"byte_end":241111,"line_start":61,"line_end":61,"column_start":32,"column_end":44},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":1297},"to":{"krate":2,"index":3599}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/with_position.rs","byte_start":242347,"byte_end":242359,"line_start":95,"line_end":95,"column_start":31,"column_end":43},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":1297},"to":{"krate":2,"index":3885}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/zip_eq_impl.rs","byte_start":243277,"byte_end":243282,"line_start":37,"line_end":37,"column_start":25,"column_end":30},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":2512},"to":{"krate":2,"index":3599}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/zip_eq_impl.rs","byte_start":243860,"byte_end":243865,"line_start":57,"line_end":57,"column_start":34,"column_end":39},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":2512},"to":{"krate":2,"index":3885}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/zip_longest.rs","byte_start":244794,"byte_end":244804,"line_start":33,"line_end":33,"column_start":25,"column_end":35},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":2525},"to":{"krate":2,"index":3599}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/zip_longest.rs","byte_start":245426,"byte_end":245436,"line_start":55,"line_end":55,"column_start":36,"column_end":46},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":2525},"to":{"krate":2,"index":3856}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/zip_longest.rs","byte_start":246257,"byte_end":246267,"line_start":75,"line_end":75,"column_start":34,"column_end":44},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":2525},"to":{"krate":2,"index":3885}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":9848,"byte_end":9856,"line_start":334,"line_end":334,"column_start":23,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":3599},"to":{"krate":0,"index":1361}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":87142,"byte_end":87143,"line_start":2588,"line_end":2588,"column_start":31,"column_end":32},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":1566},"to":{"krate":0,"index":1361}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.9.0/src/lib.rs","byte_start":90662,"byte_end":90671,"line_start":2706,"line_end":2706,"column_start":9,"column_end":18},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":2711},"to":{"krate":4294967295,"index":4294967295}}]}