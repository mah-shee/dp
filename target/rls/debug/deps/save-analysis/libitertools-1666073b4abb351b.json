{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2","program":"/Users/masatoshi/.rustup/toolchains/nightly-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","itertools","/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=1666073b4abb351b","-C","extra-filename=-1666073b4abb351b","--out-dir","/Users/masatoshi/Documents/atcoder/dp/target/rls/debug/deps","-L","dependency=/Users/masatoshi/Documents/atcoder/dp/target/rls/debug/deps","--extern","either=/Users/masatoshi/Documents/atcoder/dp/target/rls/debug/deps/libeither-ebc0d18a27fe2423.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/masatoshi/.rustup/toolchains/nightly-x86_64-apple-darwin"],"output":"/Users/masatoshi/Documents/atcoder/dp/target/rls/debug/deps/libitertools-1666073b4abb351b.rmeta"},"prelude":{"crate_id":{"name":"itertools","disambiguator":[6217605416116781821,13700939525977599453]},"crate_root":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src","external_crates":[{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[391827052702496084,5129134181362070381]}},{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[4281604570573728273,9331809846264551407]}},{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[16197749903097291620,17943825029647261869]}},{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","num":4,"id":{"name":"either","disambiguator":[9710870749486380430,5109345448129762727]}},{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","num":5,"id":{"name":"std","disambiguator":[10613055454315904869,2811732849881954636]}},{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","num":6,"id":{"name":"alloc","disambiguator":[10845582213263607778,379097389567409069]}},{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","num":7,"id":{"name":"libc","disambiguator":[844407882680543608,18229321760257986125]}},{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","num":8,"id":{"name":"unwind","disambiguator":[3570085749873741306,6541745440181859048]}},{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","num":9,"id":{"name":"cfg_if","disambiguator":[2578273522758280898,17913597462815022013]}},{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","num":10,"id":{"name":"backtrace","disambiguator":[735647405049555546,6998326938186734761]}},{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[10449409484459928313,13344031615333270257]}},{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","num":12,"id":{"name":"backtrace_sys","disambiguator":[886225832632004317,14255593997978316403]}},{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","num":13,"id":{"name":"hashbrown","disambiguator":[2255118238040761479,18238811431415079153]}},{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","num":14,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[16030725988839514509,13221492198480567872]}},{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[4378005683902666456,14285554179360740773]}}],"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":0,"byte_end":79440,"line_start":1,"line_end":2391,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":4,"index":186},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":1446,"byte_end":1452,"line_start":55,"line_end":55,"column_start":17,"column_end":23},"alias_span":null,"name":"Either","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":3288},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":1923,"byte_end":1927,"line_start":76,"line_end":76,"column_start":14,"column_end":18},"alias_span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":1931,"byte_end":1941,"line_start":76,"line_end":76,"column_start":22,"column_end":32},"name":"__std_iter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":241},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":2027,"byte_end":2032,"line_start":81,"line_end":81,"column_start":9,"column_end":14},"alias_span":null,"name":"Dedup","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":226},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":2042,"byte_end":2049,"line_start":82,"line_end":82,"column_start":9,"column_end":16},"alias_span":null,"name":"DedupBy","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":1030},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":2059,"byte_end":2069,"line_start":83,"line_end":83,"column_start":9,"column_end":19},"alias_span":null,"name":"Interleave","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":1044},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":2079,"byte_end":2097,"line_start":84,"line_end":84,"column_start":9,"column_end":27},"alias_span":null,"name":"InterleaveShortest","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":1068},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":2107,"byte_end":2114,"line_start":85,"line_end":85,"column_start":9,"column_end":16},"alias_span":null,"name":"Product","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":1058},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":2124,"byte_end":2131,"line_start":86,"line_end":86,"column_start":9,"column_end":16},"alias_span":null,"name":"PutBack","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":1083},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":2141,"byte_end":2149,"line_start":87,"line_end":87,"column_start":9,"column_end":17},"alias_span":null,"name":"Batching","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":317},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":2159,"byte_end":2166,"line_start":88,"line_end":88,"column_start":9,"column_end":16},"alias_span":null,"name":"MapInto","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":344},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":2176,"byte_end":2186,"line_start":89,"line_end":89,"column_start":9,"column_end":19},"alias_span":null,"name":"MapResults","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":162},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":2196,"byte_end":2201,"line_start":90,"line_end":90,"column_start":9,"column_end":14},"alias_span":null,"name":"Merge","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":168},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":2211,"byte_end":2218,"line_start":91,"line_end":91,"column_start":9,"column_end":16},"alias_span":null,"name":"MergeBy","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":266},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":2228,"byte_end":2240,"line_start":92,"line_end":92,"column_start":9,"column_end":21},"alias_span":null,"name":"TakeWhileRef","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":1125},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":2250,"byte_end":2259,"line_start":93,"line_end":93,"column_start":9,"column_end":18},"alias_span":null,"name":"WhileSome","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":205},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":2269,"byte_end":2277,"line_start":94,"line_end":94,"column_start":9,"column_end":17},"alias_span":null,"name":"Coalesce","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":1134},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":2287,"byte_end":2304,"line_start":95,"line_end":95,"column_start":9,"column_end":26},"alias_span":null,"name":"TupleCombinations","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":372},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":2314,"byte_end":2323,"line_start":96,"line_end":96,"column_start":9,"column_end":18},"alias_span":null,"name":"Positions","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":391},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":2333,"byte_end":2339,"line_start":97,"line_end":97,"column_start":9,"column_end":15},"alias_span":null,"name":"Update","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":1093},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":2395,"byte_end":2399,"line_start":100,"line_end":100,"column_start":23,"column_end":27},"alias_span":null,"name":"Step","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":1411},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":2675,"byte_end":2685,"line_start":107,"line_end":107,"column_start":31,"column_end":41},"alias_span":null,"name":"ConsTuples","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":1419},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":2716,"byte_end":2731,"line_start":108,"line_end":108,"column_start":30,"column_end":45},"alias_span":null,"name":"ExactlyOneError","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":1429},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":2754,"byte_end":2760,"line_start":109,"line_end":109,"column_start":22,"column_end":28},"alias_span":null,"name":"Format","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":558},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":2762,"byte_end":2772,"line_start":109,"line_end":109,"column_start":30,"column_end":40},"alias_span":null,"name":"FormatWith","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":1476},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":2910,"byte_end":2921,"line_start":112,"line_end":112,"column_start":26,"column_end":37},"alias_span":null,"name":"Intersperse","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":608},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":3024,"byte_end":3035,"line_start":115,"line_end":115,"column_start":25,"column_end":36},"alias_span":null,"name":"MergeJoinBy","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":1513},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":3130,"byte_end":3138,"line_start":118,"line_end":118,"column_start":23,"column_end":31},"alias_span":null,"name":"PadUsing","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":668},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":3172,"byte_end":3188,"line_start":119,"line_end":119,"column_start":33,"column_end":49},"alias_span":null,"name":"PeekingTakeWhile","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":1559},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":3296,"byte_end":3310,"line_start":122,"line_end":122,"column_start":35,"column_end":49},"alias_span":null,"name":"ProcessResults","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":1570},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":3469,"byte_end":3476,"line_start":127,"line_end":127,"column_start":22,"column_end":29},"alias_span":null,"name":"RepeatN","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":731},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":3525,"byte_end":3535,"line_start":129,"line_end":129,"column_start":23,"column_end":33},"alias_span":null,"name":"RepeatCall","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":1579},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":3537,"byte_end":3543,"line_start":129,"line_end":129,"column_start":35,"column_end":41},"alias_span":null,"name":"Unfold","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":1588},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":3545,"byte_end":3552,"line_start":129,"line_end":129,"column_start":43,"column_end":50},"alias_span":null,"name":"Iterate","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":1598},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":3634,"byte_end":3645,"line_start":132,"line_end":132,"column_start":26,"column_end":37},"alias_span":null,"name":"TupleBuffer","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":1605},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":3647,"byte_end":3659,"line_start":132,"line_end":132,"column_start":39,"column_end":51},"alias_span":null,"name":"TupleWindows","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":784},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":3661,"byte_end":3667,"line_start":132,"line_end":132,"column_start":53,"column_end":59},"alias_span":null,"name":"Tuples","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":824},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":3774,"byte_end":3786,"line_start":135,"line_end":135,"column_start":28,"column_end":40},"alias_span":null,"name":"WithPosition","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":1690},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":3813,"byte_end":3818,"line_start":136,"line_end":136,"column_start":26,"column_end":31},"alias_span":null,"name":"ZipEq","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":1703},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":3845,"byte_end":3855,"line_start":137,"line_end":137,"column_start":26,"column_end":36},"alias_span":null,"name":"ZipLongest","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":1716},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":3879,"byte_end":3882,"line_start":138,"line_end":138,"column_start":23,"column_end":26},"alias_span":null,"name":"Zip","value":"","parent":{"krate":0,"index":15}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":3924,"byte_end":3925,"line_start":141,"line_end":141,"column_start":18,"column_end":19},"alias_span":null,"name":"*","value":"PadUsing, Intersperse, FormatWith, ExactlyOneError, Step, ZipLongest, TakeWhileRef, MapResults, PutBack, Interleave, Tuples, TupleCombinations, Positions, ZipEq, Merge, Batching, InterleaveShortest, Dedup, WhileSome, PeekingTakeWhile, MergeJoinBy, Format, Update, Coalesce, MergeBy, MapInto, TupleWindows, Product, DedupBy, WithPosition","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":503},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":3948,"byte_end":3954,"line_start":142,"line_end":142,"column_start":22,"column_end":28},"alias_span":null,"name":"concat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":513},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":3982,"byte_end":3993,"line_start":143,"line_end":143,"column_start":27,"column_end":38},"alias_span":null,"name":"cons_tuples","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":550},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":4009,"byte_end":4018,"line_start":144,"line_end":144,"column_start":15,"column_end":24},"alias_span":null,"name":"diff_with","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":534},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":4034,"byte_end":4038,"line_start":145,"line_end":145,"column_start":15,"column_end":19},"alias_span":null,"name":"Diff","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1488},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":4118,"byte_end":4130,"line_start":148,"line_end":148,"column_start":17,"column_end":29},"alias_span":null,"name":"MinMaxResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":657},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":4160,"byte_end":4171,"line_start":149,"line_end":149,"column_start":29,"column_end":40},"alias_span":null,"name":"PeekingNext","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":694},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":4203,"byte_end":4218,"line_start":150,"line_end":150,"column_start":31,"column_end":46},"alias_span":null,"name":"process_results","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":702},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":4237,"byte_end":4245,"line_start":151,"line_end":151,"column_start":18,"column_end":26},"alias_span":null,"name":"repeat_n","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":736},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":4286,"byte_end":4297,"line_start":153,"line_end":153,"column_start":19,"column_end":30},"alias_span":null,"name":"repeat_call","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":745},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":4299,"byte_end":4305,"line_start":153,"line_end":153,"column_start":32,"column_end":38},"alias_span":null,"name":"unfold","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":768},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":4307,"byte_end":4314,"line_start":153,"line_end":153,"column_start":40,"column_end":47},"alias_span":null,"name":"iterate","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1662},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":4340,"byte_end":4348,"line_start":154,"line_end":154,"column_start":24,"column_end":32},"alias_span":null,"name":"Position","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":880},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":4368,"byte_end":4376,"line_start":155,"line_end":155,"column_start":19,"column_end":27},"alias_span":null,"name":"multizip","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1225},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":4436,"byte_end":4448,"line_start":158,"line_end":158,"column_start":25,"column_end":37},"alias_span":null,"name":"EitherOrBoth","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":83},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/free.rs","byte_start":124963,"byte_end":124973,"line_start":16,"line_end":16,"column_start":5,"column_end":15},"alias_span":null,"name":"interleave","value":"","parent":{"krate":0,"index":462}},{"kind":"Use","ref_id":{"krate":0,"index":165},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/free.rs","byte_start":124979,"byte_end":124984,"line_start":17,"line_end":17,"column_start":5,"column_end":10},"alias_span":null,"name":"merge","value":"","parent":{"krate":0,"index":462}},{"kind":"Use","ref_id":{"krate":0,"index":102},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/free.rs","byte_start":124990,"byte_end":124998,"line_start":18,"line_end":18,"column_start":5,"column_end":13},"alias_span":null,"name":"put_back","value":"","parent":{"krate":0,"index":462}},{"kind":"Use","ref_id":{"krate":0,"index":842},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/free.rs","byte_start":125209,"byte_end":125215,"line_start":26,"line_end":26,"column_start":22,"column_end":28},"alias_span":null,"name":"zip_eq","value":"","parent":{"krate":0,"index":462}},{"kind":"Use","ref_id":{"krate":0,"index":604},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/free.rs","byte_start":125237,"byte_end":125250,"line_start":27,"line_end":27,"column_start":21,"column_end":34},"alias_span":null,"name":"merge_join_by","value":"","parent":{"krate":0,"index":462}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":3924,"byte_end":3925,"line_start":141,"line_end":141,"column_start":18,"column_end":19},"alias_span":null,"name":"*","value":"interleave, merge, merge_join_by, zip_eq","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":0,"byte_end":79440,"line_start":1,"line_end":2391,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":419},{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":507},{"krate":0,"index":516},{"krate":0,"index":531},{"krate":0,"index":555},{"krate":0,"index":582},{"krate":0,"index":596},{"krate":0,"index":626},{"krate":0,"index":635},{"krate":0,"index":654},{"krate":0,"index":685},{"krate":0,"index":701},{"krate":0,"index":714},{"krate":0,"index":728},{"krate":0,"index":771},{"krate":0,"index":820},{"krate":0,"index":840},{"krate":0,"index":854},{"krate":0,"index":878},{"krate":0,"index":884},{"krate":0,"index":885},{"krate":0,"index":886},{"krate":0,"index":1013},{"krate":0,"index":1015},{"krate":0,"index":1018},{"krate":0,"index":1021},{"krate":0,"index":1889},{"krate":0,"index":1914},{"krate":0,"index":1911},{"krate":0,"index":1908},{"krate":0,"index":1903},{"krate":0,"index":1905},{"krate":0,"index":1897},{"krate":0,"index":1899},{"krate":0,"index":1026}],"decl_id":null,"docs":" Extra iterator adaptors, functions and macros.","sig":null,"attributes":[{"value":"warn(missing_docs)","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":0,"byte_end":22,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"crate_name = \"itertools\"","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":23,"byte_end":49,"line_start":2,"line_end":2,"column_start":1,"column_end":27}},{"value":"no_std","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":88,"byte_end":94,"line_start":3,"line_end":3,"column_start":39,"column_end":45}}]},{"kind":"Mod","id":{"krate":0,"index":15},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":1985,"byte_end":1992,"line_start":79,"line_end":79,"column_start":9,"column_end":16},"name":"structs","qualname":"::structs","value":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":16},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":50},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57}],"decl_id":null,"docs":" The concrete iterator types.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1030},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":80842,"byte_end":80852,"line_start":35,"line_end":35,"column_start":12,"column_end":22},"name":"Interleave","qualname":"::adaptors::Interleave","value":"Interleave {  }","parent":null,"children":[{"krate":0,"index":1033},{"krate":0,"index":1034},{"krate":0,"index":1035}],"decl_id":null,"docs":" An iterator adaptor that alternates elements from two iterators until both\n run out.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":80757,"byte_end":80830,"line_start":34,"line_end":34,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":83},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":81182,"byte_end":81192,"line_start":52,"line_end":52,"column_start":8,"column_end":18},"name":"interleave","qualname":"::adaptors::interleave","value":"fn <I, J> (i: I, j: J) -> Interleave<<I as IntoIterator>::IntoIter, <J as IntoIterator>::IntoIter>","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator that interleaves elements in `i` and `j`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1044},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":82457,"byte_end":82475,"line_start":98,"line_end":98,"column_start":12,"column_end":30},"name":"InterleaveShortest","qualname":"::adaptors::InterleaveShortest","value":"InterleaveShortest {  }","parent":null,"children":[{"krate":0,"index":1047},{"krate":0,"index":1048},{"krate":0,"index":1049}],"decl_id":null,"docs":" An iterator adaptor that alternates elements from the two iterators until\n one of them runs out.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":82372,"byte_end":82445,"line_start":97,"line_end":97,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1058},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":84877,"byte_end":84884,"line_start":187,"line_end":187,"column_start":12,"column_end":19},"name":"PutBack","qualname":"::adaptors::PutBack","value":"PutBack {  }","parent":null,"children":[{"krate":0,"index":1060},{"krate":0,"index":1061}],"decl_id":null,"docs":" An iterator adaptor that allows putting back a single\n item to the front of the iterator.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":102},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":85021,"byte_end":85029,"line_start":195,"line_end":195,"column_start":8,"column_end":16},"name":"put_back","qualname":"::adaptors::put_back","value":"fn <I> (iterable: I) -> PutBack<I::IntoIter>","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator where you can put back a single item\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":85278,"byte_end":85288,"line_start":208,"line_end":208,"column_start":12,"column_end":22},"name":"with_value","qualname":"<PutBack<I>>::with_value","value":"fn (mut self, value: I::Item) -> Self","parent":null,"children":[],"decl_id":null,"docs":" put back value `value` (builder method)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":85444,"byte_end":85454,"line_start":215,"line_end":215,"column_start":12,"column_end":22},"name":"into_parts","qualname":"<PutBack<I>>::into_parts","value":"fn (self) -> (Option<I::Item>, I)","parent":null,"children":[],"decl_id":null,"docs":" Split the `PutBack` into its parts.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":85423,"byte_end":85432,"line_start":214,"line_end":214,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":85719,"byte_end":85727,"line_start":224,"line_end":224,"column_start":12,"column_end":20},"name":"put_back","qualname":"<PutBack<I>>::put_back","value":"fn (&mut self, x: I::Item) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Put back a single value to the front of the iterator.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":85698,"byte_end":85707,"line_start":223,"line_end":223,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1068},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":87188,"byte_end":87195,"line_start":276,"line_end":276,"column_start":12,"column_end":19},"name":"Product","qualname":"::adaptors::Product","value":"Product {  }","parent":null,"children":[{"krate":0,"index":1071},{"krate":0,"index":1072},{"krate":0,"index":1073},{"krate":0,"index":1074}],"decl_id":null,"docs":" An iterator adaptor that iterates over the cartesian product of\n the element sets of two iterators `I` and `J`.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":87103,"byte_end":87176,"line_start":275,"line_end":275,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1083},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":90035,"byte_end":90043,"line_start":372,"line_end":372,"column_start":12,"column_end":20},"name":"Batching","qualname":"::adaptors::Batching","value":"Batching {  }","parent":null,"children":[{"krate":0,"index":1086},{"krate":0,"index":1087}],"decl_id":null,"docs":" A “meta iterator adaptor”. Its closure receives a reference to the iterator\n and may pick off as many elements as it likes, to produce the next iterator element.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":89950,"byte_end":90023,"line_start":371,"line_end":371,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1093},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":91167,"byte_end":91171,"line_start":414,"line_end":414,"column_start":12,"column_end":16},"name":"Step","qualname":"::adaptors::Step","value":"Step {  }","parent":null,"children":[{"krate":0,"index":1095},{"krate":0,"index":1096}],"decl_id":null,"docs":" An iterator adaptor that steps a number elements in the base iterator\n for each iteration.","sig":null,"attributes":[{"value":"deprecated(note = \"Use std .step_by() instead\", since = \"0.8\")","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":90975,"byte_end":91036,"line_start":410,"line_end":410,"column_start":1,"column_end":62}},{"value":"allow(deprecated)","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":91037,"byte_end":91057,"line_start":411,"line_end":411,"column_start":1,"column_end":21}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":91082,"byte_end":91155,"line_start":413,"line_end":413,"column_start":1,"column_end":74}}]},{"kind":"Trait","id":{"krate":0,"index":156},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":92189,"byte_end":92203,"line_start":466,"line_end":466,"column_start":11,"column_end":25},"name":"MergePredicate","qualname":"::adaptors::MergePredicate","value":"MergePredicate<T>","parent":null,"children":[{"krate":0,"index":158}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":92216,"byte_end":92226,"line_start":467,"line_end":467,"column_start":8,"column_end":18},"name":"merge_pred","qualname":"::adaptors::MergePredicate::merge_pred","value":"fn (&mut self, a: &T, b: &T) -> bool","parent":{"krate":0,"index":156},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1103},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":92292,"byte_end":92300,"line_start":471,"line_end":471,"column_start":12,"column_end":20},"name":"MergeLte","qualname":"::adaptors::MergeLte","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":162},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":92800,"byte_end":92805,"line_start":486,"line_end":486,"column_start":10,"column_end":15},"name":"Merge","qualname":"::adaptors::Merge","value":"MergeBy<I, J, MergeLte>","parent":null,"children":[],"decl_id":null,"docs":" An iterator adaptor that merges the two base iterators in ascending order.\n If both base iterators are sorted (ascending), the result is sorted.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":92717,"byte_end":92790,"line_start":485,"line_end":485,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":165},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":93090,"byte_end":93095,"line_start":499,"line_end":499,"column_start":8,"column_end":13},"name":"merge","qualname":"::adaptors::merge","value":"fn <I, J> (i: I, j: J) -> Merge<<I as IntoIterator>::IntoIter, <J as IntoIterator>::IntoIter>","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator that merges elements in `i` and `j`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":168},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":93695,"byte_end":93702,"line_start":514,"line_end":514,"column_start":12,"column_end":19},"name":"MergeBy","qualname":"::adaptors::MergeBy","value":"MergeBy {  }","parent":null,"children":[{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175}],"decl_id":null,"docs":" An iterator adaptor that merges the two base iterators in ascending order.\n If both base iterators are sorted (ascending), the result is sorted.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":93610,"byte_end":93683,"line_start":513,"line_end":513,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":205},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":97132,"byte_end":97140,"line_start":642,"line_end":642,"column_start":12,"column_end":20},"name":"Coalesce","qualname":"::adaptors::Coalesce","value":"Coalesce {  }","parent":null,"children":[{"krate":0,"index":208},{"krate":0,"index":209}],"decl_id":null,"docs":" An iterator adaptor that may join together adjacent elements.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":97047,"byte_end":97120,"line_start":641,"line_end":641,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":226},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":98481,"byte_end":98488,"line_start":697,"line_end":697,"column_start":12,"column_end":19},"name":"DedupBy","qualname":"::adaptors::DedupBy","value":"DedupBy {  }","parent":null,"children":[{"krate":0,"index":229},{"krate":0,"index":230}],"decl_id":null,"docs":" An iterator adaptor that removes repeated duplicates, determining equality using a comparison function.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":98396,"byte_end":98469,"line_start":696,"line_end":696,"column_start":1,"column_end":74}}]},{"kind":"Trait","id":{"krate":0,"index":231},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":98584,"byte_end":98598,"line_start":704,"line_end":704,"column_start":11,"column_end":25},"name":"DedupPredicate","qualname":"::adaptors::DedupPredicate","value":"DedupPredicate<T>","parent":null,"children":[{"krate":0,"index":233}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":98669,"byte_end":98679,"line_start":705,"line_end":705,"column_start":8,"column_end":18},"name":"dedup_pair","qualname":"::adaptors::DedupPredicate::dedup_pair","value":"fn (&mut self, a: &T, b: &T) -> bool","parent":{"krate":0,"index":231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1119},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":98745,"byte_end":98752,"line_start":709,"line_end":709,"column_start":12,"column_end":19},"name":"DedupEq","qualname":"::adaptors::DedupEq","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":241},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":99172,"byte_end":99177,"line_start":726,"line_end":726,"column_start":10,"column_end":15},"name":"Dedup","qualname":"::adaptors::Dedup","value":"DedupBy<I, DedupEq>","parent":null,"children":[],"decl_id":null,"docs":" An iterator adaptor that removes repeated duplicates.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":266},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":101286,"byte_end":101298,"line_start":806,"line_end":806,"column_start":12,"column_end":24},"name":"TakeWhileRef","qualname":"::adaptors::TakeWhileRef","value":"TakeWhileRef {  }","parent":null,"children":[{"krate":0,"index":270},{"krate":0,"index":271}],"decl_id":null,"docs":" An iterator adaptor that borrows from a `Clone`-able iterator\n to only pick off elements while the predicate returns `true`.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":101201,"byte_end":101274,"line_start":805,"line_end":805,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1125},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":102671,"byte_end":102680,"line_start":857,"line_end":857,"column_start":12,"column_end":21},"name":"WhileSome","qualname":"::adaptors::WhileSome","value":"WhileSome {  }","parent":null,"children":[{"krate":0,"index":1127}],"decl_id":null,"docs":" An iterator adaptor that filters `Option<A>` iterator elements\n and produces `A`. Stops on the first `None` encountered.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":102586,"byte_end":102659,"line_start":856,"line_end":856,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1134},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":103531,"byte_end":103548,"line_start":891,"line_end":891,"column_start":12,"column_end":29},"name":"TupleCombinations","qualname":"::adaptors::TupleCombinations","value":"TupleCombinations {  }","parent":null,"children":[{"krate":0,"index":1137},{"krate":0,"index":1138},{"krate":0,"index":1139}],"decl_id":null,"docs":" An iterator to iterate through all combinations in a `Clone`-able iterator that produces tuples\n of a specific size.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":103446,"byte_end":103519,"line_start":890,"line_end":890,"column_start":1,"column_end":74}}]},{"kind":"Trait","id":{"krate":0,"index":294},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":103699,"byte_end":103713,"line_start":900,"line_end":900,"column_start":11,"column_end":25},"name":"HasCombination","qualname":"::adaptors::HasCombination","value":"HasCombination<I>: Sized","parent":null,"children":[{"krate":0,"index":296}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":296},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":103735,"byte_end":103746,"line_start":901,"line_end":901,"column_start":10,"column_end":21},"name":"Combination","qualname":"::adaptors::HasCombination::Combination","value":"type Combination: From<I> + Iterator<Item = Self>;","parent":{"krate":0,"index":294},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1144},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":104367,"byte_end":104384,"line_start":929,"line_end":929,"column_start":12,"column_end":29},"name":"Tuple1Combination","qualname":"::adaptors::Tuple1Combination","value":"Tuple1Combination {  }","parent":null,"children":[{"krate":0,"index":1146}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1167},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":106605,"byte_end":106622,"line_start":1010,"line_end":1010,"column_start":25,"column_end":42},"name":"Tuple2Combination","qualname":"::adaptors::Tuple2Combination","value":"Tuple2Combination {  }","parent":null,"children":[{"krate":0,"index":1169},{"krate":0,"index":1170},{"krate":0,"index":1171}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1192},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":106681,"byte_end":106698,"line_start":1011,"line_end":1011,"column_start":25,"column_end":42},"name":"Tuple3Combination","qualname":"::adaptors::Tuple3Combination","value":"Tuple3Combination {  }","parent":null,"children":[{"krate":0,"index":1194},{"krate":0,"index":1195},{"krate":0,"index":1196}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1217},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":106762,"byte_end":106779,"line_start":1012,"line_end":1012,"column_start":25,"column_end":42},"name":"Tuple4Combination","qualname":"::adaptors::Tuple4Combination","value":"Tuple4Combination {  }","parent":null,"children":[{"krate":0,"index":1219},{"krate":0,"index":1220},{"krate":0,"index":1221}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":317},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":107068,"byte_end":107075,"line_start":1018,"line_end":1018,"column_start":12,"column_end":19},"name":"MapInto","qualname":"::adaptors::MapInto","value":"MapInto {  }","parent":null,"children":[{"krate":0,"index":320},{"krate":0,"index":321}],"decl_id":null,"docs":" An iterator adapter to apply `Into` conversion to each element.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":106983,"byte_end":107056,"line_start":1017,"line_end":1017,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":344},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":108436,"byte_end":108446,"line_start":1075,"line_end":1075,"column_start":12,"column_end":22},"name":"MapResults","qualname":"::adaptors::MapResults","value":"MapResults {  }","parent":null,"children":[{"krate":0,"index":347},{"krate":0,"index":348}],"decl_id":null,"docs":" An iterator adapter to apply a transformation within a nested `Result`.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":108351,"byte_end":108424,"line_start":1074,"line_end":1074,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":372},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":109737,"byte_end":109746,"line_start":1124,"line_end":1124,"column_start":12,"column_end":21},"name":"Positions","qualname":"::adaptors::Positions","value":"Positions {  }","parent":null,"children":[{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":377}],"decl_id":null,"docs":" An iterator adapter to get the positions of each element that matches a predicate.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":109652,"byte_end":109725,"line_start":1123,"line_end":1123,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":391},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":111162,"byte_end":111168,"line_start":1182,"line_end":1182,"column_start":12,"column_end":18},"name":"Update","qualname":"::adaptors::Update","value":"Update {  }","parent":null,"children":[{"krate":0,"index":394},{"krate":0,"index":395}],"decl_id":null,"docs":" An iterator adapter to apply a mutating function to each element before yielding it.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":111077,"byte_end":111150,"line_start":1181,"line_end":1181,"column_start":1,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1228},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/either_or_both.rs","byte_start":119117,"byte_end":119121,"line_start":9,"line_end":9,"column_start":5,"column_end":9},"name":"Both","qualname":"::either_or_both::EitherOrBoth::Both","value":"EitherOrBoth::Both(A, B)","parent":{"krate":0,"index":1225},"children":[],"decl_id":null,"docs":" Both values are present.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1232},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/either_or_both.rs","byte_start":119185,"byte_end":119189,"line_start":11,"line_end":11,"column_start":5,"column_end":9},"name":"Left","qualname":"::either_or_both::EitherOrBoth::Left","value":"EitherOrBoth::Left(A)","parent":{"krate":0,"index":1225},"children":[],"decl_id":null,"docs":" Only the left value of type `A` is present.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1235},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/either_or_both.rs","byte_start":119251,"byte_end":119256,"line_start":13,"line_end":13,"column_start":5,"column_end":10},"name":"Right","qualname":"::either_or_both::EitherOrBoth::Right","value":"EitherOrBoth::Right(B)","parent":{"krate":0,"index":1225},"children":[],"decl_id":null,"docs":" Only the right value of type `B` is present.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1225},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/either_or_both.rs","byte_start":119059,"byte_end":119071,"line_start":7,"line_end":7,"column_start":10,"column_end":22},"name":"EitherOrBoth","qualname":"::either_or_both::EitherOrBoth","value":"EitherOrBoth::{Both, Left, Right}","parent":null,"children":[{"krate":0,"index":1228},{"krate":0,"index":1232},{"krate":0,"index":1235}],"decl_id":null,"docs":" Value that either holds a single A or B, or both.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":425},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/either_or_both.rs","byte_start":119375,"byte_end":119383,"line_start":18,"line_end":18,"column_start":12,"column_end":20},"name":"has_left","qualname":"<EitherOrBoth<A, B>>::has_left","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" If `Left`, or `Both`, return true, otherwise, return false.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":426},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/either_or_both.rs","byte_start":119527,"byte_end":119536,"line_start":23,"line_end":23,"column_start":12,"column_end":21},"name":"has_right","qualname":"<EitherOrBoth<A, B>>::has_right","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" If `Right`, or `Both`, return true, otherwise, return false.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":427},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/either_or_both.rs","byte_start":119709,"byte_end":119716,"line_start":29,"line_end":29,"column_start":12,"column_end":19},"name":"is_left","qualname":"<EitherOrBoth<A, B>>::is_left","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" If Left, return true otherwise, return false.\n Exclusive version of [`has_left`].\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":428},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/either_or_both.rs","byte_start":119936,"byte_end":119944,"line_start":38,"line_end":38,"column_start":12,"column_end":20},"name":"is_right","qualname":"<EitherOrBoth<A, B>>::is_right","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" If Right, return true otherwise, return false.\n Exclusive version of [`has_right`].\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":429},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/either_or_both.rs","byte_start":120177,"byte_end":120184,"line_start":47,"line_end":47,"column_start":12,"column_end":19},"name":"is_both","qualname":"<EitherOrBoth<A, B>>::is_both","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" If Right, return true otherwise, return false.\n Equivalent to `self.as_ref().both().is_some()`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":430},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/either_or_both.rs","byte_start":120350,"byte_end":120354,"line_start":52,"line_end":52,"column_start":12,"column_end":16},"name":"left","qualname":"<EitherOrBoth<A, B>>::left","value":"fn (self) -> Option<A>","parent":null,"children":[],"decl_id":null,"docs":" If `Left`, or `Both`, return `Some` with the left value, otherwise, return `None`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":431},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/either_or_both.rs","byte_start":120595,"byte_end":120600,"line_start":60,"line_end":60,"column_start":12,"column_end":17},"name":"right","qualname":"<EitherOrBoth<A, B>>::right","value":"fn (self) -> Option<B>","parent":null,"children":[],"decl_id":null,"docs":" If `Right`, or `Both`, return `Some` with the right value, otherwise, return `None`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":432},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/either_or_both.rs","byte_start":120816,"byte_end":120820,"line_start":68,"line_end":68,"column_start":12,"column_end":16},"name":"both","qualname":"<EitherOrBoth<A, B>>::both","value":"fn (self) -> Option<(A, B)>","parent":null,"children":[],"decl_id":null,"docs":" If Both, return `Some` tuple containing left and right.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":433},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/either_or_both.rs","byte_start":121030,"byte_end":121036,"line_start":76,"line_end":76,"column_start":12,"column_end":18},"name":"as_ref","qualname":"<EitherOrBoth<A, B>>::as_ref","value":"fn (&self) -> EitherOrBoth<&A, &B>","parent":null,"children":[],"decl_id":null,"docs":" Converts from `&EitherOrBoth<A, B>` to `EitherOrBoth<&A, &B>`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":434},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/either_or_both.rs","byte_start":121351,"byte_end":121357,"line_start":85,"line_end":85,"column_start":12,"column_end":18},"name":"as_mut","qualname":"<EitherOrBoth<A, B>>::as_mut","value":"fn (&mut self) -> EitherOrBoth<&mut A, &mut B>","parent":null,"children":[],"decl_id":null,"docs":" Converts from `&mut EitherOrBoth<A, B>` to `EitherOrBoth<&mut A, &mut B>`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":435},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/either_or_both.rs","byte_start":121679,"byte_end":121683,"line_start":94,"line_end":94,"column_start":12,"column_end":16},"name":"flip","qualname":"<EitherOrBoth<A, B>>::flip","value":"fn (self) -> EitherOrBoth<B, A>","parent":null,"children":[],"decl_id":null,"docs":" Convert `EitherOrBoth<A, B>` to `EitherOrBoth<B, A>`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":436},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/either_or_both.rs","byte_start":122031,"byte_end":122039,"line_start":104,"line_end":104,"column_start":12,"column_end":20},"name":"map_left","qualname":"<EitherOrBoth<A, B>>::map_left","value":"fn <F, M> (self, f: F) -> EitherOrBoth<M, B>","parent":null,"children":[],"decl_id":null,"docs":" Apply the function `f` on the value `a` in `Left(a)` or `Both(a, b)` variants. If it is\n present rewrapping the result in `self`'s original variant.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":439},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/either_or_both.rs","byte_start":122447,"byte_end":122456,"line_start":117,"line_end":117,"column_start":12,"column_end":21},"name":"map_right","qualname":"<EitherOrBoth<A, B>>::map_right","value":"fn <F, M> (self, f: F) -> EitherOrBoth<A, M>","parent":null,"children":[],"decl_id":null,"docs":" Apply the function `f` on the value `b` in `Right(b)` or `Both(a, b)` variants.\n If it is present rewrapping the result in `self`'s original variant.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":442},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/either_or_both.rs","byte_start":122903,"byte_end":122910,"line_start":131,"line_end":131,"column_start":12,"column_end":19},"name":"map_any","qualname":"<EitherOrBoth<A, B>>::map_any","value":"fn <F, L, G, R> (self, f: F, g: G) -> EitherOrBoth<L, R>","parent":null,"children":[],"decl_id":null,"docs":" Apply the functions `f` and `g` on the value `a` and `b` respectively;\n found in `Left(a)`, `Right(b)`, or `Both(a, b)` variants.\n The Result is rewrapped `self`'s original variant.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":447},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/either_or_both.rs","byte_start":123311,"byte_end":123324,"line_start":145,"line_end":145,"column_start":12,"column_end":25},"name":"left_and_then","qualname":"<EitherOrBoth<A, B>>::left_and_then","value":"fn <F, L> (self, f: F) -> EitherOrBoth<L, B>","parent":null,"children":[],"decl_id":null,"docs":" Apply the function `f` on the value `b` in `Right(b)` or `Both(a, _)` variants if it is\n present.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":450},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/either_or_both.rs","byte_start":123662,"byte_end":123676,"line_start":157,"line_end":157,"column_start":12,"column_end":26},"name":"right_and_then","qualname":"<EitherOrBoth<A, B>>::right_and_then","value":"fn <F, R> (self, f: F) -> EitherOrBoth<A, R>","parent":null,"children":[],"decl_id":null,"docs":" Apply the function `f` on the value `a`\n in `Left(a)` or `Both(a, _)` variants if it is present.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":455},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/either_or_both.rs","byte_start":124032,"byte_end":124038,"line_start":170,"line_end":170,"column_start":12,"column_end":18},"name":"reduce","qualname":"<EitherOrBoth<T, T>>::reduce","value":"fn <F> (self, f: F) -> T","parent":null,"children":[],"decl_id":null,"docs":" Return either value of left, right, or the product of `f` applied where `Both` are present.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":462},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/free.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"free","qualname":"::free","value":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/free.rs","parent":null,"children":[{"krate":0,"index":463},{"krate":0,"index":466},{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":474},{"krate":0,"index":476},{"krate":0,"index":479},{"krate":0,"index":482},{"krate":0,"index":486},{"krate":0,"index":490},{"krate":0,"index":493},{"krate":0,"index":496},{"krate":0,"index":498}],"decl_id":null,"docs":" Free functions that create iterator adaptors or call iterator methods.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":472},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/free.rs","byte_start":125548,"byte_end":125557,"line_start":42,"line_end":42,"column_start":8,"column_end":17},"name":"enumerate","qualname":"::free::enumerate","value":"fn <I> (iterable: I) -> iter::Enumerate<I::IntoIter>","parent":null,"children":[],"decl_id":null,"docs":" Iterate `iterable` with a running index.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":474},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/free.rs","byte_start":125879,"byte_end":125882,"line_start":59,"line_end":59,"column_start":8,"column_end":11},"name":"rev","qualname":"::free::rev","value":"fn <I> (iterable: I) -> iter::Rev<I::IntoIter>","parent":null,"children":[],"decl_id":null,"docs":" Iterate `iterable` in reverse.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":476},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/free.rs","byte_start":126283,"byte_end":126286,"line_start":78,"line_end":78,"column_start":8,"column_end":11},"name":"zip","qualname":"::free::zip","value":"fn <I, J> (i: I, j: J) -> Zip<I::IntoIter, J::IntoIter>","parent":null,"children":[],"decl_id":null,"docs":" Iterate `i` and `j` in lock step.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":479},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/free.rs","byte_start":126666,"byte_end":126671,"line_start":96,"line_end":96,"column_start":8,"column_end":13},"name":"chain","qualname":"::free::chain","value":"fn <I, J> (i: I, j: J) -> iter::Chain<<I as IntoIterator>::IntoIter, <J as IntoIterator>::IntoIter>","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator that first iterates `i` and then `j`.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":482},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/free.rs","byte_start":127094,"byte_end":127100,"line_start":112,"line_end":112,"column_start":8,"column_end":14},"name":"cloned","qualname":"::free::cloned","value":"fn <'a, I, T> (iterable: I) -> iter::Cloned<I::IntoIter>","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator that clones each element from &T to T","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":486},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/free.rs","byte_start":127488,"byte_end":127492,"line_start":128,"line_end":128,"column_start":8,"column_end":12},"name":"fold","qualname":"::free::fold","value":"fn <I, B, F> (iterable: I, init: B, f: F) -> B","parent":null,"children":[],"decl_id":null,"docs":" Perform a fold operation over the iterable.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":490},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/free.rs","byte_start":127867,"byte_end":127870,"line_start":144,"line_end":144,"column_start":8,"column_end":11},"name":"all","qualname":"::free::all","value":"fn <I, F> (iterable: I, f: F) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Test whether the predicate holds for all elements in the iterable.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":493},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/free.rs","byte_start":128230,"byte_end":128233,"line_start":160,"line_end":160,"column_start":8,"column_end":11},"name":"any","qualname":"::free::any","value":"fn <I, F> (iterable: I, f: F) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Test whether the predicate holds for any elements in the iterable.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":496},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/free.rs","byte_start":128558,"byte_end":128561,"line_start":176,"line_end":176,"column_start":8,"column_end":11},"name":"max","qualname":"::free::max","value":"fn <I> (iterable: I) -> Option<I::Item>","parent":null,"children":[],"decl_id":null,"docs":" Return the maximum value of the iterable.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":498},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/free.rs","byte_start":128874,"byte_end":128877,"line_start":192,"line_end":192,"column_start":8,"column_end":11},"name":"min","qualname":"::free::min","value":"fn <I> (iterable: I) -> Option<I::Item>","parent":null,"children":[],"decl_id":null,"docs":" Return the minimum value of the iterable.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":503},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/concat_impl.rs","byte_start":130409,"byte_end":130415,"line_start":17,"line_end":17,"column_start":8,"column_end":14},"name":"concat","qualname":"::concat_impl::concat","value":"fn <I> (iterable: I) -> I::Item","parent":null,"children":[],"decl_id":null,"docs":" Combine all an iterator's elements into one element by using `Extend`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1411},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/cons_tuples_impl.rs","byte_start":132191,"byte_end":132201,"line_start":46,"line_end":46,"column_start":12,"column_end":22},"name":"ConsTuples","qualname":"::cons_tuples_impl::ConsTuples","value":"ConsTuples {  }","parent":null,"children":[{"krate":0,"index":1414}],"decl_id":null,"docs":" An iterator that maps an iterator of tuples like\n `((A, B), C)` to an iterator of `(A, B, C)`.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/cons_tuples_impl.rs","byte_start":132089,"byte_end":132162,"line_start":44,"line_end":44,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":513},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/cons_tuples_impl.rs","byte_start":132542,"byte_end":132553,"line_start":64,"line_end":64,"column_start":8,"column_end":19},"name":"cons_tuples","qualname":"::cons_tuples_impl::cons_tuples","value":"fn <I, J> (iterable: I) -> ConsTuples<I, J>","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator that maps for example iterators of\n `((A, B), C)` to `(A, B, C)`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1419},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/exactly_one_err.rs","byte_start":133194,"byte_end":133209,"line_start":14,"line_end":14,"column_start":12,"column_end":27},"name":"ExactlyOneError","qualname":"::exactly_one_err::ExactlyOneError","value":"ExactlyOneError {  }","parent":null,"children":[{"krate":0,"index":1421},{"krate":0,"index":1422}],"decl_id":null,"docs":" Iterator returned for the error case of `IterTools::exactly_one()`\n This iterator yields exactly the same elements as the input iterator.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":537},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/diff.rs","byte_start":135057,"byte_end":135070,"line_start":21,"line_end":21,"column_start":5,"column_end":18},"name":"FirstMismatch","qualname":"::diff::Diff::FirstMismatch","value":"Diff::FirstMismatch(usize, PutBack<I>, PutBack<J>)","parent":{"krate":0,"index":534},"children":[],"decl_id":null,"docs":" The index of the first non-matching element along with both iterator's remaining elements\n starting with the first mis-match.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":542},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/diff.rs","byte_start":135203,"byte_end":135210,"line_start":23,"line_end":23,"column_start":5,"column_end":12},"name":"Shorter","qualname":"::diff::Diff::Shorter","value":"Diff::Shorter(usize, PutBack<I>)","parent":{"krate":0,"index":534},"children":[],"decl_id":null,"docs":" The total number of elements that were in `J` along with the remaining elements of `I`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":546},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/diff.rs","byte_start":135331,"byte_end":135337,"line_start":25,"line_end":25,"column_start":5,"column_end":11},"name":"Longer","qualname":"::diff::Diff::Longer","value":"Diff::Longer(usize, PutBack<J>)","parent":{"krate":0,"index":534},"children":[],"decl_id":null,"docs":" The total number of elements that were in `I` along with the remaining elements of `J`.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":534},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/diff.rs","byte_start":134854,"byte_end":134858,"line_start":15,"line_end":15,"column_start":10,"column_end":14},"name":"Diff","qualname":"::diff::Diff","value":"Diff::{FirstMismatch, Shorter, Longer}","parent":null,"children":[{"krate":0,"index":537},{"krate":0,"index":542},{"krate":0,"index":546}],"decl_id":null,"docs":" A type returned by the [`diff_with`](./fn.diff_with.html) function.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":550},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/diff.rs","byte_start":136086,"byte_end":136095,"line_start":40,"line_end":40,"column_start":8,"column_end":17},"name":"diff_with","qualname":"::diff::diff_with","value":"fn <I, J, F> (i: I, j: J, is_equal: F) -> Option<Diff<I::IntoIter, J::IntoIter>>","parent":null,"children":[],"decl_id":null,"docs":" Compares every element yielded by both `i` and `j` with the given function in lock-step and\n returns a `Diff` which describes how `j` differs from `i`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":558},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/format.rs","byte_start":137215,"byte_end":137225,"line_start":10,"line_end":10,"column_start":12,"column_end":22},"name":"FormatWith","qualname":"::format::FormatWith","value":"FormatWith {  }","parent":null,"children":[{"krate":0,"index":562},{"krate":0,"index":563}],"decl_id":null,"docs":" Format all iterator elements lazily, separated by `sep`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1429},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/format.rs","byte_start":137648,"byte_end":137654,"line_start":24,"line_end":24,"column_start":12,"column_end":18},"name":"Format","qualname":"::format::Format","value":"Format {  }","parent":null,"children":[{"krate":0,"index":1432},{"krate":0,"index":1433}],"decl_id":null,"docs":" Format all iterator elements lazily, separated by `sep`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1476},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/intersperse.rs","byte_start":140656,"byte_end":140667,"line_start":15,"line_end":15,"column_start":12,"column_end":23},"name":"Intersperse","qualname":"::intersperse::Intersperse","value":"Intersperse {  }","parent":null,"children":[{"krate":0,"index":1478},{"krate":0,"index":1479},{"krate":0,"index":1480}],"decl_id":null,"docs":" An iterator adaptor to insert a particular value\n between each element of the adapted iterator.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/intersperse.rs","byte_start":140554,"byte_end":140627,"line_start":13,"line_end":13,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":604},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/merge_join.rs","byte_start":142526,"byte_end":142539,"line_start":11,"line_end":11,"column_start":8,"column_end":21},"name":"merge_join_by","qualname":"::merge_join::merge_join_by","value":"fn <I, J, F> (left: I, right: J, cmp_fn: F) -> MergeJoinBy<I::IntoIter, J::IntoIter, F>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator adaptor that merge-joins items from the two base iterators in ascending order.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":608},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/merge_join.rs","byte_start":143165,"byte_end":143176,"line_start":28,"line_end":28,"column_start":12,"column_end":23},"name":"MergeJoinBy","qualname":"::merge_join::MergeJoinBy","value":"MergeJoinBy {  }","parent":null,"children":[{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":614}],"decl_id":null,"docs":" An iterator adaptor that merge-joins items from the two base iterators in ascending order.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/merge_join.rs","byte_start":143080,"byte_end":143153,"line_start":27,"line_end":27,"column_start":1,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1490},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/minmax.rs","byte_start":145185,"byte_end":145195,"line_start":7,"line_end":7,"column_start":5,"column_end":15},"name":"NoElements","qualname":"::minmax::MinMaxResult::NoElements","value":"MinMaxResult::NoElements","parent":{"krate":0,"index":1488},"children":[],"decl_id":null,"docs":" Empty iterator\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1492},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/minmax.rs","byte_start":145277,"byte_end":145287,"line_start":10,"line_end":10,"column_start":5,"column_end":15},"name":"OneElement","qualname":"::minmax::MinMaxResult::OneElement","value":"MinMaxResult::OneElement(T)","parent":{"krate":0,"index":1488},"children":[],"decl_id":null,"docs":" Iterator with one element, so the minimum and maximum are the same\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1495},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/minmax.rs","byte_start":145400,"byte_end":145406,"line_start":14,"line_end":14,"column_start":5,"column_end":11},"name":"MinMax","qualname":"::minmax::MinMaxResult::MinMax","value":"MinMaxResult::MinMax(T, T)","parent":{"krate":0,"index":1488},"children":[],"decl_id":null,"docs":" More than one element in the iterator, the first element is not larger\n than the second\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1488},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/minmax.rs","byte_start":145140,"byte_end":145152,"line_start":5,"line_end":5,"column_start":10,"column_end":22},"name":"MinMaxResult","qualname":"::minmax::MinMaxResult","value":"MinMaxResult::{NoElements, OneElement, MinMax}","parent":null,"children":[{"krate":0,"index":1490},{"krate":0,"index":1492},{"krate":0,"index":1495}],"decl_id":null,"docs":" `MinMaxResult` is an enum returned by `minmax`. See `Itertools::minmax()` for\n more detail.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":629},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/minmax.rs","byte_start":146224,"byte_end":146235,"line_start":38,"line_end":38,"column_start":12,"column_end":23},"name":"into_option","qualname":"<MinMaxResult<T>>::into_option","value":"fn (self) -> Option<(T, T)>","parent":null,"children":[],"decl_id":null,"docs":" `into_option` creates an `Option` of type `(T, T)`. The returned `Option`\n has variant `None` if and only if the `MinMaxResult` has variant\n `NoElements`. Otherwise `Some((x, y))` is returned where `x <= y`.\n If the `MinMaxResult` has variant `OneElement(x)`, performing this\n operation will make one clone of `x`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1513},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/pad_tail.rs","byte_start":149234,"byte_end":149242,"line_start":12,"line_end":12,"column_start":12,"column_end":20},"name":"PadUsing","qualname":"::pad_tail::PadUsing","value":"PadUsing {  }","parent":null,"children":[{"krate":0,"index":1516},{"krate":0,"index":1517},{"krate":0,"index":1518},{"krate":0,"index":1519}],"decl_id":null,"docs":" An iterator adaptor that pads a sequence to a minimum length by filling\n missing elements using a closure.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/pad_tail.rs","byte_start":149149,"byte_end":149222,"line_start":11,"line_end":11,"column_start":1,"column_end":74}}]},{"kind":"Trait","id":{"krate":0,"index":657},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/peeking_take_while.rs","byte_start":151440,"byte_end":151451,"line_start":15,"line_end":15,"column_start":11,"column_end":22},"name":"PeekingNext","qualname":"::peeking_take_while::PeekingNext","value":"PeekingNext: Iterator","parent":null,"children":[{"krate":0,"index":658}],"decl_id":null,"docs":" An iterator that allows peeking at an element before deciding to accept it.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":658},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/peeking_take_while.rs","byte_start":151635,"byte_end":151647,"line_start":19,"line_end":19,"column_start":8,"column_end":20},"name":"peeking_next","qualname":"::peeking_take_while::PeekingNext::peeking_next","value":"fn <F> (&mut self, accept: F) -> Option<Self::Item>","parent":{"krate":0,"index":657},"children":[],"decl_id":null,"docs":" Pass a reference to the next iterator element to the closure `accept`;\n if `accept` returns true, return it as the next element,\n else None.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":668},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/peeking_take_while.rs","byte_start":153166,"byte_end":153182,"line_start":80,"line_end":80,"column_start":12,"column_end":28},"name":"PeekingTakeWhile","qualname":"::peeking_take_while::PeekingTakeWhile","value":"PeekingTakeWhile {  }","parent":null,"children":[{"krate":0,"index":672},{"krate":0,"index":673}],"decl_id":null,"docs":" An iterator adaptor that takes items while a closure returns `true`.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/peeking_take_while.rs","byte_start":153081,"byte_end":153154,"line_start":79,"line_end":79,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1559},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/process_results_impl.rs","byte_start":155668,"byte_end":155682,"line_start":9,"line_end":9,"column_start":12,"column_end":26},"name":"ProcessResults","qualname":"::process_results_impl::ProcessResults","value":"ProcessResults {  }","parent":null,"children":[{"krate":0,"index":1563},{"krate":0,"index":1564}],"decl_id":null,"docs":" An iterator that produces only the `T` values as long as the\n inner iterator produces `Ok(T)`.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/process_results_impl.rs","byte_start":155566,"byte_end":155639,"line_start":7,"line_end":7,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":694},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/process_results_impl.rs","byte_start":157587,"byte_end":157602,"line_start":71,"line_end":71,"column_start":8,"column_end":23},"name":"process_results","qualname":"::process_results_impl::process_results","value":"fn <I, F, T, E, R> (iterable: I, processor: F) -> Result<R, E>","parent":null,"children":[],"decl_id":null,"docs":" “Lift” a function of the values of an iterator so that it can process\n an iterator of `Result` values instead.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1570},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/repeatn.rs","byte_start":158168,"byte_end":158175,"line_start":7,"line_end":7,"column_start":12,"column_end":19},"name":"RepeatN","qualname":"::repeatn::RepeatN","value":"RepeatN {  }","parent":null,"children":[{"krate":0,"index":1572},{"krate":0,"index":1573}],"decl_id":null,"docs":" An iterator that produces *n* repetitions of an element.","sig":null,"attributes":[{"value":"must_use = \"iterators are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/repeatn.rs","byte_start":158074,"byte_end":158139,"line_start":5,"line_end":5,"column_start":1,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":702},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/repeatn.rs","byte_start":158292,"byte_end":158300,"line_start":13,"line_end":13,"column_start":8,"column_end":16},"name":"repeat_n","qualname":"::repeatn::repeat_n","value":"fn <A> (element: A, n: usize) -> RepeatN<A>","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator that produces `n` repetitions of `element`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":731},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/sources.rs","byte_start":161998,"byte_end":162008,"line_start":10,"line_end":10,"column_start":12,"column_end":22},"name":"RepeatCall","qualname":"::sources::RepeatCall","value":"RepeatCall {  }","parent":null,"children":[{"krate":0,"index":733}],"decl_id":null,"docs":" See [`repeat_call`](../fn.repeat_call.html) for more information.\n","sig":null,"attributes":[{"value":"deprecated(note = \"Use std repeat_with() instead\", since = \"0.8\")","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/sources.rs","byte_start":161922,"byte_end":161986,"line_start":9,"line_end":9,"column_start":1,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":736},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/sources.rs","byte_start":162765,"byte_end":162776,"line_start":42,"line_end":42,"column_start":8,"column_end":19},"name":"repeat_call","qualname":"::sources::repeat_call","value":"fn <F, A> (function: F) -> RepeatCall<F>","parent":null,"children":[],"decl_id":null,"docs":" An iterator source that produces elements indefinitely by calling\n a given closure.","sig":null,"attributes":[{"value":"deprecated(note = \"Use std repeat_with() instead\", since = \"0.8\")","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/sources.rs","byte_start":162693,"byte_end":162757,"line_start":41,"line_end":41,"column_start":1,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":745},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/sources.rs","byte_start":164383,"byte_end":164389,"line_start":100,"line_end":100,"column_start":8,"column_end":14},"name":"unfold","qualname":"::sources::unfold","value":"fn <A, St, F> (initial_state: St, f: F) -> Unfold<St, F>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unfold source with the specified closure as the \"iterator\n function\" and an initial state to eventually pass to the closure","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1579},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/sources.rs","byte_start":164815,"byte_end":164821,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"name":"Unfold","qualname":"::sources::Unfold","value":"Unfold { state }","parent":null,"children":[{"krate":0,"index":1582},{"krate":0,"index":1583}],"decl_id":null,"docs":" See [`unfold`](../fn.unfold.html) for more information.\n","sig":null,"attributes":[{"value":"must_use = \"iterators are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/sources.rs","byte_start":164738,"byte_end":164803,"line_start":117,"line_end":117,"column_start":1,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":1583},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/sources.rs","byte_start":164929,"byte_end":164934,"line_start":121,"line_end":121,"column_start":9,"column_end":14},"name":"state","qualname":"::sources::Unfold::state","value":"St","parent":{"krate":0,"index":1579},"children":[],"decl_id":null,"docs":" Internal state that will be passed to the closure on the next iteration\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1588},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/sources.rs","byte_start":165594,"byte_end":165601,"line_start":148,"line_end":148,"column_start":12,"column_end":19},"name":"Iterate","qualname":"::sources::Iterate","value":"Iterate {  }","parent":null,"children":[{"krate":0,"index":1591},{"krate":0,"index":1592}],"decl_id":null,"docs":" An iterator that infinitely applies function to value and yields results.","sig":null,"attributes":[{"value":"must_use = \"iterators are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/sources.rs","byte_start":165517,"byte_end":165582,"line_start":147,"line_end":147,"column_start":1,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":768},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/sources.rs","byte_start":166358,"byte_end":166365,"line_start":183,"line_end":183,"column_start":8,"column_end":15},"name":"iterate","qualname":"::sources::iterate","value":"fn <St, F> (initial_value: St, f: F) -> Iterate<St, F>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new iterator that infinitely applies function to value and yields results.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1598},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/tuple_impl.rs","byte_start":166785,"byte_end":166796,"line_start":10,"line_end":10,"column_start":12,"column_end":23},"name":"TupleBuffer","qualname":"::tuple_impl::TupleBuffer","value":"TupleBuffer {  }","parent":null,"children":[{"krate":0,"index":1600},{"krate":0,"index":1601}],"decl_id":null,"docs":" An iterator over a incomplete tuple.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":784},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/tuple_impl.rs","byte_start":168022,"byte_end":168028,"line_start":65,"line_end":65,"column_start":12,"column_end":18},"name":"Tuples","qualname":"::tuple_impl::Tuples","value":"Tuples {  }","parent":null,"children":[{"krate":0,"index":787},{"krate":0,"index":788}],"decl_id":null,"docs":" An iterator that groups the items in tuples of a specific size.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/tuple_impl.rs","byte_start":167937,"byte_end":168010,"line_start":64,"line_end":64,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":800},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/tuple_impl.rs","byte_start":169067,"byte_end":169078,"line_start":109,"line_end":109,"column_start":12,"column_end":23},"name":"into_buffer","qualname":"<Tuples<I, T>>::into_buffer","value":"fn (self) -> TupleBuffer<T>","parent":null,"children":[],"decl_id":null,"docs":" Return a buffer with the produced items that was not enough to be grouped in a tuple.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1605},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/tuple_impl.rs","byte_start":169442,"byte_end":169454,"line_start":121,"line_end":121,"column_start":12,"column_end":24},"name":"TupleWindows","qualname":"::tuple_impl::TupleWindows","value":"TupleWindows {  }","parent":null,"children":[{"krate":0,"index":1608},{"krate":0,"index":1609}],"decl_id":null,"docs":" An iterator over all contiguous windows that produces tuples of a specific size.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/tuple_impl.rs","byte_start":169340,"byte_end":169413,"line_start":119,"line_end":119,"column_start":1,"column_end":74}}]},{"kind":"Trait","id":{"krate":0,"index":810},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/tuple_impl.rs","byte_start":170751,"byte_end":170763,"line_start":174,"line_end":174,"column_start":11,"column_end":23},"name":"TupleCollect","qualname":"::tuple_impl::TupleCollect","value":"TupleCollect: Sized","parent":null,"children":[{"krate":0,"index":811},{"krate":0,"index":812},{"krate":0,"index":813},{"krate":0,"index":815},{"krate":0,"index":817},{"krate":0,"index":818}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":811},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/tuple_impl.rs","byte_start":170782,"byte_end":170786,"line_start":175,"line_end":175,"column_start":10,"column_end":14},"name":"Item","qualname":"::tuple_impl::TupleCollect::Item","value":"type Item;","parent":{"krate":0,"index":810},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":812},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/tuple_impl.rs","byte_start":170797,"byte_end":170803,"line_start":176,"line_end":176,"column_start":10,"column_end":16},"name":"Buffer","qualname":"::tuple_impl::TupleCollect::Buffer","value":"type Buffer: Default + AsRef<[Option<Self::Item>]> + AsMut<[Option<Self::Item>]>;","parent":{"krate":0,"index":810},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":813},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/tuple_impl.rs","byte_start":170882,"byte_end":170899,"line_start":178,"line_end":178,"column_start":8,"column_end":25},"name":"collect_from_iter","qualname":"::tuple_impl::TupleCollect::collect_from_iter","value":"fn <I> (iter: I, buf: &mut Self::Buffer) -> Option<Self>","parent":{"krate":0,"index":810},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":815},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/tuple_impl.rs","byte_start":171010,"byte_end":171034,"line_start":181,"line_end":181,"column_start":8,"column_end":32},"name":"collect_from_iter_no_buf","qualname":"::tuple_impl::TupleCollect::collect_from_iter_no_buf","value":"fn <I> (iter: I) -> Option<Self>","parent":{"krate":0,"index":810},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":817},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/tuple_impl.rs","byte_start":171121,"byte_end":171130,"line_start":184,"line_end":184,"column_start":8,"column_end":17},"name":"num_items","qualname":"::tuple_impl::TupleCollect::num_items","value":"fn () -> usize","parent":{"krate":0,"index":810},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":818},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/tuple_impl.rs","byte_start":171151,"byte_end":171166,"line_start":186,"line_end":186,"column_start":8,"column_end":23},"name":"left_shift_push","qualname":"::tuple_impl::TupleCollect::left_shift_push","value":"fn (&mut self, item: Self::Item) -> ()","parent":{"krate":0,"index":810},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":824},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/with_position.rs","byte_start":173898,"byte_end":173910,"line_start":9,"line_end":9,"column_start":12,"column_end":24},"name":"WithPosition","qualname":"::with_position::WithPosition","value":"WithPosition {  }","parent":null,"children":[{"krate":0,"index":826},{"krate":0,"index":827}],"decl_id":null,"docs":" An iterator adaptor that wraps each element in an [`Position`](../enum.Position.html).","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/with_position.rs","byte_start":173813,"byte_end":173886,"line_start":8,"line_end":8,"column_start":1,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1664},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/with_position.rs","byte_start":174527,"byte_end":174532,"line_start":33,"line_end":33,"column_start":5,"column_end":10},"name":"First","qualname":"::with_position::Position::First","value":"Position::First(T)","parent":{"krate":0,"index":1662},"children":[],"decl_id":null,"docs":" This is the first element.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1667},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/with_position.rs","byte_start":174597,"byte_end":174603,"line_start":35,"line_end":35,"column_start":5,"column_end":11},"name":"Middle","qualname":"::with_position::Position::Middle","value":"Position::Middle(T)","parent":{"krate":0,"index":1662},"children":[],"decl_id":null,"docs":" This is neither the first nor the last element.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1670},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/with_position.rs","byte_start":174646,"byte_end":174650,"line_start":37,"line_end":37,"column_start":5,"column_end":9},"name":"Last","qualname":"::with_position::Position::Last","value":"Position::Last(T)","parent":{"krate":0,"index":1662},"children":[],"decl_id":null,"docs":" This is the last element.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1673},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/with_position.rs","byte_start":174693,"byte_end":174697,"line_start":39,"line_end":39,"column_start":5,"column_end":9},"name":"Only","qualname":"::with_position::Position::Only","value":"Position::Only(T)","parent":{"krate":0,"index":1662},"children":[],"decl_id":null,"docs":" This is the only element.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1662},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/with_position.rs","byte_start":174474,"byte_end":174482,"line_start":31,"line_end":31,"column_start":10,"column_end":18},"name":"Position","qualname":"::with_position::Position","value":"Position::{First, Middle, Last, Only}","parent":null,"children":[{"krate":0,"index":1664},{"krate":0,"index":1667},{"krate":0,"index":1670},{"krate":0,"index":1673}],"decl_id":null,"docs":" A value yielded by `WithPosition`.\n Indicates the position of this element in the iterator results.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":832},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/with_position.rs","byte_start":174770,"byte_end":174780,"line_start":44,"line_end":44,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Position<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Return the inner value.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1690},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/zip_eq_impl.rs","byte_start":176586,"byte_end":176591,"line_start":8,"line_end":8,"column_start":12,"column_end":17},"name":"ZipEq","qualname":"::zip_eq_impl::ZipEq","value":"ZipEq {  }","parent":null,"children":[{"krate":0,"index":1693},{"krate":0,"index":1694}],"decl_id":null,"docs":" An iterator which iterates two other iterators simultaneously","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/zip_eq_impl.rs","byte_start":176501,"byte_end":176574,"line_start":7,"line_end":7,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":842},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/zip_eq_impl.rs","byte_start":176966,"byte_end":176972,"line_start":27,"line_end":27,"column_start":8,"column_end":14},"name":"zip_eq","qualname":"::zip_eq_impl::zip_eq","value":"fn <I, J> (i: I, j: J) -> ZipEq<I::IntoIter, J::IntoIter>","parent":null,"children":[],"decl_id":null,"docs":" Iterate `i` and `j` in lock step.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1703},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/zip_longest.rs","byte_start":178397,"byte_end":178407,"line_start":17,"line_end":17,"column_start":12,"column_end":22},"name":"ZipLongest","qualname":"::zip_longest::ZipLongest","value":"ZipLongest {  }","parent":null,"children":[{"krate":0,"index":1706},{"krate":0,"index":1707}],"decl_id":null,"docs":" An iterator which iterates two other iterators simultaneously","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/zip_longest.rs","byte_start":178312,"byte_end":178385,"line_start":16,"line_end":16,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1716},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/ziptuple.rs","byte_start":180431,"byte_end":180434,"line_start":6,"line_end":6,"column_start":12,"column_end":15},"name":"Zip","qualname":"::ziptuple::Zip","value":"Zip {  }","parent":null,"children":[{"krate":0,"index":1718}],"decl_id":null,"docs":" See [`multizip`](../fn.multizip.html) for more information.\n","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/ziptuple.rs","byte_start":180346,"byte_end":180419,"line_start":5,"line_end":5,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":880},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/ziptuple.rs","byte_start":181598,"byte_end":181606,"line_start":41,"line_end":41,"column_start":8,"column_end":16},"name":"multizip","qualname":"::ziptuple::multizip","value":"fn <T, U> (t: U) -> Zip<T>","parent":null,"children":[],"decl_id":null,"docs":" An iterator that generalizes *.zip()* and allows running multiple iterators in lockstep.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":886},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":9817,"byte_end":9826,"line_start":344,"line_end":344,"column_start":11,"column_end":20},"name":"Itertools","qualname":"::Itertools","value":"Itertools: Iterator","parent":null,"children":[{"krate":0,"index":887},{"krate":0,"index":889},{"krate":0,"index":891},{"krate":0,"index":892},{"krate":0,"index":894},{"krate":0,"index":896},{"krate":0,"index":899},{"krate":0,"index":901},{"krate":0,"index":903},{"krate":0,"index":904},{"krate":0,"index":906},{"krate":0,"index":911},{"krate":0,"index":913},{"krate":0,"index":916},{"krate":0,"index":919},{"krate":0,"index":921},{"krate":0,"index":923},{"krate":0,"index":924},{"krate":0,"index":926},{"krate":0,"index":928},{"krate":0,"index":930},{"krate":0,"index":932},{"krate":0,"index":934},{"krate":0,"index":936},{"krate":0,"index":937},{"krate":0,"index":939},{"krate":0,"index":941},{"krate":0,"index":943},{"krate":0,"index":945},{"krate":0,"index":947},{"krate":0,"index":949},{"krate":0,"index":950},{"krate":0,"index":951},{"krate":0,"index":953},{"krate":0,"index":954},{"krate":0,"index":958},{"krate":0,"index":959},{"krate":0,"index":961},{"krate":0,"index":966},{"krate":0,"index":970},{"krate":0,"index":973},{"krate":0,"index":985},{"krate":0,"index":988},{"krate":0,"index":991},{"krate":0,"index":994},{"krate":0,"index":1001},{"krate":0,"index":1004},{"krate":0,"index":1008},{"krate":0,"index":1012}],"decl_id":null,"docs":" An [`Iterator`] blanket implementation that provides extra adaptors and\n methods.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":887},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":10225,"byte_end":10235,"line_start":359,"line_end":359,"column_start":8,"column_end":18},"name":"interleave","qualname":"::Itertools::interleave","value":"fn <J> (self, other: J) -> Interleave<Self, J::IntoIter>","parent":{"krate":0,"index":886},"children":[],"decl_id":null,"docs":" Alternate elements from two iterators until both have run out.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":889},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":10758,"byte_end":10777,"line_start":377,"line_end":377,"column_start":8,"column_end":27},"name":"interleave_shortest","qualname":"::Itertools::interleave_shortest","value":"fn <J> (self, other: J) -> InterleaveShortest<Self, J::IntoIter>","parent":{"krate":0,"index":886},"children":[],"decl_id":null,"docs":" Alternate elements from two iterators until at least one of them has run\n out.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":891},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":11356,"byte_end":11367,"line_start":396,"line_end":396,"column_start":8,"column_end":19},"name":"intersperse","qualname":"::Itertools::intersperse","value":"fn (self, element: Self::Item) -> Intersperse<Self>","parent":{"krate":0,"index":886},"children":[],"decl_id":null,"docs":" An iterator adaptor to insert a particular value\n between each element of the adapted iterator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":892},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":12610,"byte_end":12621,"line_start":430,"line_end":430,"column_start":8,"column_end":19},"name":"zip_longest","qualname":"::Itertools::zip_longest","value":"fn <J> (self, other: J) -> ZipLongest<Self, J::IntoIter>","parent":{"krate":0,"index":886},"children":[],"decl_id":null,"docs":" Create an iterator which iterates over both this and the specified\n iterator simultaneously, yielding pairs of two optional elements.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":12593,"byte_end":12602,"line_start":429,"line_end":429,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":894},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":13059,"byte_end":13065,"line_start":443,"line_end":443,"column_start":8,"column_end":14},"name":"zip_eq","qualname":"::Itertools::zip_eq","value":"fn <J> (self, other: J) -> ZipEq<Self, J::IntoIter>","parent":{"krate":0,"index":886},"children":[],"decl_id":null,"docs":" Create an iterator which iterates over both this and the specified\n iterator simultaneously, yielding pairs of elements.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":13042,"byte_end":13051,"line_start":442,"line_end":442,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":896},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":13981,"byte_end":13989,"line_start":473,"line_end":473,"column_start":8,"column_end":16},"name":"batching","qualname":"::Itertools::batching","value":"fn <B, F> (self, f: F) -> Batching<Self, F>","parent":{"krate":0,"index":886},"children":[],"decl_id":null,"docs":" A “meta iterator adaptor”. Its closure receives a reference to the\n iterator and may pick off as many elements as it likes, to produce the\n next iterator element.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":899},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":18269,"byte_end":18282,"line_start":588,"line_end":588,"column_start":8,"column_end":21},"name":"tuple_windows","qualname":"::Itertools::tuple_windows","value":"fn <T> (self) -> TupleWindows<Self, T>","parent":{"krate":0,"index":886},"children":[],"decl_id":null,"docs":" Return an iterator over all contiguous windows producing tuples of\n a specific size (up to 4).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":901},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":19591,"byte_end":19597,"line_start":627,"line_end":627,"column_start":8,"column_end":14},"name":"tuples","qualname":"::Itertools::tuples","value":"fn <T> (self) -> Tuples<Self, T>","parent":{"krate":0,"index":886},"children":[],"decl_id":null,"docs":" Return an iterator that groups the items in tuples of a specific size\n (up to 4).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":903},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":21138,"byte_end":21142,"line_start":677,"line_end":677,"column_start":8,"column_end":12},"name":"step","qualname":"::Itertools::step","value":"fn (self, n: usize) -> Step<Self>","parent":{"krate":0,"index":886},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that steps `n` elements in the base iterator\n for each iteration.","sig":null,"attributes":[{"value":"deprecated(note = \"Use std .step_by() instead\", since = \"0.8\")","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":21044,"byte_end":21105,"line_start":675,"line_end":675,"column_start":5,"column_end":66}},{"value":"allow(deprecated)","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":21110,"byte_end":21130,"line_start":676,"line_end":676,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":904},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":21450,"byte_end":21458,"line_start":690,"line_end":690,"column_start":8,"column_end":16},"name":"map_into","qualname":"::Itertools::map_into","value":"fn <R> (self) -> MapInto<Self, R>","parent":{"krate":0,"index":886},"children":[],"decl_id":null,"docs":" Convert each item of the iterator using the `Into` trait.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":906},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":22011,"byte_end":22022,"line_start":708,"line_end":708,"column_start":8,"column_end":19},"name":"map_results","qualname":"::Itertools::map_results","value":"fn <F, T, U, E> (self, f: F) -> MapResults<Self, F>","parent":{"krate":0,"index":886},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that applies the provided closure\n to every `Result::Ok` value. `Result::Err` values are\n unchanged.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":911},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":22685,"byte_end":22690,"line_start":729,"line_end":729,"column_start":8,"column_end":13},"name":"merge","qualname":"::Itertools::merge","value":"fn <J> (self, other: J) -> Merge<Self, J::IntoIter>","parent":{"krate":0,"index":886},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that merges the two base iterators in\n ascending order.  If both base iterators are sorted (ascending), the\n result is sorted.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":913},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":23467,"byte_end":23475,"line_start":753,"line_end":753,"column_start":8,"column_end":16},"name":"merge_by","qualname":"::Itertools::merge_by","value":"fn <J, F> (self, other: J, is_first: F) -> MergeBy<Self, J::IntoIter, F>","parent":{"krate":0,"index":886},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that merges the two base iterators in order.\n This is much like `.merge()` but allows for a custom ordering.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":916},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":25065,"byte_end":25078,"line_start":793,"line_end":793,"column_start":8,"column_end":21},"name":"merge_join_by","qualname":"::Itertools::merge_join_by","value":"fn <J, F> (self, other: J, cmp_fn: F) -> MergeJoinBy<Self, J::IntoIter, F>","parent":{"krate":0,"index":886},"children":[],"decl_id":null,"docs":" Create an iterator that merges items from both this and the specified\n iterator in ascending order.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":25048,"byte_end":25057,"line_start":792,"line_end":792,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":919},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":27684,"byte_end":27701,"line_start":869,"line_end":869,"column_start":8,"column_end":25},"name":"cartesian_product","qualname":"::Itertools::cartesian_product","value":"fn <J> (self, other: J) -> Product<Self, J::IntoIter>","parent":{"krate":0,"index":886},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that iterates over the cartesian product of\n the element sets of two iterators `self` and `J`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":921},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":30672,"byte_end":30680,"line_start":941,"line_end":941,"column_start":8,"column_end":16},"name":"coalesce","qualname":"::Itertools::coalesce","value":"fn <F> (self, f: F) -> Coalesce<Self, F>","parent":{"krate":0,"index":886},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that uses the passed-in closure to\n optionally merge together consecutive elements.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":923},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":31394,"byte_end":31399,"line_start":963,"line_end":963,"column_start":8,"column_end":13},"name":"dedup","qualname":"::Itertools::dedup","value":"fn (self) -> Dedup<Self>","parent":{"krate":0,"index":886},"children":[],"decl_id":null,"docs":" Remove duplicates from sections of consecutive identical elements.\n If the iterator is sorted, all elements will be unique.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":924},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":32142,"byte_end":32150,"line_start":985,"line_end":985,"column_start":8,"column_end":16},"name":"dedup_by","qualname":"::Itertools::dedup_by","value":"fn <Cmp> (self, cmp: Cmp) -> DedupBy<Self, Cmp>","parent":{"krate":0,"index":886},"children":[],"decl_id":null,"docs":" Remove duplicates from sections of consecutive identical elements,\n determining equality using a comparison function.\n If the iterator is sorted, all elements will be unique.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":926},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":34401,"byte_end":34419,"line_start":1049,"line_end":1049,"column_start":8,"column_end":26},"name":"peeking_take_while","qualname":"::Itertools::peeking_take_while","value":"fn <F> (&mut self, accept: F) -> PeekingTakeWhile<Self, F>","parent":{"krate":0,"index":886},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that borrows from this iterator and\n takes items while the closure `accept` returns `true`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":928},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":35365,"byte_end":35379,"line_start":1074,"line_end":1074,"column_start":8,"column_end":22},"name":"take_while_ref","qualname":"::Itertools::take_while_ref","value":"fn <F> (&mut self, accept: F) -> TakeWhileRef<Self, F>","parent":{"krate":0,"index":886},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that borrows from a `Clone`-able iterator\n to only pick off elements while the predicate `accept` returns `true`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":930},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":36045,"byte_end":36055,"line_start":1095,"line_end":1095,"column_start":8,"column_end":18},"name":"while_some","qualname":"::Itertools::while_some","value":"fn <A> (self) -> WhileSome<Self>","parent":{"krate":0,"index":886},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that filters `Option<A>` iterator elements\n and produces `A`. Stops on the first `None` encountered.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":932},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":37486,"byte_end":37504,"line_start":1134,"line_end":1134,"column_start":8,"column_end":26},"name":"tuple_combinations","qualname":"::Itertools::tuple_combinations","value":"fn <T> (self) -> TupleCombinations<Self, T>","parent":{"krate":0,"index":886},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that iterates over the combinations of the\n elements from an iterator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":934},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":41916,"byte_end":41925,"line_start":1269,"line_end":1269,"column_start":8,"column_end":17},"name":"pad_using","qualname":"::Itertools::pad_using","value":"fn <F> (self, min: usize, f: F) -> PadUsing<Self, F>","parent":{"krate":0,"index":886},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that pads the sequence to a minimum length of\n `min` by filling missing elements using a closure `f`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":936},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":42850,"byte_end":42863,"line_start":1295,"line_end":1295,"column_start":8,"column_end":21},"name":"with_position","qualname":"::Itertools::with_position","value":"fn (self) -> WithPosition<Self>","parent":{"krate":0,"index":886},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that wraps each element in a `Position` to\n ease special-case handling of the first or last elements.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":937},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":43542,"byte_end":43551,"line_start":1314,"line_end":1314,"column_start":8,"column_end":17},"name":"positions","qualname":"::Itertools::positions","value":"fn <P> (self, predicate: P) -> Positions<Self, P>","parent":{"krate":0,"index":886},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that yields the indices of all elements\n satisfying a predicate, counted from the start of the iterator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":939},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":44104,"byte_end":44110,"line_start":1331,"line_end":1331,"column_start":8,"column_end":14},"name":"update","qualname":"::Itertools::update","value":"fn <F> (self, updater: F) -> Update<Self, F>","parent":{"krate":0,"index":886},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that applies a mutating function\n to each element before yielding it.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":941},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":44735,"byte_end":44745,"line_start":1352,"line_end":1352,"column_start":8,"column_end":18},"name":"next_tuple","qualname":"::Itertools::next_tuple","value":"fn <T> (&mut self) -> Option<T>","parent":{"krate":0,"index":886},"children":[],"decl_id":null,"docs":" Advances the iterator and returns the next items grouped in a tuple of\n a specific size (up to 4).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":943},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":45487,"byte_end":45500,"line_start":1377,"line_end":1377,"column_start":8,"column_end":21},"name":"collect_tuple","qualname":"::Itertools::collect_tuple","value":"fn <T> (mut self) -> Option<T>","parent":{"krate":0,"index":886},"children":[],"decl_id":null,"docs":" Collects all items from the iterator into a tuple of a specific size\n (up to 4).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":945},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":46181,"byte_end":46194,"line_start":1401,"line_end":1401,"column_start":8,"column_end":21},"name":"find_position","qualname":"::Itertools::find_position","value":"fn <P> (&mut self, mut pred: P) -> Option<(usize, Self::Item)>","parent":{"krate":0,"index":886},"children":[],"decl_id":null,"docs":" Find the position and value of the first element satisfying a predicate.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":947},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":47043,"byte_end":47052,"line_start":1430,"line_end":1430,"column_start":8,"column_end":17},"name":"all_equal","qualname":"::Itertools::all_equal","value":"fn (&mut self) -> bool","parent":{"krate":0,"index":886},"children":[],"decl_id":null,"docs":" Check whether all elements compare equal.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":949},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":47830,"byte_end":47838,"line_start":1455,"line_end":1455,"column_start":8,"column_end":16},"name":"dropping","qualname":"::Itertools::dropping","value":"fn (mut self, n: usize) -> Self","parent":{"krate":0,"index":886},"children":[],"decl_id":null,"docs":" Consume the first `n` elements from the iterator eagerly,\n and return the same iterator again.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":950},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":48531,"byte_end":48544,"line_start":1479,"line_end":1479,"column_start":8,"column_end":21},"name":"dropping_back","qualname":"::Itertools::dropping_back","value":"fn (mut self, n: usize) -> Self","parent":{"krate":0,"index":886},"children":[],"decl_id":null,"docs":" Consume the last `n` elements from the iterator eagerly,\n and return the same iterator again.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":951},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":49330,"byte_end":49337,"line_start":1507,"line_end":1507,"column_start":8,"column_end":15},"name":"foreach","qualname":"::Itertools::foreach","value":"fn <F> (self, f: F) -> ()","parent":{"krate":0,"index":886},"children":[],"decl_id":null,"docs":" Run the closure `f` eagerly on each element of the iterator.","sig":null,"attributes":[{"value":"deprecated(note = \"Use .for_each() instead\", since = \"0.8\")","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":49264,"byte_end":49322,"line_start":1506,"line_end":1506,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":953},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":49968,"byte_end":49974,"line_start":1527,"line_end":1527,"column_start":8,"column_end":14},"name":"concat","qualname":"::Itertools::concat","value":"fn (self) -> Self::Item","parent":{"krate":0,"index":886},"children":[],"decl_id":null,"docs":" Combine all an iterator's elements into one element by using `Extend`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":954},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":50930,"byte_end":50938,"line_start":1559,"line_end":1559,"column_start":8,"column_end":16},"name":"set_from","qualname":"::Itertools::set_from","value":"fn <'a, A, J> (&mut self, from: J) -> usize","parent":{"krate":0,"index":886},"children":[],"decl_id":null,"docs":" Assign to each reference in `self` from the `from` iterator,\n stopping at the shortest of the two iterators.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":50913,"byte_end":50922,"line_start":1558,"line_end":1558,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":958},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":52814,"byte_end":52820,"line_start":1619,"line_end":1619,"column_start":8,"column_end":14},"name":"format","qualname":"::Itertools::format","value":"fn (self, sep: &str) -> Format<Self>","parent":{"krate":0,"index":886},"children":[],"decl_id":null,"docs":" Format all iterator elements, separated by `sep`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":959},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":54298,"byte_end":54309,"line_start":1657,"line_end":1657,"column_start":8,"column_end":19},"name":"format_with","qualname":"::Itertools::format_with","value":"fn <F> (self, sep: &str, format: F) -> FormatWith<Self, F>","parent":{"krate":0,"index":886},"children":[],"decl_id":null,"docs":" Format all iterator elements, separated by `sep`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":961},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":56031,"byte_end":56043,"line_start":1706,"line_end":1706,"column_start":8,"column_end":20},"name":"fold_results","qualname":"::Itertools::fold_results","value":"fn <A, E, B, F> (&mut self, mut start: B, mut f: F) -> Result<B, E>","parent":{"krate":0,"index":886},"children":[],"decl_id":null,"docs":" Fold `Result` values from an iterator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":966},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":57200,"byte_end":57212,"line_start":1738,"line_end":1738,"column_start":8,"column_end":20},"name":"fold_options","qualname":"::Itertools::fold_options","value":"fn <A, B, F> (&mut self, mut start: B, mut f: F) -> Option<B>","parent":{"krate":0,"index":886},"children":[],"decl_id":null,"docs":" Fold `Option` values from an iterator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":970},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":58012,"byte_end":58017,"line_start":1763,"line_end":1763,"column_start":8,"column_end":13},"name":"fold1","qualname":"::Itertools::fold1","value":"fn <F> (mut self, f: F) -> Option<Self::Item>","parent":{"krate":0,"index":886},"children":[],"decl_id":null,"docs":" Accumulator of the elements in the iterator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":973},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":60005,"byte_end":60015,"line_start":1818,"line_end":1818,"column_start":8,"column_end":18},"name":"tree_fold1","qualname":"::Itertools::tree_fold1","value":"fn <F> (mut self, mut f: F) -> Option<Self::Item>","parent":{"krate":0,"index":886},"children":[],"decl_id":null,"docs":" Accumulate the elements in the iterator in a tree-like manner.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":985},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":63574,"byte_end":63584,"line_start":1917,"line_end":1917,"column_start":8,"column_end":18},"name":"fold_while","qualname":"::Itertools::fold_while","value":"fn <B, F> (&mut self, init: B, mut f: F) -> FoldWhile<B>","parent":{"krate":0,"index":886},"children":[],"decl_id":null,"docs":" An iterator method that applies a function, producing a single, final value.","sig":null,"attributes":[{"value":"deprecated(note = \"Use .try_fold() instead\", since = \"0.8\")","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":63508,"byte_end":63566,"line_start":1916,"line_end":1916,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":988},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":64651,"byte_end":64655,"line_start":1952,"line_end":1952,"column_start":8,"column_end":12},"name":"sum1","qualname":"::Itertools::sum1","value":"fn <S> (mut self) -> Option<S>","parent":{"krate":0,"index":886},"children":[],"decl_id":null,"docs":" Iterate over the entire iterator and add all the elements.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":991},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":65518,"byte_end":65526,"line_start":1980,"line_end":1980,"column_start":8,"column_end":16},"name":"product1","qualname":"::Itertools::product1","value":"fn <P> (mut self) -> Option<P>","parent":{"krate":0,"index":886},"children":[],"decl_id":null,"docs":" Iterate over the entire iterator and multiply all the elements.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":994},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":69781,"byte_end":69794,"line_start":2106,"line_end":2106,"column_start":8,"column_end":21},"name":"partition_map","qualname":"::Itertools::partition_map","value":"fn <A, B, F, L, R> (self, mut predicate: F) -> (A, B)","parent":{"krate":0,"index":886},"children":[],"decl_id":null,"docs":" Collect all iterator elements into one of two\n partitions. Unlike `Iterator::partition`, each partition may\n have a distinct type.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1001},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":72355,"byte_end":72361,"line_start":2180,"line_end":2180,"column_start":8,"column_end":14},"name":"minmax","qualname":"::Itertools::minmax","value":"fn (self) -> MinMaxResult<Self::Item>","parent":{"krate":0,"index":886},"children":[],"decl_id":null,"docs":" Return the minimum and maximum elements in the iterator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1004},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":73057,"byte_end":73070,"line_start":2197,"line_end":2197,"column_start":8,"column_end":21},"name":"minmax_by_key","qualname":"::Itertools::minmax_by_key","value":"fn <K, F> (self, key: F) -> MinMaxResult<Self::Item>","parent":{"krate":0,"index":886},"children":[],"decl_id":null,"docs":" Return the minimum and maximum element of an iterator, as determined by\n the specified function.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1008},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":73708,"byte_end":73717,"line_start":2211,"line_end":2211,"column_start":8,"column_end":17},"name":"minmax_by","qualname":"::Itertools::minmax_by","value":"fn <F> (self, mut compare: F) -> MinMaxResult<Self::Item>","parent":{"krate":0,"index":886},"children":[],"decl_id":null,"docs":" Return the minimum and maximum element of an iterator, as determined by\n the specified comparison function.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1012},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":74916,"byte_end":74927,"line_start":2238,"line_end":2238,"column_start":8,"column_end":19},"name":"exactly_one","qualname":"::Itertools::exactly_one","value":"fn (mut self) -> Result<Self::Item, ExactlyOneError<Self>>","parent":{"krate":0,"index":886},"children":[],"decl_id":null,"docs":" If the iterator yields exactly one element, that element will be returned, otherwise\n an error will be returned containing an iterator that has the same output as the input\n iterator.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1015},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":75914,"byte_end":75919,"line_start":2271,"line_end":2271,"column_start":8,"column_end":13},"name":"equal","qualname":"::equal","value":"fn <I, J> (a: I, b: J) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if both iterables produce equal sequences\n (elements pairwise equal and sequences of the same length),\n `false` otherwise.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1018},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":76739,"byte_end":76751,"line_start":2299,"line_end":2299,"column_start":8,"column_end":20},"name":"assert_equal","qualname":"::assert_equal","value":"fn <I, J> (a: I, b: J) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Assert that two iterables produce equal sequences, with the same\n semantics as *equal(a, b)*.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1021},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":77978,"byte_end":77987,"line_start":2341,"line_end":2341,"column_start":8,"column_end":17},"name":"partition","qualname":"::partition","value":"fn <'a, A, I, F> (iter: I, mut pred: F) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Partition a sequence using predicate `pred` so that elements\n that map to `true` are placed before elements which map to `false`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1891},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":78923,"byte_end":78931,"line_start":2371,"line_end":2371,"column_start":5,"column_end":13},"name":"Continue","qualname":"::FoldWhile::Continue","value":"FoldWhile::Continue(T)","parent":{"krate":0,"index":1889},"children":[],"decl_id":null,"docs":" Continue folding with this value\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1894},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":78992,"byte_end":78996,"line_start":2373,"line_end":2373,"column_start":5,"column_end":9},"name":"Done","qualname":"::FoldWhile::Done","value":"FoldWhile::Done(T)","parent":{"krate":0,"index":1889},"children":[],"decl_id":null,"docs":" Fold is complete and will return this value\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1889},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":78863,"byte_end":78872,"line_start":2369,"line_end":2369,"column_start":10,"column_end":19},"name":"FoldWhile","qualname":"::FoldWhile","value":"FoldWhile::{Continue, Done}","parent":null,"children":[{"krate":0,"index":1891},{"krate":0,"index":1894}],"decl_id":null,"docs":" An enum used for controlling the execution of `.fold_while()`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1028},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":79088,"byte_end":79098,"line_start":2378,"line_end":2378,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FoldWhile<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Return the value in the continue or done.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1029},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":79291,"byte_end":79298,"line_start":2385,"line_end":2385,"column_start":12,"column_end":19},"name":"is_done","qualname":"<FoldWhile<T>>::is_done","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if `self` is `Done`, false if it is `Continue`.\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":81495,"byte_end":81505,"line_start":63,"line_end":63,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":82916,"byte_end":82934,"line_start":119,"line_end":119,"column_start":25,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":85184,"byte_end":85191,"line_start":204,"line_end":204,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":85810,"byte_end":85817,"line_start":229,"line_end":229,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":87664,"byte_end":87671,"line_start":302,"line_end":302,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":129}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":90104,"byte_end":90112,"line_start":377,"line_end":377,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1092}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":90340,"byte_end":90348,"line_start":386,"line_end":386,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":91513,"byte_end":91517,"line_start":434,"line_end":434,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":92136,"byte_end":92140,"line_start":462,"line_end":462,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":92345,"byte_end":92353,"line_start":473,"line_end":473,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":93884,"byte_end":93891,"line_start":524,"line_end":524,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1107}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":94107,"byte_end":94108,"line_start":531,"line_end":531,"column_start":55,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":94584,"byte_end":94591,"line_start":551,"line_end":551,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":192}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":94865,"byte_end":94872,"line_start":563,"line_end":563,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":96000,"byte_end":96012,"line_start":607,"line_end":607,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":202},{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":97246,"byte_end":97254,"line_start":649,"line_end":649,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":213}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":97423,"byte_end":97431,"line_start":658,"line_end":658,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1118}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":97818,"byte_end":97826,"line_start":678,"line_end":678,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":98796,"byte_end":98803,"line_start":711,"line_end":711,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":98935,"byte_end":98936,"line_start":717,"line_end":717,"column_start":55,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":99241,"byte_end":99248,"line_start":728,"line_end":728,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":246}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":99817,"byte_end":99824,"line_start":757,"line_end":757,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1123}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":99969,"byte_end":99976,"line_start":764,"line_end":764,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":261},{"krate":0,"index":262}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":101379,"byte_end":101391,"line_start":811,"line_end":811,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1124}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":101728,"byte_end":101740,"line_start":824,"line_end":824,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":285}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":102839,"byte_end":102848,"line_start":866,"line_end":866,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":104157,"byte_end":104174,"line_start":917,"line_end":917,"column_start":25,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":303},{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":104426,"byte_end":104443,"line_start":933,"line_end":933,"column_start":21,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":104561,"byte_end":104578,"line_start":939,"line_end":939,"column_start":32,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":310},{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":107338,"byte_end":107345,"line_start":1031,"line_end":1031,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":331},{"krate":0,"index":332}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":107860,"byte_end":107867,"line_start":1054,"line_end":1054,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":339}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":108106,"byte_end":108113,"line_start":1065,"line_end":1065,"column_start":34,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":108756,"byte_end":108766,"line_start":1091,"line_end":1091,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":369}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":110057,"byte_end":110066,"line_start":1142,"line_end":1142,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":110555,"byte_end":110564,"line_start":1164,"line_end":1164,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":111402,"byte_end":111408,"line_start":1196,"line_end":1196,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":409}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":112274,"byte_end":112280,"line_start":1232,"line_end":1232,"column_start":34,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":112386,"byte_end":112392,"line_start":1238,"line_end":1238,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":418}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/either_or_both.rs","byte_start":119275,"byte_end":119287,"line_start":16,"line_end":16,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":436},{"krate":0,"index":439},{"krate":0,"index":442},{"krate":0,"index":447},{"krate":0,"index":450}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/either_or_both.rs","byte_start":123900,"byte_end":123912,"line_start":168,"line_end":168,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":455}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/either_or_both.rs","byte_start":124275,"byte_end":124287,"line_start":182,"line_end":182,"column_start":43,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":460}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/cons_tuples_impl.rs","byte_start":132278,"byte_end":132288,"line_start":52,"line_end":52,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":512}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/exactly_one_err.rs","byte_start":133314,"byte_end":133329,"line_start":22,"line_end":22,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":521}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/exactly_one_err.rs","byte_start":133559,"byte_end":133574,"line_start":32,"line_end":32,"column_start":22,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":524},{"krate":0,"index":525},{"krate":0,"index":528}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/exactly_one_err.rs","byte_start":134196,"byte_end":134211,"line_start":58,"line_end":58,"column_start":31,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/format.rs","byte_start":138306,"byte_end":138316,"line_start":49,"line_end":49,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":575}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/format.rs","byte_start":139065,"byte_end":139071,"line_start":73,"line_end":73,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":579}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/intersperse.rs","byte_start":141040,"byte_end":141051,"line_start":35,"line_end":35,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":589},{"krate":0,"index":590},{"krate":0,"index":591},{"krate":0,"index":592}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/merge_join.rs","byte_start":143311,"byte_end":143322,"line_start":34,"line_end":34,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1487}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/merge_join.rs","byte_start":143547,"byte_end":143558,"line_start":43,"line_end":43,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":623},{"krate":0,"index":624},{"krate":0,"index":625}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/minmax.rs","byte_start":145431,"byte_end":145443,"line_start":17,"line_end":17,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":629}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/pad_tail.rs","byte_start":149628,"byte_end":149636,"line_start":32,"line_end":32,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":644},{"krate":0,"index":645},{"krate":0,"index":646}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/pad_tail.rs","byte_start":150399,"byte_end":150407,"line_start":63,"line_end":63,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":650}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/pad_tail.rs","byte_start":150864,"byte_end":150872,"line_start":80,"line_end":80,"column_start":34,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/peeking_take_while.rs","byte_start":151768,"byte_end":151776,"line_start":23,"line_end":23,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":662}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/peeking_take_while.rs","byte_start":152096,"byte_end":152103,"line_start":38,"line_end":38,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":666}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/peeking_take_while.rs","byte_start":153483,"byte_end":153499,"line_start":97,"line_end":97,"column_start":29,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":681},{"krate":0,"index":682},{"krate":0,"index":683}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/process_results_impl.rs","byte_start":155780,"byte_end":155794,"line_start":14,"line_end":14,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":691},{"krate":0,"index":692},{"krate":0,"index":693}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/repeatn.rs","byte_start":158504,"byte_end":158511,"line_start":23,"line_end":23,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":706},{"krate":0,"index":707},{"krate":0,"index":708}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/repeatn.rs","byte_start":158901,"byte_end":158908,"line_start":43,"line_end":43,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":711}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/repeatn.rs","byte_start":159058,"byte_end":159065,"line_start":52,"line_end":52,"column_start":31,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/sources.rs","byte_start":162050,"byte_end":162060,"line_start":14,"line_end":14,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1577}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/sources.rs","byte_start":162899,"byte_end":162909,"line_start":48,"line_end":48,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":742},{"krate":0,"index":743},{"krate":0,"index":744}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/sources.rs","byte_start":164578,"byte_end":164584,"line_start":109,"line_end":109,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1578}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/sources.rs","byte_start":164971,"byte_end":164977,"line_start":124,"line_end":124,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":756},{"krate":0,"index":757},{"krate":0,"index":758}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/sources.rs","byte_start":165666,"byte_end":165673,"line_start":153,"line_end":153,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1597}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/sources.rs","byte_start":165776,"byte_end":165783,"line_start":159,"line_end":159,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":765},{"krate":0,"index":766},{"krate":0,"index":767}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/tuple_impl.rs","byte_start":166875,"byte_end":166886,"line_start":17,"line_end":17,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":775}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/tuple_impl.rs","byte_start":167059,"byte_end":167070,"line_start":28,"line_end":28,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":778},{"krate":0,"index":779},{"krate":0,"index":780}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/tuple_impl.rs","byte_start":167736,"byte_end":167747,"line_start":56,"line_end":56,"column_start":31,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/tuple_impl.rs","byte_start":168396,"byte_end":168402,"line_start":84,"line_end":84,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":795},{"krate":0,"index":796}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/tuple_impl.rs","byte_start":168614,"byte_end":168620,"line_start":95,"line_end":95,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":800}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/tuple_impl.rs","byte_start":170227,"byte_end":170239,"line_start":153,"line_end":153,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":808},{"krate":0,"index":809}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/with_position.rs","byte_start":174713,"byte_end":174721,"line_start":42,"line_end":42,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":832}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/with_position.rs","byte_start":175000,"byte_end":175012,"line_start":54,"line_end":54,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":835},{"krate":0,"index":836},{"krate":0,"index":837}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/with_position.rs","byte_start":176248,"byte_end":176260,"line_start":88,"line_end":88,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/zip_eq_impl.rs","byte_start":177178,"byte_end":177183,"line_start":37,"line_end":37,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":848},{"krate":0,"index":849},{"krate":0,"index":850}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/zip_eq_impl.rs","byte_start":177761,"byte_end":177766,"line_start":57,"line_end":57,"column_start":34,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/zip_longest.rs","byte_start":178688,"byte_end":178698,"line_start":33,"line_end":33,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":868},{"krate":0,"index":869},{"krate":0,"index":870}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/zip_longest.rs","byte_start":179320,"byte_end":179330,"line_start":55,"line_end":55,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":874}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/zip_longest.rs","byte_start":180151,"byte_end":180161,"line_start":75,"line_end":75,"column_start":34,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":75492,"byte_end":75493,"line_start":2258,"line_end":2258,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":79012,"byte_end":79021,"line_start":2376,"line_end":2376,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1028},{"krate":0,"index":1029}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":4473,"byte_end":4477,"line_start":160,"line_end":160,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":462}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":81495,"byte_end":81505,"line_start":63,"line_end":63,"column_start":25,"column_end":35},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1030},"to":{"krate":1,"index":3599}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":82916,"byte_end":82934,"line_start":119,"line_end":119,"column_start":25,"column_end":43},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1044},"to":{"krate":1,"index":3599}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":85184,"byte_end":85191,"line_start":204,"line_end":204,"column_start":9,"column_end":16},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1058},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":85810,"byte_end":85817,"line_start":229,"line_end":229,"column_start":22,"column_end":29},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1058},"to":{"krate":1,"index":3599}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":87664,"byte_end":87671,"line_start":302,"line_end":302,"column_start":25,"column_end":32},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1068},"to":{"krate":1,"index":3599}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":90104,"byte_end":90112,"line_start":377,"line_end":377,"column_start":27,"column_end":35},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1083},"to":{"krate":1,"index":7570}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":90340,"byte_end":90348,"line_start":386,"line_end":386,"column_start":28,"column_end":36},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1083},"to":{"krate":1,"index":3599}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":91513,"byte_end":91517,"line_start":434,"line_end":434,"column_start":22,"column_end":26},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1093},"to":{"krate":1,"index":3599}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":92136,"byte_end":92140,"line_start":462,"line_end":462,"column_start":31,"column_end":35},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1093},"to":{"krate":1,"index":3885}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":92345,"byte_end":92353,"line_start":473,"line_end":473,"column_start":43,"column_end":51},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1103},"to":{"krate":0,"index":156}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":93884,"byte_end":93891,"line_start":524,"line_end":524,"column_start":30,"column_end":37},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":168},"to":{"krate":1,"index":7570}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":94107,"byte_end":94108,"line_start":531,"line_end":531,"column_start":55,"column_end":56},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":182},"to":{"krate":0,"index":156}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":94584,"byte_end":94591,"line_start":551,"line_end":551,"column_start":25,"column_end":32},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":168},"to":{"krate":1,"index":2182}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":94865,"byte_end":94872,"line_start":563,"line_end":563,"column_start":28,"column_end":35},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":168},"to":{"krate":1,"index":3599}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":96000,"byte_end":96012,"line_start":607,"line_end":607,"column_start":9,"column_end":21},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1108},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":97246,"byte_end":97254,"line_start":649,"line_end":649,"column_start":36,"column_end":44},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":205},"to":{"krate":1,"index":2182}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":97423,"byte_end":97431,"line_start":658,"line_end":658,"column_start":27,"column_end":35},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":205},"to":{"krate":1,"index":7570}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":97818,"byte_end":97826,"line_start":678,"line_end":678,"column_start":25,"column_end":33},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":205},"to":{"krate":1,"index":3599}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":98796,"byte_end":98803,"line_start":711,"line_end":711,"column_start":42,"column_end":49},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1119},"to":{"krate":0,"index":231}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":98935,"byte_end":98936,"line_start":717,"line_end":717,"column_start":55,"column_end":56},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":239},"to":{"krate":0,"index":231}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":99241,"byte_end":99248,"line_start":728,"line_end":728,"column_start":39,"column_end":46},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":226},"to":{"krate":1,"index":2182}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":99817,"byte_end":99824,"line_start":757,"line_end":757,"column_start":30,"column_end":37},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":226},"to":{"krate":1,"index":7570}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":99969,"byte_end":99976,"line_start":764,"line_end":764,"column_start":28,"column_end":35},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":226},"to":{"krate":1,"index":3599}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":101379,"byte_end":101391,"line_start":811,"line_end":811,"column_start":31,"column_end":43},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":266},"to":{"krate":1,"index":7570}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":101728,"byte_end":101740,"line_start":824,"line_end":824,"column_start":29,"column_end":41},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":266},"to":{"krate":1,"index":3599}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":102839,"byte_end":102848,"line_start":866,"line_end":866,"column_start":25,"column_end":34},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1125},"to":{"krate":1,"index":3599}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":103718,"byte_end":103723,"line_start":900,"line_end":900,"column_start":30,"column_end":35},"kind":"SuperTrait","from":{"krate":1,"index":1540},"to":{"krate":0,"index":294}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":104157,"byte_end":104174,"line_start":917,"line_end":917,"column_start":25,"column_end":42},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1134},"to":{"krate":1,"index":3599}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":104426,"byte_end":104443,"line_start":933,"line_end":933,"column_start":21,"column_end":38},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1144},"to":{"krate":1,"index":2224}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":104561,"byte_end":104578,"line_start":939,"line_end":939,"column_start":32,"column_end":49},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1144},"to":{"krate":1,"index":3599}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":107338,"byte_end":107345,"line_start":1031,"line_end":1031,"column_start":25,"column_end":32},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":317},"to":{"krate":1,"index":3599}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":107860,"byte_end":107867,"line_start":1054,"line_end":1054,"column_start":36,"column_end":43},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":317},"to":{"krate":1,"index":3856}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":108106,"byte_end":108113,"line_start":1065,"line_end":1065,"column_start":34,"column_end":41},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":317},"to":{"krate":1,"index":3885}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":108756,"byte_end":108766,"line_start":1091,"line_end":1091,"column_start":34,"column_end":44},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":344},"to":{"krate":1,"index":3599}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":110057,"byte_end":110066,"line_start":1142,"line_end":1142,"column_start":25,"column_end":34},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":372},"to":{"krate":1,"index":3599}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":110555,"byte_end":110564,"line_start":1164,"line_end":1164,"column_start":36,"column_end":45},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":372},"to":{"krate":1,"index":3856}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":111402,"byte_end":111408,"line_start":1196,"line_end":1196,"column_start":25,"column_end":31},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":391},"to":{"krate":1,"index":3599}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":112274,"byte_end":112280,"line_start":1232,"line_end":1232,"column_start":34,"column_end":40},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":391},"to":{"krate":1,"index":3885}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/adaptors/mod.rs","byte_start":112386,"byte_end":112392,"line_start":1238,"line_end":1238,"column_start":36,"column_end":42},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":391},"to":{"krate":1,"index":3856}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/either_or_both.rs","byte_start":119275,"byte_end":119287,"line_start":16,"line_end":16,"column_start":12,"column_end":24},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1225},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/either_or_both.rs","byte_start":123900,"byte_end":123912,"line_start":168,"line_end":168,"column_start":9,"column_end":21},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1225},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/either_or_both.rs","byte_start":124275,"byte_end":124287,"line_start":182,"line_end":182,"column_start":43,"column_end":55},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1225},"to":{"krate":1,"index":2221}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/cons_tuples_impl.rs","byte_start":132278,"byte_end":132288,"line_start":52,"line_end":52,"column_start":22,"column_end":32},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1411},"to":{"krate":1,"index":2182}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/exactly_one_err.rs","byte_start":133314,"byte_end":133329,"line_start":22,"line_end":22,"column_start":9,"column_end":24},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1419},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/exactly_one_err.rs","byte_start":133559,"byte_end":133574,"line_start":32,"line_end":32,"column_start":22,"column_end":37},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1419},"to":{"krate":1,"index":3599}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/exactly_one_err.rs","byte_start":134196,"byte_end":134211,"line_start":58,"line_end":58,"column_start":31,"column_end":46},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1419},"to":{"krate":1,"index":3885}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/format.rs","byte_start":138306,"byte_end":138316,"line_start":49,"line_end":49,"column_start":33,"column_end":43},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":558},"to":{"krate":1,"index":7575}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/format.rs","byte_start":139065,"byte_end":139071,"line_start":73,"line_end":73,"column_start":13,"column_end":19},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1429},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/intersperse.rs","byte_start":141040,"byte_end":141051,"line_start":35,"line_end":35,"column_start":22,"column_end":33},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1476},"to":{"krate":1,"index":3599}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/merge_join.rs","byte_start":143311,"byte_end":143322,"line_start":34,"line_end":34,"column_start":30,"column_end":41},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":608},"to":{"krate":1,"index":7570}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/merge_join.rs","byte_start":143547,"byte_end":143558,"line_start":43,"line_end":43,"column_start":28,"column_end":39},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":608},"to":{"krate":1,"index":3599}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/minmax.rs","byte_start":145431,"byte_end":145443,"line_start":17,"line_end":17,"column_start":16,"column_end":28},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1488},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/pad_tail.rs","byte_start":149628,"byte_end":149636,"line_start":32,"line_end":32,"column_start":25,"column_end":33},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1513},"to":{"krate":1,"index":3599}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/pad_tail.rs","byte_start":150399,"byte_end":150407,"line_start":63,"line_end":63,"column_start":36,"column_end":44},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1513},"to":{"krate":1,"index":3856}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/pad_tail.rs","byte_start":150864,"byte_end":150872,"line_start":80,"line_end":80,"column_start":34,"column_end":42},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1513},"to":{"krate":1,"index":3885}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/peeking_take_while.rs","byte_start":151454,"byte_end":151462,"line_start":15,"line_end":15,"column_start":25,"column_end":33},"kind":"SuperTrait","from":{"krate":1,"index":3599},"to":{"krate":0,"index":657}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/peeking_take_while.rs","byte_start":151768,"byte_end":151776,"line_start":23,"line_end":23,"column_start":25,"column_end":33},"kind":{"Impl":{"id":54}},"from":{"krate":1,"index":29209},"to":{"krate":0,"index":657}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/peeking_take_while.rs","byte_start":152096,"byte_end":152103,"line_start":38,"line_end":38,"column_start":25,"column_end":32},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1058},"to":{"krate":0,"index":657}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/peeking_take_while.rs","byte_start":153483,"byte_end":153499,"line_start":97,"line_end":97,"column_start":29,"column_end":45},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":668},"to":{"krate":1,"index":3599}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/process_results_impl.rs","byte_start":155780,"byte_end":155794,"line_start":14,"line_end":14,"column_start":32,"column_end":46},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1559},"to":{"krate":1,"index":3599}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/repeatn.rs","byte_start":158504,"byte_end":158511,"line_start":23,"line_end":23,"column_start":22,"column_end":29},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1570},"to":{"krate":1,"index":3599}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/repeatn.rs","byte_start":158901,"byte_end":158908,"line_start":43,"line_end":43,"column_start":33,"column_end":40},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1570},"to":{"krate":1,"index":3856}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/repeatn.rs","byte_start":159058,"byte_end":159065,"line_start":52,"line_end":52,"column_start":31,"column_end":38},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1570},"to":{"krate":1,"index":3885}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/sources.rs","byte_start":162050,"byte_end":162060,"line_start":14,"line_end":14,"column_start":24,"column_end":34},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":731},"to":{"krate":1,"index":7570}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/sources.rs","byte_start":162899,"byte_end":162909,"line_start":48,"line_end":48,"column_start":25,"column_end":35},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":731},"to":{"krate":1,"index":3599}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/sources.rs","byte_start":164578,"byte_end":164584,"line_start":109,"line_end":109,"column_start":28,"column_end":34},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1579},"to":{"krate":1,"index":7570}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/sources.rs","byte_start":164971,"byte_end":164977,"line_start":124,"line_end":124,"column_start":29,"column_end":35},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1579},"to":{"krate":1,"index":3599}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/sources.rs","byte_start":165666,"byte_end":165673,"line_start":153,"line_end":153,"column_start":28,"column_end":35},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1588},"to":{"krate":1,"index":7570}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/sources.rs","byte_start":165776,"byte_end":165783,"line_start":159,"line_end":159,"column_start":26,"column_end":33},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1588},"to":{"krate":1,"index":3599}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/tuple_impl.rs","byte_start":166875,"byte_end":166886,"line_start":17,"line_end":17,"column_start":9,"column_end":20},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1598},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/tuple_impl.rs","byte_start":167059,"byte_end":167070,"line_start":28,"line_end":28,"column_start":22,"column_end":33},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1598},"to":{"krate":1,"index":3599}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/tuple_impl.rs","byte_start":167736,"byte_end":167747,"line_start":56,"line_end":56,"column_start":31,"column_end":42},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1598},"to":{"krate":1,"index":3885}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/tuple_impl.rs","byte_start":168396,"byte_end":168402,"line_start":84,"line_end":84,"column_start":25,"column_end":31},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":784},"to":{"krate":1,"index":3599}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/tuple_impl.rs","byte_start":168614,"byte_end":168620,"line_start":95,"line_end":95,"column_start":12,"column_end":18},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":784},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/tuple_impl.rs","byte_start":170227,"byte_end":170239,"line_start":153,"line_end":153,"column_start":25,"column_end":37},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1605},"to":{"krate":1,"index":3599}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/tuple_impl.rs","byte_start":170765,"byte_end":170770,"line_start":174,"line_end":174,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":1,"index":1540},"to":{"krate":0,"index":810}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/with_position.rs","byte_start":174713,"byte_end":174721,"line_start":42,"line_end":42,"column_start":9,"column_end":17},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1662},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/with_position.rs","byte_start":175000,"byte_end":175012,"line_start":54,"line_end":54,"column_start":32,"column_end":44},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":824},"to":{"krate":1,"index":3599}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/with_position.rs","byte_start":176248,"byte_end":176260,"line_start":88,"line_end":88,"column_start":31,"column_end":43},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":824},"to":{"krate":1,"index":3885}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/zip_eq_impl.rs","byte_start":177178,"byte_end":177183,"line_start":37,"line_end":37,"column_start":25,"column_end":30},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1690},"to":{"krate":1,"index":3599}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/zip_eq_impl.rs","byte_start":177761,"byte_end":177766,"line_start":57,"line_end":57,"column_start":34,"column_end":39},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1690},"to":{"krate":1,"index":3885}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/zip_longest.rs","byte_start":178688,"byte_end":178698,"line_start":33,"line_end":33,"column_start":25,"column_end":35},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1703},"to":{"krate":1,"index":3599}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/zip_longest.rs","byte_start":179320,"byte_end":179330,"line_start":55,"line_end":55,"column_start":36,"column_end":46},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1703},"to":{"krate":1,"index":3856}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/zip_longest.rs","byte_start":180151,"byte_end":180161,"line_start":75,"line_end":75,"column_start":34,"column_end":44},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1703},"to":{"krate":1,"index":3885}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":9829,"byte_end":9837,"line_start":344,"line_end":344,"column_start":23,"column_end":31},"kind":"SuperTrait","from":{"krate":1,"index":3599},"to":{"krate":0,"index":886}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":75492,"byte_end":75493,"line_start":2258,"line_end":2258,"column_start":31,"column_end":32},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1014},"to":{"krate":0,"index":886}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.8.2/src/lib.rs","byte_start":79012,"byte_end":79021,"line_start":2376,"line_end":2376,"column_start":9,"column_end":18},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1889},"to":{"krate":4294967295,"index":4294967295}}]}