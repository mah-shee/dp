{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0","program":"/Users/masatoshi/.rustup/toolchains/nightly-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","whiteread","/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=26c982e2edab6ada","-C","extra-filename=-26c982e2edab6ada","--out-dir","/Users/masatoshi/Documents/atcoder/dp/target/rls/debug/deps","-L","dependency=/Users/masatoshi/Documents/atcoder/dp/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/Users/masatoshi/.rustup/toolchains/nightly-x86_64-apple-darwin"],"output":"/Users/masatoshi/Documents/atcoder/dp/target/rls/debug/deps/libwhiteread-26c982e2edab6ada.rmeta"},"prelude":{"crate_id":{"name":"whiteread","disambiguator":[1735712388323314587,16087211181449611448]},"crate_root":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src","external_crates":[{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[10613055454315904869,2811732849881954636]}},{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[391827052702496084,5129134181362070381]}},{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[4281604570573728273,9331809846264551407]}},{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[16197749903097291620,17943825029647261869]}},{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[10845582213263607778,379097389567409069]}},{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[844407882680543608,18229321760257986125]}},{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[3570085749873741306,6541745440181859048]}},{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[2578273522758280898,17913597462815022013]}},{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[735647405049555546,6998326938186734761]}},{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[10449409484459928313,13344031615333270257]}},{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[886225832632004317,14255593997978316403]}},{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[2255118238040761479,18238811431415079153]}},{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[16030725988839514509,13221492198480567872]}},{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[4378005683902666456,14285554179360740773]}}],"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":52,"byte_end":4247,"line_start":2,"line_end":150,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":33},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":1261,"byte_end":1271,"line_start":48,"line_end":48,"column_start":23,"column_end":33},"alias_span":null,"name":"FromStream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":116},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":1331,"byte_end":1337,"line_start":53,"line_end":53,"column_start":23,"column_end":29},"alias_span":null,"name":"Reader","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":52,"byte_end":4247,"line_start":2,"line_end":150,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":104},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":210},{"krate":0,"index":212},{"krate":0,"index":214}],"decl_id":null,"docs":" Crate for reading whitespace-separated values.","sig":null,"attributes":[{"value":"allow(bare_trait_objects)","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":52,"byte_end":81,"line_start":2,"line_end":2,"column_start":1,"column_end":30}}]},{"kind":"Mod","id":{"krate":0,"index":5},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","parent":null,"children":[{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":17},{"krate":0,"index":22},{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":31},{"krate":0,"index":33},{"krate":0,"index":37},{"krate":0,"index":217},{"krate":0,"index":222},{"krate":0,"index":224},{"krate":0,"index":235},{"krate":0,"index":39},{"krate":0,"index":46},{"krate":0,"index":48},{"krate":0,"index":51},{"krate":0,"index":54},{"krate":0,"index":56},{"krate":0,"index":58},{"krate":0,"index":61},{"krate":0,"index":237},{"krate":0,"index":241},{"krate":0,"index":245},{"krate":0,"index":249},{"krate":0,"index":253},{"krate":0,"index":257},{"krate":0,"index":261},{"krate":0,"index":265},{"krate":0,"index":269},{"krate":0,"index":273},{"krate":0,"index":277},{"krate":0,"index":281},{"krate":0,"index":285},{"krate":0,"index":289},{"krate":0,"index":62},{"krate":0,"index":66},{"krate":0,"index":69},{"krate":0,"index":293},{"krate":0,"index":297},{"krate":0,"index":302},{"krate":0,"index":308},{"krate":0,"index":315},{"krate":0,"index":323},{"krate":0,"index":70},{"krate":0,"index":74}],"decl_id":null,"docs":" This module defines the [`StrStream`] and [`FromStream`] traits","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":8},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":4592,"byte_end":4601,"line_start":10,"line_end":10,"column_start":11,"column_end":20},"name":"StrStream","qualname":"::stream::StrStream","value":"StrStream","parent":null,"children":[{"krate":0,"index":9}],"decl_id":null,"docs":" A streaming iterator yielding borrowed strings.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":4611,"byte_end":4615,"line_start":11,"line_end":11,"column_start":8,"column_end":12},"name":"next","qualname":"::stream::StrStream::next","value":"fn (&mut self) -> io::Result<Option<&str>>","parent":{"krate":0,"index":8},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":5139,"byte_end":5159,"line_start":24,"line_end":24,"column_start":12,"column_end":32},"name":"SplitAsciiWhitespace","qualname":"::stream::SplitAsciiWhitespace","value":"SplitAsciiWhitespace {  }","parent":null,"children":[{"krate":0,"index":15},{"krate":0,"index":16}],"decl_id":null,"docs":" Fast version of [`std::str::SplitWhitespace`], but with some drawbacks.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":19},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":5253,"byte_end":5256,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<SplitAsciiWhitespace>::new","value":"fn (s: &'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":20},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":5336,"byte_end":5344,"line_start":32,"line_end":32,"column_start":12,"column_end":20},"name":"position","qualname":"<SplitAsciiWhitespace>::position","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":5391,"byte_end":5401,"line_start":34,"line_end":34,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<SplitAsciiWhitespace>::from_parts","value":"fn (s: &'a str, position: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":29},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":6401,"byte_end":6407,"line_start":75,"line_end":75,"column_start":11,"column_end":17},"name":"StrExt","qualname":"::stream::StrExt","value":"StrExt","parent":null,"children":[{"krate":0,"index":30}],"decl_id":null,"docs":" Extends a `str` with `split_ascii_whitespace` method.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":6417,"byte_end":6439,"line_start":76,"line_end":76,"column_start":8,"column_end":30},"name":"split_ascii_whitespace","qualname":"::stream::StrExt::split_ascii_whitespace","value":"fn (&self) -> SplitAsciiWhitespace","parent":{"krate":0,"index":29},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":33},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":8265,"byte_end":8275,"line_start":130,"line_end":130,"column_start":11,"column_end":21},"name":"FromStream","qualname":"::stream::FromStream","value":"FromStream: Sized","parent":null,"children":[{"krate":0,"index":34},{"krate":0,"index":36}],"decl_id":null,"docs":" Trait for values that can be parsed from stream of whitespace-separated words.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":8343,"byte_end":8347,"line_start":132,"line_end":132,"column_start":8,"column_end":12},"name":"read","qualname":"::stream::FromStream::read","value":"fn <I> (it: &mut I) -> Result<Self>","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" Reads a value from a str-producing stream.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":36},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":8851,"byte_end":8870,"line_start":141,"line_end":141,"column_start":11,"column_end":30},"name":"REQUEST_CHEAP_ERROR","qualname":"::stream::FromStream::REQUEST_CHEAP_ERROR","value":"bool","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" Whether a function returning this type should produce cheap errors instead of\n pretty-printed ones.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":37},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":8898,"byte_end":8904,"line_start":144,"line_end":144,"column_start":10,"column_end":16},"name":"Result","qualname":"::stream::Result","value":"::std::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":218},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":9093,"byte_end":9100,"line_start":150,"line_end":150,"column_start":5,"column_end":12},"name":"Nothing","qualname":"::stream::Progress::Nothing","value":"Progress::Nothing","parent":{"krate":0,"index":217},"children":[],"decl_id":null,"docs":" The stream didn't contain any data\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":220},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":9157,"byte_end":9164,"line_start":153,"line_end":153,"column_start":5,"column_end":12},"name":"Partial","qualname":"::stream::Progress::Partial","value":"Progress::Partial","parent":{"krate":0,"index":217},"children":[],"decl_id":null,"docs":" The stream ended in the middle of parsing\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":217},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":9035,"byte_end":9043,"line_start":148,"line_end":148,"column_start":10,"column_end":18},"name":"Progress","qualname":"::stream::Progress","value":"Progress::{Nothing, Partial}","parent":null,"children":[{"krate":0,"index":218},{"krate":0,"index":220}],"decl_id":null,"docs":" Specifies the flavour of [`TooShort`](Error::TooShort) error\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":225},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":9932,"byte_end":9940,"line_start":175,"line_end":175,"column_start":5,"column_end":13},"name":"TooShort","qualname":"::stream::Error::TooShort","value":"Error::TooShort(Progress)","parent":{"krate":0,"index":224},"children":[],"decl_id":null,"docs":" There was not enough input to parse a value.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":228},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":9995,"byte_end":10004,"line_start":178,"line_end":178,"column_start":5,"column_end":14},"name":"Leftovers","qualname":"::stream::Error::Leftovers","value":"Error::Leftovers","parent":{"krate":0,"index":224},"children":[],"decl_id":null,"docs":" Excessive input was provided.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":230},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":10069,"byte_end":10079,"line_start":181,"line_end":181,"column_start":5,"column_end":15},"name":"ParseError","qualname":"::stream::Error::ParseError","value":"Error::ParseError","parent":{"krate":0,"index":224},"children":[],"decl_id":null,"docs":" Parse error occured (data was in invalid format).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":232},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":10112,"byte_end":10119,"line_start":184,"line_end":184,"column_start":5,"column_end":12},"name":"IoError","qualname":"::stream::Error::IoError","value":"Error::IoError(io::Error)","parent":{"krate":0,"index":224},"children":[],"decl_id":null,"docs":" IO Error occured.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":224},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":9867,"byte_end":9872,"line_start":173,"line_end":173,"column_start":10,"column_end":15},"name":"Error","qualname":"::stream::Error","value":"Error::{TooShort, Leftovers, ParseError, IoError}","parent":null,"children":[{"krate":0,"index":225},{"krate":0,"index":228},{"krate":0,"index":230},{"krate":0,"index":232}],"decl_id":null,"docs":" Error which can occur while parsing [`FromStream`] object.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":10248,"byte_end":10260,"line_start":190,"line_end":190,"column_start":12,"column_end":24},"name":"is_too_short","qualname":"<Error>::is_too_short","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if error variant is [`TooShort`](Error::TooShort)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":10507,"byte_end":10517,"line_start":199,"line_end":199,"column_start":12,"column_end":22},"name":"is_nothing","qualname":"<Error>::is_nothing","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if error variant is [`Nothing`](Progress::Nothing) flavour\n of [`TooShort`](Error::TooShort)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":10780,"byte_end":10790,"line_start":208,"line_end":208,"column_start":12,"column_end":22},"name":"is_partial","qualname":"<Error>::is_partial","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if error variant is [`Partial`](Progress::Partial) flavour\n of [`TooShort`](Error::TooShort)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":11005,"byte_end":11017,"line_start":216,"line_end":216,"column_start":12,"column_end":24},"name":"is_leftovers","qualname":"<Error>::is_leftovers","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if error variant is [`Leftovers`](Error::Leftovers)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":11216,"byte_end":11230,"line_start":224,"line_end":224,"column_start":12,"column_end":26},"name":"is_parse_error","qualname":"<Error>::is_parse_error","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if error variant is [`ParseError`](Error::ParseError)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":11424,"byte_end":11435,"line_start":232,"line_end":232,"column_start":12,"column_end":23},"name":"is_io_error","qualname":"<Error>::is_io_error","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if error variant is [`IoError`](Error::IoError)\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":79},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"adapters","qualname":"::adapters","value":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","parent":null,"children":[{"krate":0,"index":80},{"krate":0,"index":332},{"krate":0,"index":342},{"krate":0,"index":340},{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":85},{"krate":0,"index":344},{"krate":0,"index":354},{"krate":0,"index":352},{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":88},{"krate":0,"index":356},{"krate":0,"index":374},{"krate":0,"index":371},{"krate":0,"index":366},{"krate":0,"index":368},{"krate":0,"index":360},{"krate":0,"index":362},{"krate":0,"index":91},{"krate":0,"index":377},{"krate":0,"index":384},{"krate":0,"index":381},{"krate":0,"index":95},{"krate":0,"index":387},{"krate":0,"index":394},{"krate":0,"index":391},{"krate":0,"index":99}],"decl_id":null,"docs":" This module defines adapters for [`FromStream`] trait.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":332},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":17271,"byte_end":17275,"line_start":39,"line_end":39,"column_start":12,"column_end":16},"name":"Skip","qualname":"::adapters::Skip","value":"","parent":null,"children":[],"decl_id":null,"docs":" Used to consume and ignore one whitespace-separated value","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":344},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":18319,"byte_end":18326,"line_start":77,"line_end":77,"column_start":12,"column_end":19},"name":"SkipAll","qualname":"::adapters::SkipAll","value":"","parent":null,"children":[],"decl_id":null,"docs":" Used to ignore everything till the end of the reader","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":356},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":18946,"byte_end":18954,"line_start":99,"line_end":99,"column_start":12,"column_end":20},"name":"Lengthed","qualname":"::adapters::Lengthed","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper for reading vector of values represented by a list prepended by a number of elements.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":377},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":20205,"byte_end":20211,"line_start":138,"line_end":138,"column_start":12,"column_end":18},"name":"Zeroed","qualname":"::adapters::Zeroed","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper for reading vector of numbers represented by a list ending with 0.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":387},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":21639,"byte_end":21653,"line_start":180,"line_end":180,"column_start":12,"column_end":26},"name":"WithCheapError","qualname":"::adapters::WithCheapError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Hints the parsing function not to render errors","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":104},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"reader","qualname":"::reader","value":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","parent":null,"children":[{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":122},{"krate":0,"index":126},{"krate":0,"index":129},{"krate":0,"index":131},{"krate":0,"index":133},{"krate":0,"index":136},{"krate":0,"index":146},{"krate":0,"index":158},{"krate":0,"index":162},{"krate":0,"index":165},{"krate":0,"index":170},{"krate":0,"index":173},{"krate":0,"index":176},{"krate":0,"index":178},{"krate":0,"index":180},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":185},{"krate":0,"index":187},{"krate":0,"index":189},{"krate":0,"index":192},{"krate":0,"index":199}],"decl_id":null,"docs":" This module defines the [`Reader`] struct.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":116},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":24840,"byte_end":24846,"line_start":87,"line_end":87,"column_start":12,"column_end":18},"name":"Reader","qualname":"::reader::Reader","value":"Reader {  }","parent":null,"children":[{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121}],"decl_id":null,"docs":" Wrapper for BufRead allowing easy parsing values from a Reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":25213,"byte_end":25216,"line_start":101,"line_end":101,"column_start":12,"column_end":15},"name":"new","qualname":"<Reader<B>>::new","value":"fn (buf: B) -> Reader<B>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a BufRead.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":27118,"byte_end":27134,"line_start":162,"line_end":162,"column_start":12,"column_end":28},"name":"from_stdin_naive","qualname":"<Reader<io::BufReader<io::Stdin>>>::from_stdin_naive","value":"fn () -> Reader<io::BufReader<io::Stdin>>","parent":null,"children":[],"decl_id":null,"docs":" Wraps stdin in the reader making some assumptions","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":27800,"byte_end":27804,"line_start":185,"line_end":185,"column_start":12,"column_end":16},"name":"open","qualname":"<Reader<io::BufReader<fs::File>>>::open","value":"fn <P> (path: P) -> io::Result<Reader<io::BufReader<fs::File>>>","parent":null,"children":[],"decl_id":null,"docs":" Opens a file and wraps in Reader","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":28425,"byte_end":28434,"line_start":202,"line_end":202,"column_start":12,"column_end":21},"name":"continue_","qualname":"<Reader<B>>::continue_","value":"fn <T> (&mut self) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Parses a FromStream value without specialy treating newlines (just like `scanf` or `cin>>`)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":28709,"byte_end":28714,"line_start":210,"line_end":210,"column_start":12,"column_end":17},"name":"parse","qualname":"<Reader<B>>::parse","value":"fn <T> (&mut self) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Same as `continue_`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":28927,"byte_end":28928,"line_start":217,"line_end":217,"column_start":12,"column_end":13},"name":"p","qualname":"<Reader<B>>::p","value":"fn <T> (&mut self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Just .continue_().unwrap().","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":29335,"byte_end":29341,"line_start":228,"line_end":228,"column_start":12,"column_end":18},"name":"finish","qualname":"<Reader<B>>::finish","value":"fn <T> (&mut self) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Parses remaining part of reader into FromStream value\n in a line-agnostic way.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":31083,"byte_end":31087,"line_start":283,"line_end":283,"column_start":12,"column_end":16},"name":"line","qualname":"<Reader<B>>::line","value":"fn <T> (&mut self) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Reads a new line from input and parses it into FromStream value **as a whole**.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":31393,"byte_end":31403,"line_start":291,"line_end":291,"column_start":12,"column_end":22},"name":"start_line","qualname":"<Reader<B>>::start_line","value":"fn <T> (&mut self) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Reads a new line from input and parses some part of it into FromStream value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":31689,"byte_end":31702,"line_start":299,"line_end":299,"column_start":12,"column_end":25},"name":"continue_line","qualname":"<Reader<B>>::continue_line","value":"fn <T> (&mut self) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Parses some part of current line into FromStream value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":32368,"byte_end":32379,"line_start":317,"line_end":317,"column_start":12,"column_end":23},"name":"finish_line","qualname":"<Reader<B>>::finish_line","value":"fn <T> (&mut self) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Parses remaining part of current line into FromStream value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":33116,"byte_end":33125,"line_start":336,"line_end":336,"column_start":12,"column_end":21},"name":"next_line","qualname":"<Reader<B>>::next_line","value":"fn (&mut self) -> Result<&str>","parent":null,"children":[],"decl_id":null,"docs":" Reads a new line and returns it.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":33366,"byte_end":33376,"line_start":344,"line_end":344,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Reader<B>>::into_inner","value":"fn (self) -> B","parent":null,"children":[],"decl_id":null,"docs":" Gets underlying buffer back.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":165},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":34544,"byte_end":34549,"line_start":382,"line_end":382,"column_start":12,"column_end":17},"name":"Error","qualname":"::reader::Error","value":"Error {  }","parent":null,"children":[{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169}],"decl_id":null,"docs":" An error type containing a lineinfo.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":34982,"byte_end":34992,"line_start":397,"line_end":397,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Error>::into_inner","value":"fn (self) -> stream::Error","parent":null,"children":[],"decl_id":null,"docs":" Obtains an underlying error, by stripping the location info.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":35347,"byte_end":35355,"line_start":408,"line_end":408,"column_start":12,"column_end":20},"name":"location","qualname":"<Error>::location","value":"fn (&self) -> Option<(u64, usize)>","parent":null,"children":[],"decl_id":null,"docs":" Obtains a location (line, column) of the error.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":187},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":38478,"byte_end":38484,"line_start":533,"line_end":533,"column_start":10,"column_end":16},"name":"Result","qualname":"::reader::Result","value":"::std::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" Result with `Error` as an error variant.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":206},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":1997,"byte_end":2007,"line_start":75,"line_end":75,"column_start":8,"column_end":18},"name":"parse_line","qualname":"::parse_line","value":"fn <T> () -> reader::Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Parse [`FromStream`] value from one line of stdin.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":210},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":2677,"byte_end":2689,"line_start":96,"line_end":96,"column_start":8,"column_end":20},"name":"parse_string","qualname":"::parse_string","value":"fn <T> (s: &str) -> stream::Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Parse [`FromStream`] value from string.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":212},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":3310,"byte_end":3321,"line_start":117,"line_end":117,"column_start":8,"column_end":19},"name":"parse_stdin","qualname":"::parse_stdin","value":"fn <T> () -> reader::Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Parse the whole stdin as a [`FromStream`] value","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":214},"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":4134,"byte_end":4144,"line_start":148,"line_end":148,"column_start":8,"column_end":18},"name":"parse_file","qualname":"::parse_file","value":"fn <T, P> (path: P) -> reader::Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Parses a whole file as a [`FromStream`] value","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":4682,"byte_end":4697,"line_start":14,"line_end":14,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":12}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":5215,"byte_end":5235,"line_start":29,"line_end":29,"column_start":10,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":5563,"byte_end":5583,"line_start":42,"line_end":42,"column_start":23,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":24},{"krate":0,"index":25}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":6223,"byte_end":6243,"line_start":70,"line_end":70,"column_start":24,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":28}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":10164,"byte_end":10169,"line_start":188,"line_end":188,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":11582,"byte_end":11587,"line_start":240,"line_end":240,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":47}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":11679,"byte_end":11684,"line_start":244,"line_end":244,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":49},{"krate":0,"index":50}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":12391,"byte_end":12396,"line_start":264,"line_end":264,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":52}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":12685,"byte_end":12690,"line_start":274,"line_end":274,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":55}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":13163,"byte_end":13169,"line_start":290,"line_end":290,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":60}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":15285,"byte_end":15291,"line_start":363,"line_end":363,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":15653,"byte_end":15656,"line_start":374,"line_end":374,"column_start":36,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":17298,"byte_end":17302,"line_start":41,"line_end":41,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":18349,"byte_end":18356,"line_start":79,"line_end":79,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":19007,"byte_end":19015,"line_start":101,"line_end":101,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":20286,"byte_end":20292,"line_start":140,"line_end":140,"column_start":58,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":21701,"byte_end":21715,"line_start":182,"line_end":182,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":101},{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":25065,"byte_end":25071,"line_start":97,"line_end":97,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":25376,"byte_end":25382,"line_start":111,"line_end":111,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":25656,"byte_end":25662,"line_start":123,"line_end":123,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":27242,"byte_end":27248,"line_start":167,"line_end":167,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":28302,"byte_end":28308,"line_start":200,"line_end":200,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":138},{"krate":0,"index":140},{"krate":0,"index":142},{"krate":0,"index":144}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":30180,"byte_end":30186,"line_start":256,"line_end":256,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":152},{"krate":0,"index":154},{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":32776,"byte_end":32782,"line_start":329,"line_end":329,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":160},{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":33439,"byte_end":33445,"line_start":347,"line_end":347,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":164}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":34823,"byte_end":34828,"line_start":393,"line_end":393,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":171},{"krate":0,"index":172}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":35728,"byte_end":35733,"line_start":424,"line_end":424,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":174},{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":35895,"byte_end":35900,"line_start":429,"line_end":429,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":177}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":35986,"byte_end":35991,"line_start":433,"line_end":433,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":37499,"byte_end":37504,"line_start":494,"line_end":494,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":37738,"byte_end":37743,"line_start":503,"line_end":503,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":39553,"byte_end":39559,"line_start":572,"line_end":572,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":1231,"byte_end":1237,"line_start":47,"line_end":47,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":5}},{"kind":"Mod","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":1282,"byte_end":1290,"line_start":50,"line_end":50,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":79}},{"kind":"Mod","span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/lib.rs","byte_start":1301,"byte_end":1307,"line_start":52,"line_end":52,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":104}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":4682,"byte_end":4697,"line_start":14,"line_end":14,"column_start":24,"column_end":39},"kind":{"Impl":{"id":0}},"from":{"krate":2,"index":30301},"to":{"krate":0,"index":8}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":5215,"byte_end":5235,"line_start":29,"line_end":29,"column_start":10,"column_end":30},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":13},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":5563,"byte_end":5583,"line_start":42,"line_end":42,"column_start":23,"column_end":43},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":13},"to":{"krate":2,"index":3599}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":6223,"byte_end":6243,"line_start":70,"line_end":70,"column_start":24,"column_end":44},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":13},"to":{"krate":0,"index":8}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":8277,"byte_end":8282,"line_start":130,"line_end":130,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":1540},"to":{"krate":0,"index":33}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":10164,"byte_end":10169,"line_start":188,"line_end":188,"column_start":6,"column_end":11},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":224},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":11582,"byte_end":11587,"line_start":240,"line_end":240,"column_start":26,"column_end":31},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":224},"to":{"krate":2,"index":2224}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":11679,"byte_end":11684,"line_start":244,"line_end":244,"column_start":30,"column_end":35},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":224},"to":{"krate":1,"index":1616}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":12391,"byte_end":12396,"line_start":264,"line_end":264,"column_start":30,"column_end":35},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":224},"to":{"krate":2,"index":7575}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":12685,"byte_end":12690,"line_start":274,"line_end":274,"column_start":26,"column_end":31},"kind":{"Impl":{"id":9}},"from":{"krate":1,"index":2477},"to":{"krate":2,"index":2224}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":13163,"byte_end":13169,"line_start":290,"line_end":290,"column_start":23,"column_end":29},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":37},"to":{"krate":0,"index":56}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":15285,"byte_end":15291,"line_start":363,"line_end":363,"column_start":36,"column_end":42},"kind":{"Impl":{"id":12}},"from":{"krate":2,"index":29307},"to":{"krate":0,"index":33}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/stream.rs","byte_start":15653,"byte_end":15656,"line_start":374,"line_end":374,"column_start":36,"column_end":39},"kind":{"Impl":{"id":13}},"from":{"krate":5,"index":3813},"to":{"krate":0,"index":33}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":17298,"byte_end":17302,"line_start":41,"line_end":41,"column_start":21,"column_end":25},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":332},"to":{"krate":0,"index":33}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":18349,"byte_end":18356,"line_start":79,"line_end":79,"column_start":21,"column_end":28},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":344},"to":{"krate":0,"index":33}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":19007,"byte_end":19015,"line_start":101,"line_end":101,"column_start":36,"column_end":44},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":356},"to":{"krate":0,"index":33}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":20286,"byte_end":20292,"line_start":140,"line_end":140,"column_start":58,"column_end":64},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":377},"to":{"krate":0,"index":33}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/adapters.rs","byte_start":21701,"byte_end":21715,"line_start":182,"line_end":182,"column_start":36,"column_end":50},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":387},"to":{"krate":0,"index":33}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":25065,"byte_end":25071,"line_start":97,"line_end":97,"column_start":22,"column_end":28},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":116},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":25376,"byte_end":25382,"line_start":111,"line_end":111,"column_start":6,"column_end":12},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":116},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":25656,"byte_end":25662,"line_start":123,"line_end":123,"column_start":6,"column_end":12},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":116},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":27242,"byte_end":27248,"line_start":167,"line_end":167,"column_start":6,"column_end":12},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":116},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":28302,"byte_end":28308,"line_start":200,"line_end":200,"column_start":22,"column_end":28},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":116},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":30180,"byte_end":30186,"line_start":256,"line_end":256,"column_start":22,"column_end":28},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":116},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":32776,"byte_end":32782,"line_start":329,"line_end":329,"column_start":22,"column_end":28},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":116},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":33439,"byte_end":33445,"line_start":347,"line_end":347,"column_start":36,"column_end":42},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":116},"to":{"krate":0,"index":8}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":34823,"byte_end":34828,"line_start":393,"line_end":393,"column_start":6,"column_end":11},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":165},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":35728,"byte_end":35733,"line_start":424,"line_end":424,"column_start":19,"column_end":24},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":165},"to":{"krate":1,"index":1616}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":35895,"byte_end":35900,"line_start":429,"line_end":429,"column_start":31,"column_end":36},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":165},"to":{"krate":2,"index":2215}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":35986,"byte_end":35991,"line_start":433,"line_end":433,"column_start":26,"column_end":31},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":165},"to":{"krate":2,"index":2224}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":37499,"byte_end":37504,"line_start":494,"line_end":494,"column_start":23,"column_end":28},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":165},"to":{"krate":2,"index":7575}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":37738,"byte_end":37743,"line_start":503,"line_end":503,"column_start":21,"column_end":26},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":165},"to":{"krate":2,"index":7570}},{"span":{"file_name":"/Users/masatoshi/.cargo/registry/src/github.com-1ecc6299db9ec823/whiteread-0.5.0/src/reader.rs","byte_start":39553,"byte_end":39559,"line_start":572,"line_end":572,"column_start":39,"column_end":45},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":37},"to":{"krate":0,"index":192}}]}